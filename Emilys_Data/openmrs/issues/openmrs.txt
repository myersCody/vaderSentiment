LGTM

LGTM (formatting only)

Do you have a unit test for this to either un-@ignore or to actually test this?

The other unit tests are not failing, so this is the same result as not having it grouped by. 
SQL-99 standard says it should be single-value, but MySQL (and HSQL) is fine with it. So don't know how to test this on HSQL in-memory :(

There are a lot of random line changes in the first few files.  Can you clean those up with another commit so we can review it a little easier? Thanks!

I've just removed quite a bit of whitespace, think it's intellij doing something weird. Hopefully it's a bit better now, let me know if I need to do more!

Looks perfect. Can you revert the changes to the Constants and the Util files?  I can then merge automatically.

Done, thank you.

mistaken merge

Looks good to me thanks Martinez!

Can you edit that one line and commit again?  We can then merge this into core.

Wyclif, can you merge to master in a way that makes sure lluismf shows as the author? 

I don't know if that is possible

It is possible, but may not be with what you have committed here.  Looks
like you had his correctly, then you reverted and redid it.  You might have
to redo it once again in master or in your fork so that he shows as the
author.  When commiting/pushing via egit in eclipse it gives you the
"author" field which you can set to anyone.

On Tue, Sep 4, 2012 at 4:44 PM, wluyima notifications@github.com wrote:

> I don't know if that is possible
> 
> —
> Reply to this email directly or view it on GitHubhttps://github.com/openmrs/openmrs-core/pull/21#issuecomment-8278103.

I think you reverted the wrong files.  Now I only see the Constants and Util files as changed! :-)

Looks fine. Make those quick changes and merge to master

Made changes at https://github.com/wluyima/openmrs-core/commit/2d2d541cb8616ce9281fa742721f48d9caabd8f7

Sorry Ben, I need to learn a bit more about Git and project workflow. I am doing it now :-D

Do we have unit tests for the UserValidator class already?  If so, can you add two tests to prove that your new GP is working?

@rkorytkowski can you take a look at this? 

Closing this pull request because opening another one. 
New pull request - https://github.com/openmrs/openmrs-core/pull/27

I merged this into core manually with a rebase.  Saptarshi, please update your master and close your branch.  See https://github.com/openmrs/openmrs-core/commit/7428e2acd4e2eb3ddc6d214d8a3fd24e8e43db73

Let me know if you have any problems with the update due to the rebase!  

Also, you seem to be missing a few unit tests for the new api method you added.

Thanks David! I needed to change the test name to include "should" per convention. Committed in https://github.com/openmrs/openmrs-core/commit/34d76e2169c293649f6bbf79908ff7ab437cce0a

Why did you do a pull request for this?  Would be easiest to just push to upstream (after doing a pull --rebase to get all updates)

Because I'm trying to learn how to do this, in advance of Thursday's call...

Ah, so are you trying both methods?  Both the merge pull request button and the rebasing option?  This looks like you used the merge button

I'm not actually trying both methods, I was just making a small change and
committing it in the way that seemed obvious at the time, to see how
painful it was. (Pretty painful.)

-Darius

On Tue, Sep 18, 2012 at 1:22 PM, Ben Wolfe notifications@github.com wrote:

> Ah, so are you trying both methods? Both the merge pull request button and
> the rebasing option? This looks like you used the merge button
> 
> —
> Reply to this email directly or view it on GitHubhttps://github.com/openmrs/openmrs-core/pull/29#issuecomment-8668933.

Added some tests for Person Service, let me know if they're acceptable or not :)

Tom, good job with tests.

More work on this seems to have been done in https://github.com/openmrs/openmrs-core/pull/31

Hi Ben,
Yes, Mike Le did the work you requested and created that pull request on
placed the work he did on the JIRA issue
https://tickets.openmrs.org/browse/TRUNK-3651

I just requested a code review on the same issue.  Is there anything else I
shoudl do for this?

Joaquín

---

Gerente de Desarrollo, eHealth Systems http://www.ehs.cl/
Research Fellow, Escuela de Medicina de Harvard http://hms.harvard.edu/
Moderador, GHDOnline.org http://www.ghdonline.org/

On Wed, Sep 19, 2012 at 9:26 AM, Rafal Korytkowski <notifications@github.com

> wrote:
> 
> More work on this seems to have been done in openmrs/openmrs-core#31https://github.com/openmrs/openmrs-core/issues/31
> 
> —
> Reply to this email directly or view it on GitHubhttps://github.com/openmrs/openmrs-core/pull/24#issuecomment-8689243.

I have use EmailValidator from apache commons

I see log1 and log2 files committed.  Can you revert those commits?

Can you write a unit test for this?

Looks good.  Do you mind if I squash these into one commit and rebase them onto core?

Sure. :) Reason for many commits is that initially i did the changes on my master repo. I think it will be great to have a one commit. 

This is a strange fix.  What is the id returned?  Why is it not "2" ?

I would point out that ReportSchemaXml has been deprecated for several versions already, and to the best of our knowledge nobody is using it in production.

I would prefer to just @Ignore the test, or even remove it, if we don't understand what it's doing.

If we look at the ReportSchemaXml domain class it has two methods to access its primary key (id). getReportSchemaId() and getId() method. When we ask the service to save the object, it assigns this id attribute through  hibernate while persisting the object.
So when it execute following code snippet we can retrieve the exact object we saved previously.

``` java
rs.saveReportSchemaXml(reportSchemaXml);
ReportSchemaXml reportSchemaXmlFromDB = rs.getReportSchemaXml(reportSchemaXml.getId());
```

Problem with jdk7 was it cannot retrieved the ReportSchemaXml through the hard coded id.

``` java
ReportSchemaXml reportSchemaXmlFromDB = rs.getReportSchemaXml(2);
```

Here we dont get any ReportSchemaXml since at that time it has only one object in memory data base which has the id 1. Actually here what we want is to retrieve the exact domain object we saved or update early. And we can do it using the object id as shown in above code snippet.

@bwolfe 
Ops..putting it as 2 is a mistake. Sorry for that. Initially what I thought is to remove that reportSchemaXmlJodion variable since it has not tested.

I agree with darius that we might just @ignore this instead of giving some strange fix. 

@esudharaka, can you debug the test on jdk7 and see what reportSchemaXml.getId() is returning?  Why is it returning 1 in my jdk6 environment but 2 in jdk7?

I'm planning to do more commits to this branch, so please don't rebase this. :-)

A few minor suggestions, but otherwise looks fine @djazayeri 

Ticket info@ https://tickets.openmrs.org/browse/TRUNK-2751

Pulled this in 7195b0e6892e90dabe29b296cb43f4ebff77b8ce

FYI: you should create a branch for every different ticket you work on.  You can only submit one pull request per branch, so if you work on multiple tickets at once they all end up smashed together!  There is section on creating a branch on the https://wiki.openmrs.org/display/docs/Using+Git page.

Committed in e83356e5b2cb52b77568f1d8e8dc755b5d040939

This is actually by Zabil.
Vatsal's name got added because I am using this machine.

Looks good. No real sctructural changes needed, just a few convention-following updates and its ready to go!

I will address the code review comments and merge this. Thanks Zabil!

Pushed to master as ed8ba7ef0fb8b3a18c9d1dcfbc2b8bfb090704ed
Code review fixes as 6be824b12bb94670748d3d5236d44455f3a7eb43

This is Zabil's master branch, so I didn't rebase.

Closing this pull request, I'll make a new one related to a single ticket.

Merged into core with rebase

Merged to core with rebase

Merged to 1.7.x with the merge button (and not rebase) so as to not screw up your rwandamoh-emr:1.7.x branch

If you create a pull request for 1.6.x we can also merge it there, but odds are low that we ever release another 1.6.x of openmrs

Merged to trunk with a rebase

sorry, I don't seem to be getting notifications on my pull requests. I'll fix these things up and commit as soon as possible!

The only file/commit that is for this ticket is the last one.  Be sure you clean your master before creating a new branch.  And make sure you don't have things committed to your master that aren't in the upstream core master

Merged to trunk with a rebase. 

Merged to core with the button here in github.  Thanks!

Gaurav, for your next patch, please remember to do it against a branch of your fork, not in your master. 

Closing this pull request because daniel pushed it to core/master directly, see https://github.com/openmrs/openmrs-core/commit/d5c478a3a425d19ca75441ac78de64dd12ef3b6a

Can you add a unit test that fails before you make the change and passes after?  

Can you put the ticket title as well as ticket id in the pull request title?  In the desc put the full link/url to the ticket.  Thanks!

just some minor updates.  But after doing them, can you use git to squash your commits into one?  "git rebase -i HEAD~3" is the command to bring up the interactive way to do it.

Merged to core and backported to 1.9.x/1.8.x using rebase and then cherry-pick

I think this is exactly what we had before! :-) Can you change this to like it was doing before you change except using Object like in the ticket comments?

Thanks Ben. Will take care of it from next time.

This is definitely not like before. ;) Now refreshingContextLock is final as it should be whereas refreshingContextCheck can't and isRefreshingContext() is synchronized as well. Basically, this is the way Rafał Korytkowski [meant](https://tickets.openmrs.org/browse/TRUNK-3363?focusedCommentId=190051&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-190051) in the ticket.

It looks about right. I'll need to look through the whole class before applying this, because concurrency is all about details :-)

Ah, I see now.  Not sure what I was doing yesterday, was too quick of a review apparently! :-/

Merged to master with a rebase. See https://github.com/openmrs/openmrs-core/commit/a3be04ffc20ed6beb96a5f235d34a89439fc8c60

Yep, well done!  I see only one commit in the "commits" tab now. 

Merged to master with rebase in https://github.com/openmrs/openmrs-core/commit/c67cd20825619c8b6fd193b5f09db98422d61554

Thanks Lluis!

(be sure to update your fork/master with a git pull before creating your next branch so that you stay close to the tree)

Merged to master with rebase and then squash to make it only one commit: https://github.com/openmrs/openmrs-core/commit/f6d1c190fc614236e7c2d6a8037ff6e709dbfccd

Made changes at https://github.com/wluyima/openmrs-core/commit/d4979465138c2bf2a82dfaccebaed346e1ecdab9

Merged to master with a rebase.  See https://github.com/openmrs/openmrs-core/commit/244b2a5edbd7ad42c2ebdbd9980b45a3d430b24f Thanks Lluis!

Looks fine to me.

A few very minor readability changes with those booleans and it should be fine to push

Strange that these other commits are showing up.  Did you do a git pull on your branch?  I think a "git pull --rebase" and then "git push -f" would have kept this branch clean by updating your branch commits to be after the other newly pulled in commits. (just guessing, haven't tested this theory before)

I squashed your commits and rebased out the others and merged it ot master: https://github.com/openmrs/openmrs-core/commit/597af49c981adb4ba1606e7633364b143398227c

Sorry about this mess here... I didn't realize that updating my branch would be reflected here.  Nothing to see here, please move on

Committed (rebased with a small correction) in https://github.com/openmrs/openmrs-core/commit/0029be04cc280e9a38a7d436ca3e61ce0731458b

modifyDataType replaced by ext:modifyColumn as requested.

Committed with rebase in https://github.com/openmrs/openmrs-core/commit/26ad5e26ceb9e8dfa4c6cb2f972f2ec3508e35e0

Committed with rebase in https://github.com/openmrs/openmrs-core/commit/5a5d9a7502e935f197f8542d4f4611d1d4dc2dc7

Committed with rebase in https://github.com/openmrs/openmrs-core/commit/ee2d1c63c8d211f3804e2d9a1cb3f41b9bf9c1b0

Conflicts resolved manually.

Committed with rebase in https://github.com/openmrs/openmrs-core/commit/3e2b3d0924a98fccf8e8d2d3824a523373669ccc

(fixed formatting)

Lluis, could you please add a test here?

Looks good, feel free to merge. Wyclif as a core dev you should be committing code to upstream most of the time. Pull requests are optional for you and you should be merging them right after you create them so that you don't have to resolve conflicts later.

Committed with rebase in https://github.com/openmrs/openmrs-core/commit/74cd4e18641f028aa93ab11add98a0b5ec2882c9

I needed to move the logging inside the while loop.

Thanks Piotr!

Continued at https://github.com/openmrs/openmrs-core/issues/31 

@wluyima feel free to merge it asap before there are too many merge conflicts...

This is an invalid pull request. I'm closing it.

Which ticket is this?

body{font-size:10pt;font-family:arial,sans-serif;background-color:#ffffff;color:black;}p{margin:0px;}Hi Rafal,TRUNK-3321. What do you want me to do about this?Thanks,Andrea-----Original Message-----
From: Rafal Korytkowski Sent: Oct 25, 2012 5:26 AM
To: openmrs/openmrs-core Cc: andreapat Subject: Re: [openmrs-core] ValidateUtil validate method: added null check  (#36)

Which ticket is this?

```
          —
          Reply to this email directly or view it on GitHub.
```

body{font-size:10pt;font-family:arial,sans-serif;background-color:#ffffff;color:black;}p{margin:0px;}body{font-size:10pt;font-family:arial,sans-serif;background-color:#ffffff;color:black;}p{margin:0px;}Rafal,It's TRUNK-3321. This is the pull request I wanted to close. What should I do now?Thanks,Andrea-----Original Message-----
From: Rafal Korytkowski Sent: Oct 25, 2012 5:26 AM
To: openmrs/openmrs-core Cc: andreapat Subject: Re: [openmrs-core] ValidateUtil validate method: added null check  (#36)

Which ticket is this?

```
          —
          Reply to this email directly or view it on GitHub.
```

Click the close button to close it! :-)

You're welcome! :)

@andreapat will you address Ben's comments?

Closing as it's already resolved. See https://tickets.openmrs.org/browse/TRUNK-3321

body{font-size:10pt;font-family:arial,sans-serif;background-color:#ffffff;color:black;}p{margin:0px;}Rafa,I did address that a long tome ago.Andrea-----Original Message-----
From: Rafal Korytkowski Sent: Oct 26, 2012 2:35 AM
To: openmrs/openmrs-core Cc: andreapat Subject: Re: [openmrs-core] Trunk 3701 Removed odd void reason message  (#34)

@andreapat will you address Ben's comments?

```
          —
          Reply to this email directly or view it on GitHub.
```

Hi Rafal, what do you mean by backported to 1.9.2, it hasn't even come out yet?  do you mean do we want to keep this funciontality?  sorry, don't know what you mean.

Hi Joaquin, sorry I meant to ask if you want it to be available in 1.9.2 (when it's released) or you're fine if it is in 1.10 only?

Ok, so I'm closing this. Thanks Andrea!

I would prefer it be in 1.9.2

Joaquin

---

Gerente Tecnológico, eHS (www.ehs.cl)
Moderador, GHDonline.org
Fellow, Escuela de Medicina de Harvard
On Oct 27, 2012 6:13 AM, "Rafal Korytkowski" notifications@github.com
wrote:

> Hi Joaquin, sorry I meant to ask if you want it to be available in 1.9.2
> (when it's released) or you're fine if it is in 1.10 only?
> 
> —
> Reply to this email directly or view it on GitHubhttps://github.com/openmrs/openmrs-core/pull/31#issuecomment-9833904.

Committed in https://github.com/openmrs/openmrs-core/commit/ffe6f8e47642b25a4943cf15a00f0ca5f9523ebd

Committed in https://github.com/openmrs/openmrs-core/commit/16051c862fdabe4e3a6acb36a60004b52dcb8e2d

Merged with fixed formatting in https://github.com/openmrs/openmrs-core/commit/de5ae730232f93baa2eb09be58c27f262d337d14

Lluis please remember to run mvn install -DskipTests=true before your commits so that the formatting is fixed.

Thanks!

body{font-size:10pt;font-family:arial,sans-serif;background-color:#ffffff;color:black;}p{margin:0px;}Good. Thanks Rafal!-----Original Message-----
From: Rafal Korytkowski Sent: Oct 27, 2012 2:17 AM
To: openmrs/openmrs-core Cc: andreapat Subject: Re: [openmrs-core] Trunk 3701 Removed odd void reason message  (#34)

Ok, so I'm closing this. Thanks Andrea!

```
          —
          Reply to this email directly or view it on GitHub.
```

Committed with further fixes in https://github.com/openmrs/openmrs-core/commit/07717c1721a2fd2783bc2a214fdba63eaad44e77

Will back port it to 1.9.x.

Thanks Rafal!

Joaquín

---

Gerente de Desarrollo, eHealth Systems http://www.ehs.cl/
Research Fellow, Escuela de Medicina de Harvard http://hms.harvard.edu/
Moderador, GHDOnline.org http://www.ghdonline.org/

On Mon, Oct 29, 2012 at 1:13 PM, Rafal Korytkowski <notifications@github.com

> wrote:
> 
> Committed with further fixes in openmrs/openmrs-core@07717c1https://github.com/openmrs/openmrs-core/commit/07717c1721a2fd2783bc2a214fdba63eaad44e77
> 
> Will back port it to 1.9.x.
> 
> —
> Reply to this email directly or view it on GitHubhttps://github.com/openmrs/openmrs-core/pull/31#issuecomment-9873960.

Thanks Yonatan. In the future please remember to include the ticket id in your commit message. It should say something like:

TRUNK-2681: When changing password, the verification of values of newPassword field and confirmPassword field fails

Merged with rebase in https://github.com/openmrs/openmrs-core/commit/bd42f7d591b91af32bc29a99ad2786fa57b5a5f6

Merged in https://github.com/openmrs/openmrs-core/commit/e5df9900871a8eca47be8add73b9e33aee2b7b43

Thanks a lot Lluis!

Andrea in the future don't close pull requests after addressing the comments. Just commit & push to your fork and the pull request will be automatically updated.

Merged in https://github.com/openmrs/openmrs-core/commit/d09c3eae36ad57071b141a96bc3edee328b1c5f9

Merged in https://github.com/openmrs/openmrs-core/commit/c6521bc7c7afe0f980ffd7238467dd266751caaf

body{font-size:10pt;font-family:arial,sans-serif;background-color:#ffffff;color:black;}p{margin:0px;}ok!-----Original Message-----
From: Rafal Korytkowski Sent: Nov 2, 2012 5:33 AM
To: openmrs/openmrs-core Cc: andreapat Subject: Re: [openmrs-core] Trunk 3616 (#101)

Andrea in the future don't close pull requests after addressing the comments. Just commit & push to your fork and the pull request will be automatically updated.

```
          —
          Reply to this email directly or view it on GitHub.
```

Done, need to back port to relevant branches and close ticket

I'm very excited to see this refactoring happening!

A couple of comments:
- I've been thinking that instead of having FormDAO handle Form, Field, FieldType, etc, we should split each of these into its own DAO that just handles a single class. (They'd all be wired into FormService.) Then instead of having base class methods like **\* that take a class, we'd instantiate our base class with the one class we're managing, and it could have methods like ***.
- For example see what's done here: https://github.com/openmrs/openmrs-module-uiframework/blob/master/api/src/main/java/org/openmrs/ui/framework/db/hibernate/SingleClassHibernateDAO.java
- If we change things this way, then I'd rename OpenmrsDAO to OpenmrsMetadataDAO (assuming we'll want a similar OpenmrsDataDAO too)

Thoughts?

(Including @rkorytkowski )

I have a thought... can we limit comments in github to comments about the pull request and, if we're going to have design discussions in JIRA, not also start having some of them in github pull request comments too? ;-)

I was originally going to make these comments directly on the lines in the files, as code review, but realized they were cross-cutting.

I suppose I could have made the comment on the JIRA ticket, and made another comment here saying "don't merge this pull request until the ticket conversation has completed"... that's an annoying amount of extra work, but I guess worth it.

Can you please open a new pull request from your branch to 1.8.x instead of master? Thanks!

Merge commit: https://github.com/openmrs/openmrs-core/commit/60c7474a6d33bd45efcaaec483922196ae4d6765

Hi Jean, I need to apply it to 1.9.x and 1.10.x, which will be cleaner with one commit. Do you mind if I squash your 3 commits into one?

Merged with rebase in https://github.com/openmrs/openmrs-core/commit/fb9f998f5a415226a0a2cd5be4c8a7701aefaf4d

Nevermind. I'll commit the change. Just do it right in the future.

No, and I do apologise for having 3 commits.

The work is stopped on this until we are reassured we want this to happen.

Thanks Jean!

Squashed, adjusted and merged to 1.9.x in https://github.com/openmrs/openmrs-core/commit/ca500a26f509834a2e2ea69dd8d1821d06e2c494

I slightly changed the logic to allow for retired duplicates if there is a unique unretired program.

For backwards compatibility, I don't think we want to require this method.  The thought was that iff a module activator has a non-public daemonToken property, the module service would inject a secure token that the module could use to identify itself to Daemon.

I think we should probably add a new interface for this, that extends
ModuleActivator (or is it just Activator?) and adds a
setDaemonToken(DaemonToken) method.

Per Burke's point, we can use PropertyUtils on the bean to make sure it
doesn't have a getDaemonToken() method, and if it does, we don't give them
the secure token (and we log a warning for this).

We can't actually prevent people from giving away their secure token if
they really want to, but we should prevent the obvious accidental way.

On Fri, Nov 9, 2012 at 6:40 AM, Burke Mamlin notifications@github.comwrote:

> For backwards compatibility, I don't think we want to require this method.
> The thought was that iff a module activator has a non-public daemonToken
> property, the module service would inject a secure token that the module
> could use to identify itself to Daemon.
> 
> —
> Reply to this email directly or view it on GitHubhttps://github.com/openmrs/openmrs-core/pull/111#issuecomment-10228320.

The javadocs for ModuleActivator strongly recommend module developers to extend BaseModuleActivator and not implement ModuleActivator directly, the goal was to be able to add new methods to it without worrying about breaking existing code because we knew we would definitely add new ones.

Though i also think some people wouldn't support this

So I'll give a different option to make it even easier to reconcile ;-) I'll create the DaemonTokenAware interface with setDaemonToken(DaemonToken token). It won't extend anything and if used together with ModuleActivator or Activator, Daemon will pass the token. No reflection this way and it's up to the module where the reference will be stored.

Darius, I don't see a point in checking for getDaemonToken(). The module most likely will not store the reference in activator, rather inject it to some class that needs the token. 

I see Darius suggested almost the same thing as I was writing. I'm fine either way.

And again we have a design discussion on the pull request instead of a ticket. But it's the Internet so it's linked in the ticket and we're good ;)

Ugh. Damn design discussions during code review again.  I'll read any design comments added to the ticket and will ignore these.

@bmamlin this really isn't a _design_ discussion...this seems totally fine to discuss here.

Lluis, I don't see any unit tests.  Do any already exist, or can you write one to ensure this doesn't happen again?

David, any particular reason you created this pull request for your master instead of a topic branch? The topic branch should be preferred.

Fixing CI for openmrs-core - TRUNK-3708

It's good to commit.

Tests OOM for me too. I'll look into that.

Committed (with some improvements) in https://github.com/openmrs/openmrs-core/commit/f1f265a461f3a1febf744e17dd5b7647c2deda36

I applied this.

Hi Tom, I just ran into this bug on my current Mirebalais project, and I came across this pull request.

Do you have a status update? From reading through I think that you addressed most of Rafal's comments, but still needed to do a bit more?

Hey yeah really sorry I've been moving country- ill try and sort it out Monday for sure!

Tom

Sent from my iPhone

On 16/11/2012, at 21:26, Darius Jazayeri notifications@github.com wrote:

> Hi Tom, I just ran into this bug on my current Mirebalais project, and I came across this pull request.
> 
> Do you have a status update? From reading through I think that you addressed most of Rafal's comments, but still needed to do a bit more?
> 
> —
> Reply to this email directly or view it on GitHub.

Only thing I suggest is perhaps clearing the valueDrug text field if a new concept was chosen in valueCoded.

looks good

Rebased and manually merged in https://github.com/openmrs/openmrs-core/commit/99fb3b2bc45d514ed18b10b59885c20a6327b03e

Rebased and merged in https://github.com/openmrs/openmrs-core/commit/c6770a467e06ef099fb3e4beb3b47111f3af7ba3

Hi Ishara,

This is not quite the correct solution. I'll comment on the ticket.

@djazayeri may I ask you to review it again? Personally I don't like it. Tokens add complexity with no gain. Do you still want them?

I thought you needed to add a validator and do this validation on the server side

I don't see any modifications to ModuleFactory, and I'd assume we need changes there to actually call setDaemonToken on the DaemonTokenAware module activators...

@rkorytkowski Yes, we need to implement this DaemonToken approach. It's what the doctor ordered.

Really I'm still not a big fan of doing this--I think that the methods were fine as they were before--but Burke _really, really_ wants this. And I can see how in some future world this approach will let us actually apply some security restrictions to modules. So, yes, we must do it this way.

I put a line which calls setDeamonToken in ModuleUtil where contextRefreshed() and started() are called. We need to call setDaemonToken just before them so unless I refactor code in ModuleFactory I can't really call it there.

I'm closing this pull request as it will be done in a different branch.

Latest commit:
commit cce7f8f84c86da3675d37fb7b459b9b02bf54322
Author: andreapat apattson@earthlink.net
Date:   Mon Nov 26 15:03:13 2012 -0800

```
TRUNK-3474
Remove not null constraint completely (was not-null="false") from
Hibernate mapping files.
```

Thanks for the info @wluyima 

Looks good, i will apply the comments i left behind

looks good!

@djazayeri you may want to disagree with me here.

Lluis, please do not rebase while working on this ticket and do not update to the latest until we're done.

created a new pull request that include's daniel work at https://github.com/openmrs/openmrs-core/pull/128

The ticket has been cancelled https://tickets.openmrs.org/browse/TRUNK-3616

Redid in https://github.com/openmrs/openmrs-core/commit/8404245b6c82e8a72f25629f3d5d354fc9afe24f

Please see latest commit - Also, how do I squash the last three commits into one if I'm not on a branch?

The code needs to be updated to the latest master with 'git pull --rebase upstream master'. If you want to squash the last three commits on master into one, you just need to do 'git rebase -i HEAD~3'. You will have to do 'git push -f' to force push after rebasing. In the future you should use a dedicated branch for a pull request.

Ok so I'm pretty sure it should be good to go. Did a rebase off master and added the test/code around the PersonAddress bug as well.

Let me know if it's ok, and sorry about the long turn around on this! I'm planning on working more on OpenMRS though so will pick up another story soon :)

Thanks Tom! 2 tests are failing for me when I run mvn clean install.
Failed tests: 
equalsContent_shouldReturnTrueIfOnlyInContentFieldsDifferenceIsBetweenNullAndEmptyString(org.openmrs.PersonNameTest)
Tests in error: 
mergePatients_shouldMergeVisitsFromNonPreferredToPreferredPatient(org.openmrs.api.PatientServiceTest)

I don't have time to look into that right now so I'm just leaving a comment as a reminder.

I asked Alex to redo this pull request against the master branch, from a feature branch.

PersonNameTest was simple to fix (committed and pushed - I squashed the commit which may have been a bad idea in hindsight!). 

There's a failure in mergePatients_shouldMergeVisitsFromNonPreferredToPreferredPatient in PatientServiceTest that I'm finding it hard to figure out though:

``````
java.lang.AssertionError: 
Expected: is <Patient#6>
     got: <Patient#2>```
``````

I'm looking into it, but do you guys have any ideas ? I'm not really familiar with the behavior that functionality is testing...

I pushed this as 41f320bc29dbe2d40f9a2cf2e4445650e9e56cea

PS- Thanks Alex, and thanks Janet Riley for the original patch.

Looks good!

Looks good!

This looks good to me.

We might want to start writing unit tests against things like this?

Got following comment from Rafal: 

In api/src/main/java/org/openmrs/api/impl/PatientServiceImpl.java:

> @@ -945,8 +945,11 @@ public void mergePatients(Patient preferred, Patient notPreferred) throws APIExc
>       }
> 
> ```
>     mergedData.setPriorDateOfDeath(preferred.getDeathDate());
>     if (preferred.getDeathDate() == null)
>     mergedData.setPriorDateOfDeathEstimated(preferred.isDeathdateEstimated());
>     if (preferred.getDeathDate() == null || (preferred.getDeathdateEstimated() && !notPreferred.getDeathdateEstimated())) {
> ```

I don't follow. What did you want to say here?

---

I don't follow it either. Again, just following instructions - change like birthdateEstimated. 
After making all prior mentioned changes there are 2 tests in error (before changes there were 28).
Both these errors were caused by this line: 
if (preferred.getDeathDate() == null || (preferred.getDeathdateEstimated() &&   !notPreferred.getDeathdateEstimated())) 

I tried replacing the if statement with:

```
    if (preferred.getDeathDate() == null)
        preferred.setDeathDate(notPreferred.getDeathDate());

    if (preferred.getDeathdateEstimated() == null)
        preferred.setDeathdateEstimated(notPreferred.getDeathdateEstimated());
```

This caused the following:
java.lang.AssertionError: prior date of death was not audited expected

at org.openmrs.api.PatientServiceTest.mergePatients_shouldAuditPriorDateOfDeath(PatientServiceTest.java:2866)

PatientServiceTest.java:2866
    Assert.assertEquals("prior date of death was not audited", cDate.getTime(), audit.getPersonMergeLogData()
                .getPriorDateOfDeath());

Any suggestions on how to handle this?

Per my comment on HibernatePatientDAO, I think this solution is not okay, and we shouldn't pull this in--it's going to cause other, greater, unintended effects if calling savePatient leads to clearing the hibernate session.

Remember to close https://tickets.openmrs.org/browse/TRUNK-3854 as fixed if the fix works

Hmmm seems to pass now... is there anything else you guys can think of that needs to be done before this is merged/tested?

Please remove me from the list.
Thankx
Jürgen Keiper
www.wir-waren-so-frei.de
www.first-we-take.de
www.lost-films.eu

Deutsche Kinemathek - Museum für Film und Fernsehen
Potsdamer Str. 2
10785 Berlin
Tel.: 030 300 903 645

k-joseph notifications@github.com schrieb:

> method added: rejectIfDuplicateMetadataName()
> 
> You can merge this Pull Request by running:
> 
> git pull https://github.com/k-joseph/openmrs-core TRUNK-3814 
> 
> Or view, comment on, or merge it at:
> 
>   https://github.com/openmrs/openmrs-core/pull/163
> 
> Commit Summary
> 
> Missing Validators for relationship_type-TRUNK-3814Missing Validators for relationship_type-TRUNK-3814aIsToB and bIsToA set addedmodified RelationshipTypeValidator.javamodified RelationshipTypeValidator.javamodified RelationshipType_ValidatorAdding a test class for relationship_type validator,validator for relationship_type, basic validation added.rejectIfDuplicateMetadataName() method addedadded test for relationship_type validator, basic validation added (a… 
> 
> File Changes
> 
> A api/src/main/java/org/openmrs/validator/RelationshipTypeValidator.java (72)A api/src/main/java/org/openmrs/validator/RelationshipTypeValidatorTest.java (120)M api/src/main/java/org/openmrs/validator/ValidateUtil.java (28) 
> 
> Patch Links
> 
> https://github.com/openmrs/openmrs-core/pull/163.patchhttps://github.com/openmrs/openmrs-core/pull/163.diff 
> 
> —
> Reply to this email directly or view it on GitHub. 
> 
> ￼ 

Do you realize the compilation failed on travis? Seems like the same problem you were running into in your dev environment.

Hi @wluyima , looking at your comments I realized that I had not added unit tests to match the @should's in the method which I un-depricated. 
I also added these, and cleaned up the @should stuff. Hope that this second version is more presentable than the last.

Note that the build failed, and see my comment on the ticket for explanation.

When I check this out and try to build, I get the same error mentioned above:

java.lang.AssertionError: 
Expected: is <Patient#6>
     got: <Patient#2>
...
org.openmrs.api.PatientServiceTest.mergePatients_shouldMergeVisitsFromNonPreferredToPreferredPatient(PatientServiceTest.java:647)

Okay, I spent some time looking into this, and it appears that when you refactored the mergePatients method to pull out a mergeEncounters method, you changed the iteration over encounters. It should be:
   for (Encounter e : es.getEncounters(notPreferred, null, null, null, null, null, null, null, null, true)) {

You're using es.getEncountersByPatient, which does not include voided encounters. (It looks like I changed the master code as part of https://tickets.openmrs.org/browse/TRUNK-3804 .)

Changing that method call makes the unit test pass. But I'm now worried that there might be other things lost, if your refactoring out those methods lost any other changes.

@tommunist do you remember the timeline of this, and whether this was lost during a merge, or you made the change intentionally?

Hmm, so when I reran the build after that one-line change, the API unit tests pass, but I get a failing web-layer unit test:

saveShortPatient_shouldNotVoidAddressIfItWasNotChanged(org.openmrs.web.controller.patient.ShortPatientFormControllerTest)

I definitely didn't intentionally do it. When I did break out those methods it was just via the intellij "extract method" functionality. So the only way it could have changed is via a dodgy merge when I rebased... If you'd like I can inline those methods for now so we can ensure there are no real changes.

By the way, How do I run the web-layer tests?

If you could undo it so that the only changes in the pull request are
really related to the ticket, that would be best.

I just did an "mvn clean install" at the command line. It's a standard
maven dependency, so once the API tests have passed, then it will go on to
running the web-layer tests. (By which I mean the junit tests under /omod.)

On Tue, Jan 8, 2013 at 6:55 PM, Tom Ryan notifications@github.com wrote:

> I definitely didn't intentionally do it. When I did break out those
> methods it was just via the intellij "extract method" functionality. So the
> only way it could have changed is via a dodgy merge when I rebased... If
> you'd like I can inline those methods for now so we can ensure there are no
> real changes.
> 
> By the way, How do I run the web-layer tests?
> 
> —
> Reply to this email directly or view it on GitHubhttps://github.com/openmrs/openmrs-core/pull/6#issuecomment-12029408.

Looks good Joseph, I will add @since to the class and push the code to mater

Looks good!

It was decided not to implement this

When you create a pull request, please include the tickets full ticket's url in the comment input below that of the title instead of justTRUNK-3721, this helps the reviewer to easily go to the ticket in jira, see this for an example https://github.com/openmrs/openmrs-core/pull/125

Looks to me like the translations are still in english

What is the ticket number, can you include it in here

What is the ticket number? Do you mind including it here in the pull request's summary?

got it from the branch name

Sure, I'm translating into Vietnamese.

Please squash commits into one. See https://wiki.openmrs.org/display/docs/Git+Rebasing

Arek, it's a good first pass! Please make changes and push again to the same branch (this pull request will be automatically udpated).

Looks like this does not yet fix the problem Darius reported. As per my having tested it out using the web interface.

Sorry i have mistakenly added the "pull request" to MASTER branch which needs to be done against 1.8.X branch, 
Closing it down now.

I have recently dropped my previous local openmrs-core repository and so am going to create a new pull request for the changes for this pull request, 

Okay Daniel i will add the new ones without the formatting changes.

@dkayiwa : Daniel, I have added the new pull request without code formatting issues.

Looks good to me!

Can you add a unit test?

Hi Rob, what is the ticket number that pull request belong to, include its url in the description of the pull request

i have done the unit test sir. Please look at it and advice..thank you.

Changes you pull from upstream shouldn't  be included in the pull request

See the comments on the related pull requests

This corresponds to Ticket number 3916 https://tickets.openmrs.org/browse/TRUNK-3916?page=com.atlassian.jira.plugin.system.issuetabpanels:worklog-tabpanel

I changed it to always clear the drug fields on selection of a question

This was replaced with another at https://github.com/openmrs/openmrs-core/pull/237

Made small suggested changes and merged with rebase in https://github.com/openmrs/openmrs-core/commit/79d94c383050744c0df87b480226c513a9c94961

Thanks Arek!

Merged in https://github.com/openmrs/openmrs-core/commit/9026fc5ea13121af8a688a2fb80adc2f540bf1e6

Looks good! Please do use assertThat in the future and remember to run mvn install to apply proper code formatting before committing. Merged in https://github.com/openmrs/openmrs-core/commit/959a6dba1664b2fd8b2bd107187975d9d3e0696a

Closing this pull request for now...

Guilherme you've included 2 commits for 2 different tickets in this pull request. Please be sure to create a topic branch always from master: git checkout -b TRUNK-3683 master

Rafal, sorry the mistake. I'll fix it! 

If you can give me little help, it will be faster. Ehehe.
I'm using Egit for eclipse, I created two local branchs from my master, one for each ticket, commited/pull requested the first, and after this one. I don't know why the second branch has the modifications of the first since I didn't "added" the changes of the first to the second.

Looks good, Wyclif!

I fixed the pull request: https://github.com/openmrs/openmrs-core/pull/260

Thanks!

Make sure to write more test cases, to reflect most of the scenarios described on the ticket.

And please redo the formatting so that it doesn't introduce a bunch of spurious formatting changes. :-)

See my comments from https://github.com/openmrs/openmrs-core/pull/266

About:
- line length and spurious formatting
- not commenting an import statement
- tests to cover more of the ticket description's bullet points.

Did as you asked, i hope it looks fine regarding the formatting.
Plus added a bunch of tests.

Messed up commits, but fixed now. Also fixed one more comment

Just updated commit, fixed javadoc using < p > tags.

Invalid pull request.

Figured out last problem causing failing tests. Will retest and commit in the am. Tired.

From my Android phone on T-Mobile. The first nationwide 4G network.

-------- Original message --------
From: Rafal Korytkowski notifications@github.com 
Date:  
To: openmrs/openmrs-core openmrs-core@noreply.github.com 
Cc: andreapat apattson@earthlink.net 
Subject: Re: [openmrs-core] TRUNK-3751 (#269) 

Invalid pull request.

—
Reply to this email directly or view it on GitHub.

Could you please correct a commit message in https://github.com/gordonbr/openmrs-core/commit/ce561b3f78e936b6de633bd85dd25af7a792a2e7 ? Include just a ticket id and a title. For the future please do not send pull requests from your master branch, but create a topic branch for each ticket.

Could you please claim issues in JIRA as well?

I have fixed the order for in which the listeners are being registered.

Daniel, what's the status of this? Why you haven't you merged right away?

Very good question. I can merge it if you have not already done so. :)

On Thu, Apr 11, 2013 at 3:46 PM, Rafal Korytkowski <notifications@github.com

> wrote:
> 
> Daniel, what's the status of this? Why you haven't you merged right away?
> 
> —
> Reply to this email directly or view it on GitHubhttps://github.com/openmrs/openmrs-core/pull/251#issuecomment-16232124
> .

## 

The greatest want of the world is the want of men—men who will not be
bought or sold, men who in their inmost souls are true and honest, men who
do not fear to call sin by its right name, men whose conscience is as true
to duty as the needle to the pole, men who will stand for the right though
the heavens fall.

as Ben said, I have attached a patch for 1.7.x to the ticket. This pull request probably should be closed...

Are you using the OpenMRS formatter as at? https://wiki.openmrs.org/display/docs/Coding+Conventions
In other-wards, is it possible for you to commit only what you actually changed? :)

Can you separate the two commits into two separate pull requests?
Before creating a new topic branch, you need to do a: git checkout master
That way the commits for the different branches will not end up in the same pull request.
https://wiki.openmrs.org/display/docs/Using+Git

Fixed unit test

Thank you for reviewing the pull request.I've created a new pull request with the changes. https://github.com/openmrs/openmrs-core/pull/285

Do you mind creating a separate pull request for each ticket instead of combining all tickets in one? You can find the instructions at: https://wiki.openmrs.org/display/docs/Using+Git

Haha, I call it java black magic (http://stackoverflow.com/questions/3637936/java-integer-equals-vs#answer-3637974)

1989 makes a difference, because it is bigger than 127
http://pastebin.com/6mYnAcgy

Or did you mean something different?

Can you comment on the ticket that you have created a new pull request? Remember to also include the pull request url on the ticket. :)

I've already did that :)

Does your current unit test fail without your changes in the equals method?

It does fail without changes, it doesn't fail with.

Fahv, how are you doing your pull requests? Something seems to be wrong with the way they include commits from others. Are you properly following the instructions at? https://wiki.openmrs.org/display/docs/Using+Git

Finally after about half an hour I have got my master branch to be with origin/master what I did to get into this problem was I saved my work with git push but in the morning I forgot to do a git pull so my branch diverged from origin/master. It should all be good now I can resubmit the pull request if you prefer. I thought it was kinda strange that I had your commits included with mine.

So can you now do a new pull request that has only your commits?

Can you try create a totally different branch name and them make your changes there?

Yes. It was properly tested.

Please, have a look - https://www.dropbox.com/sh/zujomeum91g0qce/hcDmolHEmI#/

Merged at: https://github.com/openmrs/openmrs-core/commit/14ee1bff69323605ec4c54db7570263172685dd4

I did the necessary changes according to your comment. thanks for your guide.. :)

I see only name and address being handled. Did you forget PatientIdentifier? :)

Right, but a LinkedHashSet is a special Set implementation that also maintains insertion order

Can you squash these commits into one?

dkayiwa,
Thanks for looking into this.

What did you actually test? Did you test both of those pages and confirmed the maximum length validation works? And that you did not get any JavaScript errors about the function missing?

You committed quite a number of files in the bin folder. Did you intend to? :)

Done,definitely i have to know git better ;/

1) Changed.
2) I did run the command but didn't have the file set up properly it is now though
3)Unit test added
4) Yes I have  pic if you wish to see

 glancing quickly I think  you need a null check.  also,  not every user has a username.  use  their system id  if not.

Do you mind adding a unit test?

I'm not sure that conception is right. I think, LoggingAdvice shouldn't have dependencies to Context and User.

Method updated, unit test added.

P.S.
I was testing my method in the module activator. `RequestContextHolder.getRequestAttributes()` was null I guess because there is no request when activating module. 

It turns out that WebModuleUtil class is aware of dispatcherServlet, so I've used it to get the ServletContext.

yeah, that is even better since WebModuleUtil has access to the dispatcher servlet, if the request is null, you might need to mock it

ouch, didn't see your "don't worry for this ticket". I've updated it with throwing exception.

Thanks for the plugin info, will use it next time!

I had already pushed the code, so that change didnt make it, i apply it in a separate commit

For what ticket are these changes?

For what ticket are these changes?

Close without merging because ticket is already closed.

I have tested this and noticed that the server still restarts!!!

I like this one more than the pull request on TRUNK-3997. I guess doing it right was quicker than the quick-fix. :-)

I believe what you have provided is not what we are looking for.  You provided two files: trunk-15 and TRUNK-15.  They appear to be classes or code snippets, but would not be compiled into anything meaningful in the code.

I think you have the right idea but need to actually change the files you want to affect, compile the changes and possibly write some unit tests to support the ticket.  Please ask in IRC, as you have been doing, and in the mailing list if you need more guidance.  Thanks.

Sorry the original change reflects a wrong name. It should read "makombe" as the author 

I haven't actually tested this out, but I'm going to trust that you have and merge it. :-)

I'm not going to be able to code-review this before going on vacation, so maybe @wluyima can finish it off?

Hi Wyclif, Sorry I just saw the notification regarding to this ticket.
I appologize for any inconvienence occured cause by my absense. ty- Harsha

this piece had been reviewed and i had made changes to it

Why was this pull request closed yet the code was never merged?

Looking through github, i have noticed that perhaps it was replace by https://github.com/openmrs/openmrs-core/pull/254

There is alot of code formatting that you did in these jsps, can you please undo those changes and just leave just the additions you made to display the uuid, otherwise it might get hard to merge these changes

@makombe, can you include the ticket number in your commit message? I cannot tell for which ticket this commit is?

@makombe, can you always include the ticket number in each commit message?

i will do that in my commits. The ticket number is TRUNK-3267

---

 From: dkayiwa notifications@github.com
To: openmrs/openmrs-core openmrs-core@noreply.github.com 
Cc: makombe makombekennedy@yahoo.com 
Sent: Tuesday, June 11, 2013 11:57 AM
Subject: Re: [openmrs-core] Enabled deletion of an obs and all it's related information (#335)

@makombe, can you always include the ticket number in each commit message?
—
Reply to this email directly or view it on GitHub.

TRUNK-3267
Thanks

---

 From: dkayiwa notifications@github.com
To: openmrs/openmrs-core openmrs-core@noreply.github.com 
Cc: makombe makombekennedy@yahoo.com 
Sent: Tuesday, June 11, 2013 11:55 AM
Subject: Re: [openmrs-core] added unit test for ObsServiceTest class (#338)

@makombe, can you include the ticket number in your commit message? I cannot tell for which ticket this commit is?
—
Reply to this email directly or view it on GitHub.

I think i will make the names match and fix any related tests, i think the names in the test dataset and liquibase files should match, i was my fault who wrote the initial test dataset and included the hyphen in the test dataset

Good point Daniel about using StringUtils, i will make the change and push the code to master

Closing this pull request since it was replaced by #285.
Premalal, FYI, as long you commit to the same branch from which you issued the initial pull request, github will automatically merge the changes into the original pull request, so you need to create a new one.

Travis CI reports a failing test: 
getDescendantLocations_shouldReturnNonRetiredDescendantLocationsIfIncludeRetiresIsFalse(org.openmrs.LocationTest). Arek, have you checked that it passes locally?

Please include a ticket id in commit description and pull request title.

Merged in https://github.com/openmrs/openmrs-core/commit/0b227ca8e6a370b6488903953977f20dd777f7b1

Thank you Mani! Could you please add a link to a ticket in JIRA? We also need a test to prove that your change works.

CI reports compilation errors: https://travis-ci.org/openmrs/openmrs-core/builds/7957286 Could you please check that it compiles for you?

Please close https://github.com/openmrs/openmrs-core/pull/338 or this one. They both seem to relate to the same ticket.

The ticket has been cancelled. Please do not reopen.

I think you could just do twice "new Integer(1)" to get 2 different objects to test the fix easier. Anyway, it's all good. I'm merging and closing. Thanks Fillip!

test fixed, ticked id added to pull request and commit titles

Thanks Arek!

Can you add a unit test to this?

Hi @rkorytkowski 
I did what you asked to do, take a look.

Chris

Do you want to include this pull request url on the ticket? And also remember to click the request code review button.

Done, thanks!

I have merged the commit for translation into spanish.
I ignored the other commit.

We also have a convention of always including the ticket number in the commit message.

It is also good to separate the formatting commit from the other ones. :)

Likes like some unit tests are failing.
Ensure that you do an mvn clean install to check if all tests still pass before committing. :)

Likes like some unit tests are failing.
Ensure that you do an mvn clean install to check if all tests still pass before committing. :)

I have closed this pull request because it duplicates: https://github.com/openmrs/openmrs-core/pull/335

For which ticket are these commits?

I actually have a concern about this (sorry for not noticing this ticket and commenting earlier), which I'll raise here: https://tickets.openmrs.org/browse/TRUNK-4005

Merged with rebasing and a follow up fix in https://github.com/openmrs/openmrs-core/commit/f3de4b6b16c2fc6e7a45cb404a2e87dc912297b2

@rkorytkowski fixed it.

Merged in https://github.com/openmrs/openmrs-core/commit/2e04b5b09fc12640317a41c659ccd97c164a79d2

Chris, please make sure that next time the commit message contains ticket id and title

Merged in https://github.com/openmrs/openmrs-core/commit/ee41a749759a8c73166910d2e31eab7cae0d1ba6

Looks good

You run the tests by executing **sh release-test/release-test.sh** from the command line in the root directory of the openmrs project

@Suranga, in the description of the PR, you need to include the url of the ticket instead of just the ticket number

@Joseph, in the description of the PR, you need to include the url of the ticket instead of just the ticket number

It would be good to make similar changes to this PR as to the similar ones that i have already reviewed if necessary, or you think this should be fine and ready for review?

will be doing the similar changes on this pull request also, thanks @wluyima 

Can you please include the ticket url in the summary of this pull request?

What is the ticket number for this ticket suranga?

Sorry @wluyima , I had missed your previous message. I've updated it now :-)

Thanks

But i already see this PR https://github.com/openmrs/openmrs-core/pull/389 with the same ticket number, is there a mistake or something?

Hi,

Ok, I see the problem now. This was the pull I submitted BEFORE the detailed discussion we had on the mailing list on this topic. After I got more feedback on the topic, I switched to a different pull request 
(pull https://github.com/openmrs/openmrs-core/pull/389) 
So yes, this pull is obsolete, and unnecessary. Please ignore it in favor of pull no. 389 :-)

Sorry for the other caused in this matter :-)

I have closed this assuming the code is dead

See my comments for the PR for providers at https://github.com/openmrs/openmrs-core/pull/371

See my comments for the PR for providers at https://github.com/openmrs/openmrs-core/pull/371

The summary doesn't match the code, the summary suggests TRUNK-3965 but the code differs

I haven't looked at the content of this pull request yet, but can you please clean up the formatting and imports?

(There's a bit of commentary about the code formatter at https://wiki.openmrs.org/display/docs/Coding+Conventions )

Darius, removed all the white-space changes. 

Sorry about the delay!

Per conversation on the ticket TRUNK-4047, instead of changing this in core code, we'll instead change this to greedily fetch set members in the web services module. That way the java API can continue to let these be lazy.

Manually merged at: https://github.com/openmrs/openmrs-core/commit/eb4edec91e0b9286d625629dd9ce1c54973d2328

Don't you need a change in the hbm.xml file (and in ConceptNumeric.java)? I don't think the code will work as submitted.

A unit test would be nice. :-)

I have closed this such that you can do it all over again.

For the pull request comment, can you include more than just the ticket number? That is to make the bold heading here clearer: https://github.com/openmrs/openmrs-core/pulls

Can you include a unit test for this?

Did you test this in the web interface?

Are these all the validators that you could find?

Neelima, do you mind looking into why your changes make the this unit test fail? FieldTypeListControllerTest 

Hi @sushmitharaos thanks for working on this. It is good to work on each ticket individually and create a single PR for each rather than combining them, it makes it easier to follow up work for each ticket individually 

Do you have the time to add some unit tests for this? :)

Can you add a unit test or two with something like @Autowire on VisitService

Can we squash all these commits into one?

Looking at the unit test ModuleUtilTest.getResourceFromApi_shouldLoadFileFromApiAsInputStream(). Where is the "basicmodule" omod file?

I see lots of green and red in this commit. Are all these your additions and removals? Or just a formatting problem?

@sushmitharaos you can ignore my previous comment about combining tickets, if it makes life easier for you then feel free to do it

yes, @dkayiwa  those are the ones i was able to find, save if you have others for me to consider!!!

This seems to have the same issues as i have commented for person attribute types locking at: https://github.com/openmrs/openmrs-core/pull/396

Instead of simply putting the pull request comment as "TRUNK-3903", can you also add the ticket description?

I can see the following:
ConceptReferenceTermValidator
PersonAttributeTypeValidator

By the way, do you also see the CI build failure with this commit?

Closed because the one working on this will need to create a new pull request.

Am closing because this was done at: https://github.com/openmrs/openmrs-core/pull/428

Closed because whoever takes this up will need to create a new pull request.

Closed because whoever takes this up will need to create a new pull request.

i have responded back on the ticket; 
in summery, i have just run mvn clean install and it is a success, may be some one else can look into this and we can establish what is wrong and then way forward, thanks

i will always be considering this when making a pull request @dkayiwa , thanks for the tip

thanks @djazayeri  for your comment, i very much  appreciate it, and so i think if the change we want to add in ConceptNumeric.java is renaming precise, then i need to trace for all in our code where it is called and change the method invocation statement since i will have re-factored the getter and setter for it, is it so? 

otherwise for the case of the unit test, am very soon beginning to work on it and will by today submit it if all goes well, waiting upon your repply. but i strongly agree with renaming precise in all where it is used to refer to this property

It turns out to be the usual randomly failing scheduler test. You can just ignore it. :)

Good work, just left one comment about setting order_action values, lets see what for what other DEVs and see what to do

I also tried to run the web app and got errors in spring. Can you try run the application after your changes?

Closing this pull request because it was redone at: https://github.com/openmrs/openmrs-core/pull/424

Do you notice that Travis is failing?

Hi @dkayiwa , I have made the last two changes that you suggested. However, I failed to squash together the last commits. Would it be possible for you to integrate this into the core ?

Did you just forget to remove the unused message? :)

@djazayeri i had added some comments on the commit she added at https://github.com/mujir/openmrs-core/commit/4689bb5c1ff87631389e92855c4925e3c6e1a77b

Am closing this pull request because it is not for TRUNK-3335

Do you mind claiming the ticket and also including this pull request url on the ticket?

We tried this earlier today but jira didn't allow us to claim the ticket for whatever reason. However now it worked; claimed the ticket and added url as you suggested. Thanks!

The reason was that the ticket was in a "waiting for information" instead of "ready for work" state. I just made it ready for work such that you could claim it. Thanks for doing so promptly. :)

The Obs.hbm.xml file has this already:
    <class name="Obs" table="obs" batch-size="25">

I believe that sets a batch-size of 25 for all fetches of obs, therefore the changes you're proposing here will have no effect. (Is that right?)

batch-size at the class level has no effect on collections. it has to be set explicitly on collections.

http://docs.jboss.org/hibernate/orm/3.3/reference/en/html/performance.html#performance-fetching-batch

Travis reports some unit test failures caused by your commit. Can you look into it?

I could have sworn that when we were making performance improvements in OpenMRS 1.8, we determined that saying this on the class level also affected collections of this class. I don't understand the documentation as saying anything about whether class-level batching affects collection-level batching.

It won't _hurt_ to put this on the collection also, so I'm fine merging this.

@rkorytkowski @wluyima @dkayiwa whichever of you is community lead this week, can you make sure this gets merged (to master) and backported to at least 1.10.x and 1.9.x?

@djazayeri we confirmed this behaviour by enabling hibernate sql log. :)

This a uncompleted attempt. I'm working on it.

@dkayiwa can you also merge this to 1.10.x branch?

I did that and put the commit url on the ticket. :)

On Fri, Nov 15, 2013 at 3:47 PM, shruthidipali notifications@github.comwrote:

> @dkayiwa https://github.com/dkayiwa can you also merge this to 1.10.x
> branch?
> 
> —
> Reply to this email directly or view it on GitHubhttps://github.com/openmrs/openmrs-core/pull/448#issuecomment-28566516
> .

## 

If we keep uppermost in our minds the unkind and unjust acts of others, we
shall find it impossible to love them as Christ has loved us; but if our
thoughts dwell upon the wondrous love and pity of Christ for us, the same
spirit will flow out to others.

thanks @dkayiwa 

Nils, I'd kindly ask you to remove and reopen this pull request as you opened it from `openmrs-codejam-hamburg:master` and not a topic branch. Since we had some rebasing on our fork to clean up, I moved this commit into its own branch `TRUNK-2779`

Works with MariaDB 5.5.33a and MySQL 5.1
I can try with the latest MySQL version sometime this week.

Which ticket number is this?

On deleting, the states get removed. But when i refresh the same page, they all come back. Can you look into that?

Yes. That has been the behaviour of the form. Even for retiring. Nothing happens until the submit button is clicked. This is why I implemented the delete behaviour like that too...

I assumed that turning the whole delete and retiring operation to an Ajax call might be another item?

This pull request has conflicts because you need to update your code.

I fully agree. :)

Cool! 
...and don't be surprised if I am the one that gets to implement that too! :)

Hahaha! And basing on your speed at sweeping away these tickets, i will be surprised if it is not you. :)

Please see my comment on the ticket.

I dont know of a ticket number for this, but it was in response to a long roll on time for some new developers in the Chicago ThoughtWorks office.  

Do you think it could be this? https://tickets.openmrs.org/browse/TRUNK-4028
If it is, do you mind claiming it and then include this pull request url? :)

Or this one? https://tickets.openmrs.org/browse/RA-48

I dont think it is the one you mentioned @LeeBreisacher that one is for the reference app.  I did some work on core.  We can port this work into the reference app if you'd like, but as far as I know Breeze was working on the reference app's vagrant and puppet setup and it should be ready AFAIK.  

RA-48 has been done for months.  Sorry it was never marked as such.  Trunk-4028 does however need work, or at least it did last I looked which also has been a while ago.

Date: Mon, 18 Nov 2013 07:48:05 -0800
From: notifications@github.com
To: openmrs-core@noreply.github.com
Subject: Re: [openmrs-core] adding vagrant setup with mysql.   (#452)

Or this one? https://tickets.openmrs.org/browse/RA-48

—
Reply to this email directly or view it on GitHub.                    

I think i agree with you because even for the case of too many results for shorter strings, we at least already have paging in place.

Looks like i had forgotten to run mvn clean install thinking that we are still improving this and that it would be ok to run it after all improvements, and so am waiting for further reviews please @dkayiwa 

Change this: parent = parent.parentNode.parentNode;
to: parent = parent.parentNode;

Merged at: https://github.com/openmrs/openmrs-core/commit/09e6105fc10e7e0c108c33a0330bf1f760f6f815

TRUNK-4028 sounds right. Prasanna started it but wasn't able to continue working on this. Thanks for looking at it Patrick!

Merged the code

Nil, did you do this?

Are you able to reproduce this on an official release instead of snapshot?

What is this for? And which ticket number is it?

Please ignore this pull request for the ticket https://tickets.openmrs.org/browse/TRUNK-3646.
I have created a new pull request https://github.com/openmrs/openmrs-core/pull/471 with the correct patch difference shown in the changed files.

Merged

@gitahi86 did you claim the ticket? Also when you are done working on  a ticket, please click the Request Code Review button

Yes. I have now claimed it and issued a request for review.

This fix results into a run time exception http://pastebin.com/Rn50ua1b , i request for any assistance to fix this!!! even though mvn clean install was running fine and successfully :)

That is caused by the fact that you changed the change set with id: 201312162059-TRUNK-4126
after it was already run. To resolve this, in your liquibasechangelog table, delete the row with this id, and manually remove the database changes that it did make. That should be all.

thanks @dkayiwa  for your above comment, i have resolved that issue and some extra mistake i had in the previous commit, 

Merged at https://github.com/openmrs/openmrs-core/commit/c40f3d95e3f72f676c8226faf731349c77e15653

Can you also always put some description in the pull request instead of just the ticket number?

@wluyima Did you mean the other pull request that I raised(https://github.com/openmrs/openmrs-core/pull/483)? The only difference was that it was raised against master, not 1.10.x. I changed the branch, and github made it a new pull request. I had immediately asked @shruthidipali to close it as it was raised by mistake. 

Which ticket number could this be?

Just created one at: https://tickets.openmrs.org/browse/TRUNK-4186

I have closed because we cannot reproduce.

Merged the code at https://github.com/openmrs/openmrs-core/commit/a2e4eb1a4c1dbc371b282a8a6061c7092b39f809

Hi @gitahi86 next time when working on a ticket, you need to create a separate branch in your fork for each ticket otherwise you will end with other dev's commits showing up in the list of commits in your pull requests like in the case of this pull request, see what i mean? Normally you name the branch the ticket number e.g if you are working on TRUNK-4143, your branch name becomes TRUNK-4143

Did you check to ensure that no test data has this column? Try running tests and see if they pass?

Merged the code at https://github.com/openmrs/openmrs-core/commit/2e3c7cf50dfe292f3915afe61aeb9650c84714ef

Hi, 

Sorry about the confusion, but this pull request is closed. @wluyima you had asked to not raise pull requests where there are merge commits, and I found it hard to pull --rebase from an upstream repo and keep pushing to my remote when I have commits. 
So I sent a fresh pull request from a different branch. (https://github.com/openmrs/openmrs-core/pull/484). This has been merged already, but I will make sure the comments made here are incorporated.

Okay. Noted.

So you are saying you couldn't push t your fork(origin), if yes, what error
message were you getting?

Wyclif

On Thu, Dec 19, 2013 at 8:44 PM, Vinay Venu notifications@github.comwrote:

> Hi,
> 
> Sorry about the confusion, but this pull request is closed. @wluyimahttps://github.com/wluyimayou had asked to not raise pull requests where there are merge commits, and
> I found it hard to pull --rebase from an upstream repo and keep pushing to
> my remote when I have commits.
> So I sent a fresh pull request from a different branch. (#484https://github.com/openmrs/openmrs-core/pull/484).
> This has been merged already, but I will make sure the comments made here
> are incorporated.
> 
> —
> Reply to this email directly or view it on GitHubhttps://github.com/openmrs/openmrs-core/pull/480#issuecomment-30983283
> .

## 

Wyclif Luyima
Regenstrief Institute Inc.

Confidentiality Notice: The contents of this message and any files
transmitted with it may contain confidential and/or privileged information
and are intended solely for the use of the named addressee(s).
Additionally, the information contained herein may have been disclosed to
you from medical records with confidentiality protected by federal and
state laws. Federal regulations and State laws prohibit you from making
further disclosure of such information without the specific written consent
of the person to whom the information pertains or as otherwise permitted by
such regulations. A general authorization for the release of medical or
other information is not sufficient for this purpose.

If you have received this message in error, please notify the sender by
return e-mail and delete the original message. Any retention, disclosure,
copying, distribution or use of this information by anyone other than the
intended recipient is strictly prohibited.

I did a "git merge" and not "git pull" because my previous commits where already pushed to remote

I will do one thing - I will create a new pull request with all these commits rebased. That way, it will just be one commit for the whole ticket. Please abort this pull request.

It is not worth it for you to try fix it, i was just saying future tickets you work on

Merged the code at https://github.com/openmrs/openmrs-core/commit/e21ab4061eabb5a2d683a08a3aa56f46bd9ed795

Can you add some unit tests?

Which ticket number is this pull request for?

code merged at https://github.com/openmrs/openmrs-core/commit/9e0f455ffe49fd0662aeb190f9313b93d17fef67

This pull request is for TRUNK-3283 ticket. Should the commit message be changed to include ticket name/number?

Yes we encourage putting a ticket number in the commit message.

We have a practice of always including the ticket number in the commit message. :)

https://tickets.openmrs.org/browse/TRUNK-3195

I see that you included a comment for TRUNK-4146
In the commits, i have not seen any for TRUNK-4146. Did i just miss it?

merged the code at https://github.com/openmrs/openmrs-core/commit/97c27c77b60d76e2d3dda7569565163818b3e262

I replace HibernatePatientDAO with PatientDAO in @see anotation please check where to improve 
Thanks

When do you plan to finish this?
The main reason am asking is because it is a huge commit and hence merge conflicts would be a hassle to deal with. I already see github reporting merge conflicts. 

Yes, as per your comment below ticket 4160:  'Add a new method as below:
public Program retireProgram(Program program, String reason) throws APIException;
Deprecate the current one which does not take the second reason parameter.
Also remember to include a unit test.'

Can you create a unit test for this?

Your commit seems to have lots of formatting changes. Are you using the OpenMRS formatter as at? https://wiki.openmrs.org/display/docs/Coding+Conventions#CodingConventions-CodeStyle

Did you actually format even the xml files?

Can you also add some unit tests to confirm that on saving, these new fields also get persisted?

Can you add a unit test for this?

Can you add some unit tests?

I can see that you have corrected the message text but it is still displayed multiple times (one for each alert) instead of just once for all alerts. Can you make a follow up commit where you display that message once (in the header) for all alerts?

You forgot to change the column names for orders.care_setting and care_setting.care_setting_type in the hbm and test data files, i will fix that as i merge the code too

Merged the code at https://github.com/openmrs/openmrs-core/commit/3863412cbe38438c6e50ab6bcea732bd99fc6ca0

You need to use <b>git pull --rebase upstream 1.10.x</b> when updating your local repo instead of just <b>git pull</b>

So that you avoid commits like https://github.com/gitahi86/openmrs-core/commit/5fa156e5d011227ffcaa9e8fa99c5bc14ec6377e in the git history 

The message at the top that says <b>18 unique commits by 4 authors</b> above shows that you have commits for other devs because, you need to create a separate branch for each ticket you work on and use _git pull --rebase ......._ otherwise it is becoming painful to merge this code

Code merged at https://github.com/openmrs/openmrs-core/commit/45b70e2fdc585f3449d77522554f0921017a564c

You missed something, you need to set the order_frequency for existing drug orders

Never mind, i have seen the code that sets the drug_order.frequency

I seem to like the way you modeled the upgrade tests against a database instance

@rkorytkowski  authored some way to test the entire upgrade, you can add tests to be sure, but you will do so after we merge the code

Instead of just the ticket number, can you also include some description of what the ticket is about, in the commit message?

I wasn't available for a while. Sry. I have developed the fix and was now going to move it to a branch, but have now seen that you've already merged my changes. Thank you.
Is there anything left you need from me?

Can you include the pull request url on the ticket?

I think it's ready for merging. I have fixed some new 1.10.x changesets, but I didn't add new checksums for them so devs will need to cleanup their dbs.

Can you squash all these commits into one for easier review?
I also see that Travis CI has errors, did you do an mvn clean install after your changes to ensure that all is well?

yeah, I will do that right away. I don't use the cmd. I am using IDE to
build. yeah the build was okay. :). why do Travis Cl errors come? is it
because there are so many commits(every other came because I was
experimenting on making a pull request)

On Mon, Jan 13, 2014 at 8:23 AM, dkayiwa notifications@github.com wrote:

> Can you squash all these commits into one for easier review?
> I also see that Travis CI has errors, did you do an mvn clean install
> after your changes to ensure that all is well?
> 
> —
> Reply to this email directly or view it on GitHubhttps://github.com/openmrs/openmrs-core/pull/527#issuecomment-32184494
> .

## 

Akshika Wijesundara
Department of Computer Science & Engineering
University of Moratuwa
Sri Lanka,

Merged the code at https://github.com/openmrs/openmrs-core/commit/c5533f30997fdd494648e9bd7ed7f8aeff8d0ed9

Do you mind squashing these commits into one? :)

I have run your unit test without the fix and the test still passed. The test should fail before applying the fix. So can you correct the unit test such that it actually passes only after the fix?

Merged the code at https://github.com/openmrs/openmrs-core/commit/48540475d9e41550be859481e9f52e07287db087

Please see my comment to the ticket:

https://tickets.openmrs.org/browse/TRUNK-3964

Merge the code at https://github.com/openmrs/openmrs-core/commit/5a3546d570eae94cbad8f2a99473d968a8f69880

Sounds great- I'll make it more specific. Thanks!

I have closed this pull request because the user abandoned it.

Have you noticed the build errors that Travis reports above? Or can you do an mvn clean install and see what happens?

I have added a unit test.

I did a mvn clean install. It was a successful build. Do you have any suggestions for the error?

This generates lots of compiler errors. Please ensure that you first run "mvn clean install" to ensure that all is well before committing.

I wonder how this pull request was done???

He made the pull request against master and not 1.10.x branch and i asked him to create a new one, am going to close this

On the ticket, can you also attach a screenshot of the page showing your changes?

Remember to include the ticket number in the pull request. :)

Ok the ticket number is "Trunk-2984" :) 

I had 5 unread alerts but with your changes, i did not have any way of marking them read one by one. Can you look into that?

Hi Daniel, I have implemented two new search methods and marked the old ones as deprecated.

I noticed that HibernatePersonDAOTest has been merged with PersonDAOTest. Shall I move the new tests from HibernatePersonDAOTest to PersonDAOTest?

Thanks,
Wolf

Oh yes please do. Thanks Wolf!!! :)

Wow, that was quick. Will do right now.

Done.

Regarding the old search methods, I have found no usage in the OpenMRS core codebase that actually uses the List<PatientIdentifierType> identifierTypes parameter. It is either an empty list or null.

Since this affects the user interface, please attach, on the ticket, a screen shot of the page after your changes.

I see Travis complaining.
Can you update your code with the latest changes from upstream and then try doing an "mvn clean install"?

Can you also add some unit tests?

I've sent this on behalf of Andrea. I'm cancelling this as it's being worked on by someone else now.

Did you do these changes automatically or did you first manually look at each? All the changes in other classes look fine apart from: ArdenBaseTreeParser.java
Some of the changes there may introduce bugs.
Because of this: "Note that Sun's javac compiler often generates dead stores for final local variables. Because FindBugs is a bytecode-based tool, there is no easy way to eliminate these false positives", i feel like we should not automate this in particular. We need to manually look at each one by one. :)

Here is an example: http://stackoverflow.com/questions/17781768/sonar-dead-store-to-local-variable

This pull request has two commits. Are both of them for TRUNK-2779? (especially the second very big commit?) 

These classes and methods were unrelated
https://github.com/openmrs/openmrs-core/pull/481#discussion-diff-8467592
https://github.com/openmrs/openmrs-core/pull/481#discussion-diff-8467620
https://github.com/openmrs/openmrs-core/pull/481#discussion-diff-8467657

@jkondrat  you have just reopened this. Did you address the review comments?

@pamcdm can you pull the latest changes from upstream, then do an "mvn clean install" to see if all is well?

Can you attach, on the ticket, a screen shot showing the multiple select answers on the encounter page after your changes?

Made some changes and merged at: https://github.com/openmrs/openmrs-core/commit/f081bf0dcf6e9bd92bfda7366424c76890c02ad8
and: https://github.com/openmrs/openmrs-core/commit/edd033936460c6d34ea8543deef781852d7a1999

How often do you update your local copy with changes from upstream? Do you notice the merge conflicts with this pull request? :)

No units tests? See https://wiki.openmrs.org/display/docs/Generate+Test+Case+Plugin

@lrozanski  am ok with all other changes save the ones in the file "ArdenBaseTreeParser.java"
This requires a manual inspection for each line you want to change (instead of the automated one) because of its complexity and the possibility of false positives which could introduce bugs.

All of the lines I deleted were never used anywhere else and only had one occurrence. They were safe to delete.

Let me put it this way, when it comes to this particular class, which has lots of deletions, did you do them manually one by one? Or automated it?

I have not deleted a single line automatically, from any file. All of the changes I made were done manually, and I checked each line in question for this particular class before deleting anything.

Can you also attach a screenshot of the web page showing the user friendly error when one enters an invalid date?

@suraj5 is this pull request to be used together with the previous one? or should we close one and take the other?

![1](https://f.cloud.github.com/assets/6231503/1972436/f3d5bb24-8348-11e3-8a94-12851633c838.png)
![clearing_the_date_and_displaying_this](https://f.cloud.github.com/assets/6231503/1972437/f43f832e-8348-11e3-9cfc-52a28b67d681.png)

After the user enters the invalid date,i am clearing it and displaying the user friendly message

Can you display the user friendly message without clearing the invalid date? Such that the user can confirm its invalidness. :)

Also attach the screenshot on the ticket instead of here. Sorry i forgot to make this clear in my earlier comment :)

@dkayiwa Changes in these classes were unrelated to this ticket, so I reverted them in my second commit. 

Can you squash these commits into one such that the pull request has only one commit to review?
That way i will not see those unrelated changes. :)

@dkayiwa close the first one and take the second one:)

@suraj5 but the second does not have all your changes in the first one. :)

I made the change and commited.

@lrozanski  how often do you pull from upstream? This seems to have some merge conflicts. Do you mind doing it again? :)

@LokeshBabu11, can we put the retired ones at the bottom of the list, and prefix them with (retired)?
Remember to localize the "retired" text. This ticket is a good example: TRUNK-4005

@dkayiwa Now I made all the changes. :)

@suraj5  are using the openmrs formatter here https://wiki.openmrs.org/display/docs/Coding+Conventions#CodingConventions-CodeStyle?

Or did you do an "mvn clean install" before committing? It is supposed to correctly format your java files.

@dkayiwa yes,I downloaded OpenMRS formatting file ,template file into my eclipse and I didnt do any an "mvn clean install" before making  changes to "Trunk-3978NEW(1.8.x)

Can you do it now and then make another formatting commit?

@dkayiwaI am new to OpenMRS . Let me be clear ,now I should do a mvn clean install on  Trunk-3987NEW(1.8.x)  and commit it or otherwise should i create a new branch and do a mvn clean install and commit on that. 

@suraj5 after doing mvn clean install, commit to this same pull request for the same branch. This commit will only be a formatting one.

@dkayiwa Thanks for the reply.I'll do it now.:)

@lukgas6  looks like this has merge conflicts. Do you mind pulling the latest changes from upstream and make another commit? :)

Can you also do the remaining tasks as per the ticket description? That is create a RelationshipValidator and its corresponding unit tests.

Closing this because it is a duplicate.

@aniketha  this pull request has merges/commits that seem unrelated to the ticket. Can you do a one which has commits for only this ticket?

Closed in favor of: https://github.com/openmrs/openmrs-core/pull/561

Closing because author abandoned it.

Closing because author abandoned it.

Closing because author abandoned it.

Closing because author abandoned it.

Closing because author abandoned it

Closing because author abandoned it

Closing because author abandoned it

Closing because author abandoned it.

Ticket for this was closed.

Closing because author abandoned it.

Closing because author abandoned it.

Closing because author abandoned it.

Closing because author abandoned it.

Closing because author abandoned it.

Closing because author abandoned it.

Closing because author abandoned it.

Closing because author abandoned it.

Closing because author abandoned it.

Closing because ticket was closed.

Closing because author abandoned it.

Closing because author abandoned it.

Closing because author abandoned it.

Closing because author abandoned it.

Closing because author abandoned it.

Closing because author abandoned it.

Closing because author abandoned it.

Closing because author abandoned it.

Closing because author abandoned it.

Closing because author abandoned it.

Closing because author abandoned it.

@tangemyeu do you know what ticket number this is?

Closing because change request was cancelled.

Closing because author abandoned it.

Closing because author abandoned it.

Closing because author abandoned it.

Closing because it was taken over by Burke. :)

Closing because author abandoned it.

Closing because author abandoned it.

Closing because author abandoned it.

Closing because author abandoned it.

Closing because author abandoned it.

Closing because author abandoned it.

Closed because i totally have no idea what this is for. :)

Closing because author abandoned it.

Closing to create a new one.

Am closing because the author abandoned this.

@ishara-p  can you look at the comment i have put on the ticket for this pull request? :)

Closing because it is mixed up.
@jblaya feel free to create a separate pull request for each of the two commits.

@akshika47  i think you again forgot to do mvn clean install before commiting because the formatting looks different. Can you do run mvn clean install. Then make another commit?

Closing because author abandoned it.

@kushal8 can you make the alerts section have a fixed height and hence automatically scroll (as it was before) instead of eating as much top part of the page as the number of alerts. To see what am saying, just create like 15 alerts and you will see.

Closing because it was decided that we are not going to back port this to 1.9

Closing because it was decided that we are not going to back port this to 1.10

@lishar can you attach, on the JIRA ticket, a screenshot of how it appears after your changes?

Hi- see new pull request here. 

https://github.com/openmrs/openmrs-core/pull/587

I didn't create or refactor with this addition- I didn't want to hide the complexity of this code, and wanted to make it as obvious as possible, so that it can be easily found & changed in the next re-design. 

Hi @dkayiwa, see additional test, and amended comment here! 

Made changes based on review comments

@lishar  can you also place retired concepts at the bottom of the list?

Closing because author abandoned it.

Hi @wluyima - I just finished a refactor that takes away the checking for a specific class. I'll push that up and reference it here. Thanks for the feedback!

I think you still need to check that it is an OpenmrsObject or Person where necessary.

I have looked at the rest of the file and it looks fine, ignore my last comment above

In changePropertyValue, it checks to see if the object has the property that is being set. If it is a Person, it will have that property, if it isn't, then it won't update that Object. 

See line 165 in AuditableInterceptor, in the method changePropertyValue. 

I can extract this line to make this more clear, into a small method called "hasProperty", if you think it will make this more clear to anyone reviewing this file. 

Merged at https://github.com/openmrs/openmrs-core/commit/4e9826143ffadebaafea1e53920e453bde2c85d1

It's faster and more optimal than delete(0, s.length()). It's emptying a buffer without additional iterations

@k-joseph i put several comments on this pull request around the sql queries that create providers and convert the orderer values and I mentioned that they looked incorrect to me and that is why the test is failing, you need to fix them to make the tests pass, please look closely at the tests and ensure you understand what they are testing, that way you will figure out what's wrong with the queries and fix them

Note that I'm pretty sure that Arder Parser file is autogenerated. We should find some way to exclude those from Sonar.

I already excluded it. No more errors should be reported there.

There are still other pages that you did not touch like admin/encounters/encounterType.form and more. So can you go to the Administration page and try out each and every link to ensure that each one that has a uuid is displayed? Apart from only those that are added by installed modules.

Does it also make sense to use a css class which can be shared by all these many pages?

Closing because somebody else took this on.

Closing because the ticket was taken over by somebody else.

Closing because author abandoned it.

@rkorytkowski do we plan to merge this pull request? :)

@vaibhav-hp can you work on these failing tests?

@madawa-rc  if you run "mvn clean install" does it succeed?

@dkayiwa  I have forgotten to push one commit to the repository. I think maybe that's why "clean build" might have failed. It should build fine now. I have checked.

Merged at: https://github.com/openmrs/openmrs-core/commit/8451a1714909a14d26db166d82a81a332789027a

@madawa-rc does mvn clean install succeed for you?

@saikrishna17 when doing a git pull, did you use the --rebase option as documented here? https://wiki.openmrs.org/display/docs/Using+Git
Your pull request has un unnecessary merge.

@madawa-rc  just reopen this pull request when you are done fixing the failing tests. :)

@aniketha feel free to reopen this pull request when you are done with the above changes.

@saramirza14 just reopen this pull request when done with the remaining changes.

@lishar just reopen this pull request when you are done with the remaining changes.

Closing this because author abandoned it.

Closing because author created a new pull request at: https://github.com/openmrs/openmrs-core/pull/599

@pamcdm just reopen this pull request when you are done addressing the above comments. :)

Can you also add for Visit Attribute Types?

Can you also put the uuid for Reference Terms at the bottom?

@dkayiwa I'm not sure how to reopen, so I made a new pull request with the changes. https://github.com/openmrs/openmrs-core/pull/601

here is my query;
INSERT INTO provider(person_id, identifier, creator, date_created, retired, uuid)
SELECT u.person_id, u.system_id , (select user_id from users where system_id =  "daemon"), CURRENT_TIMESTAMP , u.retired, UUID() FROM users as u JOIN orders AS o ON o.orderer = u.user_id WHERE u.person_id NOT IN (SELECT DISTINCT person_id FROM provider)

the other query looks also like;
UPDATE orders AS o INNER JOIN (SELECT o.orderer, p.provider_id FROM orders o INNER JOIN users u ON o.orderer = u.user_id INNER JOIN provider p ON p.person_id = u.person_id) AS b ON o.orderer = b.orderer SET o.orderer = b.provider_id

i think i got some mismatches within the local as compared to the origin branch, which i tried to resolve by pulling first from upstream and then also from origin, which after doing i tried to push i had to resolve by resolving some conflicts, this i did successfully and unfortunately, this resulted into some failure when trying to push some changes to the origin branch, here is the failure trace;
To git@github.com:k-joseph/openmrs-core.git
 ! [rejected]        TRUNK-4202 -> TRUNK-4202 (non-fast-forward)
error: failed to push some refs to 'git@github.com:k-joseph/openmrs-core.git'
To prevent you from losing history, non-fast-forward updates were rejected
Merge the remote changes (e.g. 'git pull') before pushing again.  See the
'Note about fast-forwards' section of 'git push --help' for details.

so as am still clearing the issues in the queries i kindly ask better review of them by devs as @wluyima here so that i can fully clear up the failures in the test, otherwise am trying to resolve this push rejected failure issue, regards

The query that updates orderer i think can written in a cleaner and easier way to understand by just joining directly to the provider and user tables without that subselect which makes things a little harder to read. 
Did you remove the @Ignore from the test method i added and make sure it is passing?

About the push, you must have rebased something you had already pushed to the 1.10.x branch in your fork and that is why git is rejecting the push to your fork, you can add -f when pushing to force the push to your fork

And in the INSERT query, when selecting the user_id for daemon, can you use the uuid in the WHERE clause instead of the system_id(deamon), it is more reliable to use the uuid

i have resolved the uuid issue. and the query is;

INSERT INTO provider(person_id, identifier, creator, date_created, retired, uuid)
SELECT u.person_id, u.system_id , (select user_id from users where uuid = "A4F30A1B-5EB9-11DF-A648-37A07F9C90FB"), CURRENT_TIMESTAMP , u.retired, UUID() FROM users as u JOIN orders AS o ON o.orderer = u.user_id 
WHERE u.person_id NOT IN (SELECT DISTINCT person_id FROM provider)

and then the other query is;

UPDATE orders AS o INNER JOIN provider p ON o.orderer = p.provider_id
INNER JOIN users u ON o.orderer = u.user_id AND o.orderer = p.provider_id
SET o.orderer = p.provider_id

however the test is still failing with the same message as before, any other thing i need to adjust should be pointed out here so that i can clear it as well and have the test pass, otherwise as @wluyima suggests am looking forward  to make sure that the test passes however i agree that my sql knowledge is just being improved and that is partly the reason why am even taking alot of time on this issus than was originally planned and expected, sorry for any inconveniences this delay has caused, 
i call upon any other devs to take part in helping me improve these queries to fit what is expected, thanks

@dkithmal did you test this out on a running openmrs instance?

@dszafranek this seems to have merge conflicts. Can you update your copy with the latest changes from upstream and then commit again? Feel free to reopen this pull request or create a new one, basing on what is easier for you. :)

I build 1.10.x with mvn clean install
and build web app with jetty:run and database table column size increased correctly.

No problem, we are all always learning new things and keep improving.
The query is still incorrect because you are joining wrongly to the providers table, you need to always remember that orders.orderer is a fk to users.user_id prior to 1.10, so you should join first to the users table and then join users to provider, the orders table before 1.10 has no fk to providers and the ticket is about making this change to so that orders.orderer is a provider

We can pair later today if you still have issues

Can you go to the JIRA ticket and attach two screenshots showing the effects of your changes? One for long and another for short.

What is the ticket number for this commit?

TRUNK-2779

Feel free to reopen this pull request when done with the changes.

Feel free to reopen this after you have addressed the above comments.

Feel free to reopen this after addressing the above comments.

The logic for which format to use should not be in the jsp, but rather in the PersonName class.
Can you do the following:
1) Add a static private field to the PersonName class. You could call it "format". Initialize it with the value that the global property starts with.
2) Add a public static setter like "setFormat()"
3) Register a GlobalPropertyListener which calls PersonName.setFormat() when the property changes. For an example of this you can look at classes like GlobalLocaleList, WebUtil, etc. Remember to register this listener in applicationContext-service.xml under bean id="openmrsEventListeners"

@dkithmal which version of mysql are you using?

Feel free to reopen after addressing the above comments.

The screenshot on the JIRA ticket is still showing the wrong text. Feel free to reopen this pull request after fixing it.

@lrozanski did you first reproduce this before attempting to fix it? If yes, on which version of OpenMRS did you reproduce it?

Merged at https://github.com/openmrs/openmrs-core/commit/0ea76fa367ac1dc94dfa4953d360ec22160297f2

did you first reproduce this before attempting to fix it? If yes, on which version of OpenMRS did you reproduce it?

did you first reproduce this before attempting to fix it? If yes, on which version of OpenMRS did you reproduce it?

I can see some places using jQuery(, others $( and others $j(
Are you sure all these work without any JavaScript errors?

Create a new pull request to address the review comments. Remember to also update your code with the latest upstream changes because i can see merge conflicts with your pull request.
Ensure that you also add a unit test for PesonName.getFullName

@lrozanski since this is not happening on master but only on 1.9. can we instead create the pull request for the 1.9.x branch?

I am a bit confused, as this is a pull request for the 1.9.x branch.

@lrozanski oh sorry about that. I had mistaken it to be for master. :)

Merged at https://github.com/openmrs/openmrs-core/commit/08c9bc3a94fb1363e1bb28f66e666a39c5fb0e54

Can you pull the most recent changes from upstream and tell me if mvn clean install works for you?

Feel free to reopen after doing the remaining changes.

@cioan is it possible to have different pull requests for each ticket?

@dkayiwa Hi Daniel, I have posted the same question to @mseaton and @djazayeri and here is Darius answer:
"FWIW from the OpenMRS side I think that adding a new Fix Version to an existing closed ticket (after backporting) is okay.What's not okay is reopening a closed ticket after it has been released. That requires a new ticket as a Bug."

@cioan since TRUNK-3909 is not yet released, how about creating a separate pull request for it, reopen the ticket, add a new fix version, and then add a comment about the pull request for this particular ticket?

Then create a separate pull request for TRUNK-3386 which is in a Ready for Work status.

What do you think of that? :)

@lplotni this pull request seems to have too too many changes? No wonder it has merge conflicts. Did you do it right?

@cioan just like you have just done a pull request for a back port of TRUNK-4025, do you mind also doing a new pull request that has only the contents of the two commit for TRUNK-3909? That way i will back port exactly was was committed for that ticket. If you feel that there are more changes which are not covered by the existing commits for those two tickets, then create a third pull request. We shall then look for a corresponding ticket, or create a new one. :)

@lplotni can you pull the latest changes from upstream to update your code, then run mvn clean install to tell us if all is well your side? :)

No problem.I rebase it with upstream:master. I try again :)

Feel free to reopen after you have addressed that.

@cioan do you see Wyclif's questions here? https://tickets.openmrs.org/browse/TRUNK-3909

@dkayiwa , this PR doesn't include the problematic changeset. Is there another one you meant to comment on?

@djazayeri  good catch! :)
I was supposed to comment on: https://github.com/openmrs/openmrs-core/pull/627

By the way, why are they two commits https://github.com/openmrs/openmrs-core/commit/07e968d05a1bb02537963f50f005b7f750258a55 and https://github.com/openmrs/openmrs-core/commit/062fef46774fc167fc560268b8713c5d3e355ae8 with identical changes, this is why i still don't like nor use the merge button in github

I am sorry i did not get you.

Is that a response to my question above? :)

no 

I am unable to understand the problem, can you give me more description 

If you take a look at this: https://github.com/vaibhav-hp/openmrs-core/blame/e0ff7cf4446f4c0622b35410a4a832badade38c6/webapp/src/main/webapp/WEB-INF/web.xml

You will see this commit: https://github.com/vaibhav-hp/openmrs-core/commit/f1150420a1a6f3933503f7889e4c7fa451111305

Do you realize that you are trying to reverse the fix he made? :)

Do you mind adding a unit test for this? :)

Feel free to reopen when you are done with the above. :)

Lots of changes have happened since this pull request was created. And hence it would need some significant work before we can merge it. So that is why am closing it.

Thanks reviewing the commit. I have added the tests and pushed it into same branch https://github.com/endeepak/openmrs-core/commit/8f7ff055a3bb079cfe41aed5d0cfffbef9a602f8. I don't see an option to re-open the pull request here. It may be due to repository permissions.

Please let me know if I need to raise another request.

I have made necessary changes in https://github.com/endeepak/openmrs-core/commit/bc7f06abe9d8b74f3ce5f8f5bb169df9c06d0e2f. Unfortunately it includes the formatting changes which I forgot to commit in last check in.

Implemented the feedback from last night's call. Please let us know what you think.

Tell me when you are done with the unit test.

Did you run "mvn clean install" before committing? It was supposed to have properly formatted your changes according to our conventions at: https://wiki.openmrs.org/display/docs/Coding+Conventions#CodingConventions-CodeStyle

@aniketha i think this was supposed to be in this module: https://github.com/openmrs/openmrs-module-reporting/

@sashrika does mvn clean install work without errors on your side?

Oh yes. At last!!! :)

Feel free to reopen after addressing the review comments.

looks like am not seeing my other commits i made later on, and not seeing the open option, 
therefore let me delete my origin branch and just re-commit and open a new PR

@wluyima Implemented pretty much all the feedback. The only task remaining is pending on the decision if saveRevisedOrder should be included in saveOrder.

Feel free to reopen after responding to the review comments.

@dkayiwa, am missing the re-open option on my view of this page

Just include the commit url on the ticket and i will do the needful.

On Thu, Feb 13, 2014 at 4:52 PM, k-joseph notifications@github.com wrote:

> @dkayiwa https://github.com/dkayiwa, am missing the re-open option on
> my view of this page
> 
> ## 
> 
> Reply to this email directly or view it on GitHubhttps://github.com/openmrs/openmrs-core/pull/637#issuecomment-34979315
> .

## 

If we keep uppermost in our minds the unkind and unjust acts of others, we
shall find it impossible to love them as Christ has loved us; but if our
thoughts dwell upon the wondrous love and pity of Christ for us, the same
spirit will flow out to others.

Merged at https://github.com/openmrs/openmrs-core/commit/1df5601c31b5f65ab69283e62da0abd9e349b96e.

I will address the commits in a follow up commit, you don't have to address them

@dkayiwa, When I removed this two test cases, mvn clean install work without errors on my side(that means without any modification to the original cloned copy).
But as I mentioned in https://tickets.openmrs.org/browse/TRUNK-3195, my tests failed after I added them. Since they fail, mvn clean install doesn't work. 

I doubt whether https://tickets.openmrs.org/browse/TRUNK-4189 is fixed correctly. Any ideas?

@dkayiwa  I checked https://travis-ci.org/openmrs/openmrs-core/jobs/18668823, the reason for the build failure is my junit test. 

@dkayiwa , can u see a commented code here? coz i removed them in my seconed commit

https://github.com/sashrika/openmrs-core/commit/25de847efdbe9d39a00777e16a68d4af1f9a3a32

here I have removed those comments.

Can you try click the Add New Field link and tell me what happens?

ok wait :). I should double check

@sashrika you are right about this. I have made a follow up fix for TRUNK-4189 
So pull and try again. :)

@aka001 can you create a separate pull request for each ticket?
Did you take a look at this? https://wiki.openmrs.org/display/docs/Using+Git

Am closing this pull request because it is not the correct fix. :)

Am closing this in the light of the code here: https://github.com/openmrs/openmrs-module-emrapi/blob/master/api/src/main/java/org/openmrs/module/emrapi/adt/AdtServiceImpl.java#L143
With reference to the discussions at: https://groups.google.com/a/openmrs.org/forum/#!topic/dev/I2F6iyQlfM8

Did you try running mvn clean install after your changes and ensure that all existing unit tests run well?
Can you also add some unit tests for your changes?

When you are done with this and you want this same pull request to be reopened, just tell me to do so from the JIRA ticket.

@dkayiwa  yaa I saw that. However things got messed up. I am doing it.

Ok @dkayiwa  , There is some changes to do, I'll fix them today. 

@dkayiwa  Great :) . I'll try again

@WolfSchlegel does the VisitValidatorTest tests pass on your side? If yes, do you have the latest changes from upstream? :)

@madawa-rc  i have put a few questions for you on these tickets.

You need to update the hbm file too, have you run the unit tests to ensure that they are all still passing?

hbb file is already updated. :(

code merge at https://github.com/openmrs/openmrs-core/commit/a2e7eb888446bf594cde90cb0d8adca33a9f70c0

Merged the code at https://github.com/openmrs/openmrs-core/commit/af594d33d702d97c0f23f7fd6e11defcf22c147b

Ok i have ignored by closing it. :)

Do not create pull requests for debugging purposes.

Do not create pull requests for debugging purposes.

Do not create pull requests for debugging purposes.

@ShubhamRai  can you squash these commits into one?

Am closing this PR because it touches many more files than it should.

Next time, remember to also include the ticket number.

Am closing this PR because it is just not correct. :)

@dkayiwa This was not a fix for a ticket. I was stuck so I created this pull request for someone to review it and point out the error. Sorry for that. :)

Am closing this PR because it changes so many more files than it should. :)

Can you create separate pull requests for each of the tickets TRUNK-3967 &  TRUNK-377?

Can you create separate pull requests for  TRUNK-377 & TRUNK-3967?

Can you create separate pull requests for each of the tickets listed in these commits?

Can you create separate pull requests for each of the tickets ticket-2873 & Trunk 2873?

@akshika47 which commit has the hibernate mapping file updates?

give me one second. I will check and tell. I pushed all the changes. 

@dkayiwa  Sorry for commiting that. I have some issues while running openmrs so I need to include that file.
I am sending another pull request for the same. 

Okay dkayiwa. give me few minutes

https://github.com/openmrs/openmrs-core/pull/675/files 
I am bit confused now. Isn't this the proper pull request?

@dkayiwa  : this is not a proper pull request. must be done with a mistake. Sorry for the inconvenience. For Trunk-4139 I still did not make a pull request. I commented in the ticket because @wluyima  would look at that comment and merge my other pull requests made on his other tickets. Any way confusion is over. I have finished two tickets. Hope they are fine. And I made another pull request for Ticket-2873(https://github.com/openmrs/openmrs-core/pull/669). please review it. Thank you. 

Closing pull request per requester's request.

@ehsdev  this pull request has merge conflicts. Please pull the latest changes from up stream, add in these changes, and then create a new pull request. Remember to also claim the ticket.

@harsha89 can you squash these commits into one?

@jasper-vandemalle  attach a screenshot to prove the fix, on the JIRA ticket.

Your changes have merge conflicts. Can you start by pulling the latest updates from upstream, then put in your changes and create a new pull request?

@coldcue  can you add a unit test for this?
Also remember to run "mvn clean install" before committing to ensure that your changes get formatted according to our conventions.

@mylesbarros on the jira ticket, attach a screenshot to confirm your fix?

@jkondrat on the JIRA ticket, can you attach a screenshot to show the effects of this validator on the user interface?

Please add the missing unit tests.

@vaibhav-hp this has merge conflicts. So pull the latest updates from upstream, add in your changes, and then create a new pull request.

@dkayiwa of course, I can.
Yes, I have to configure my IDE to match the conventions here.

@dkayiwa I've updated the ticket.

@dkayiwa Unit test added, please review

@aniketha you edited a number of messages in the message properties file. Some of these messages could be used in places more than just page titles and hence resulting into misleading text. So i suggest that you create a new pull request where your only changes are for  "Adding page specific titles to jsp pages", as the ticket description says. No editing existing messages. Though you can add new ones as needed.

This pull request also has a Merge with lots of changes. Did you pull with the --rebase option?
Do you mind creating a new pull request which has online one commit without the merge?

Can you start by updating your code with the latest changes from upstream, then put in yours and create a new pull request?

@ehsdev can you create a new clean pull request. Feel free to ping me on irc if you need help on how to.

@dkayiwa  I have answered and attached screenshots in the JIRA page. 
https://tickets.openmrs.org/browse/TRUNK-2312

@vaibhav-hp take a look at any of the existing validators and see how they do the javadoc comments, should annotations for the unit tests, handler annotations, and then do the same for yours and create a pull request.

@dkayiwa  here is the new pull

I made a new pull request as you wanted :) :) please review

On Tue, Mar 4, 2014 at 4:01 PM, dkayiwa notifications@github.com wrote:

> Closed #704 https://github.com/openmrs/openmrs-core/pull/704.
> 
> ## 
> 
> Reply to this email directly or view it on GitHubhttps://github.com/openmrs/openmrs-core/pull/704
> .

## 

Akshika Wijesundara
Department of Computer Science & Engineering
University of Moratuwa
Sri Lanka,

@aka001 because this ticket touches many files, I have merged the first past such that you do not get conflicts as you try to work on the remaining changes. Many more pages need the same kind of work.

@akshika47 can you use more meaningful messages that simply "Solution for Trunk-4283"? 
The message should indicate what you are trying to do on the ticket. At least you rather use the JIRA ticket summary. :)

@dkayiwa All commits rebased onto one commit, please review

@ehsdev  do you see that this pull request has several commits including a big merge into the 1.9.x branch? :)

I will do it from next pull request. Can you merge this one :)

you may open the PR @dkayiwa , i have added a commit, so you can review as you proposed,

This pull request is invalid, it should be merging to openmrs:1.10.x

Thank you for the merge, I am currently working on it.

@k-joseph do you mind creating a new pull request? This one seems to have many unnecessary commits including this merge "Merge pull request #692 from jasper-vandemalle/TRUNK-4027"

conceptClasses property added

![void_reason_cannot_be_empty_in_different_language](https://f.cloud.github.com/assets/4049383/2327360/accc6e32-a3ee-11e3-9b63-f1194ec12706.png)
![void_reason_cannot_be_empty](https://f.cloud.github.com/assets/4049383/2327361/acd38640-a3ee-11e3-91ce-a6ddada54891.png)

Kindly review it and provide the necessary feedback. :)

i don,t mind, and here is the link to the new PR https://github.com/openmrs/openmrs-core/pull/713

You are missing the liquibase changeset that adds the order_type table

Merged the code at https://github.com/openmrs/openmrs-core/commit/eb8f6a36237a5343c690a57db2f4e01792176ccc

![void_reason_cannot_be_empty_in_different_language](https://f.cloud.github.com/assets/4049383/2330466/48ec9f86-a434-11e3-81e8-05cb4124f283.png)
![Uploading void_reason_cannot_be_empty.png . . .]()

I have closed this pull request since it consisted of two commits. I have created a new one.
https://github.com/openmrs/openmrs-core/pull/715
Kindly have a look at it and give required feedback.

@kushal8 can you always put some text in your commit messages and pull requests? I should just read the text to know what this is all about without first opening the JIRA ticket. OK?

@kushal8 you need to not only include the ticket number, but also include some text about what this commit is all about.
When you are done, tell me to reopen the pull request.

Am closing this because you created a new pull request at https://github.com/openmrs/openmrs-core/pull/718

@aniketha can you please put some text in your commit messages describing what the commit is all about?

Secondly, does this commit address points 2 and 3 in the ticket description?

You can tell me to reopen this after responding to the review comments.

@akshika47 did you actually try run the webapp to test this changeset and see it halt the upgrade process?

Can you add a unit test about an order with a scheduled date to save?
Can you also learn to include text in the commit message describing what this is all about?

This has merge conflicts. Do you mind updating your code with the latest changes from upstream, then make a new pull request?

This pull request seems to have errors. Can you update your code with the latest changes from upstream, then put in these changes and create a new pull request?

@usn1485 this seems to have merge conflicts. Do you mind updating your code with the latest changes from upstream, then add in yours and create a new pull request?

@dkayiwa  : right away. I am working on it :)

![void_reason_cannot_be_empty](https://f.cloud.github.com/assets/4049383/2339924/296af7ce-a4bc-11e3-9d96-8b9d7fd225a4.png)
![void_reason_cannot_be_empty_in_different_language](https://f.cloud.github.com/assets/4049383/2339925/296b8a18-a4bc-11e3-9f4f-fa290f530d93.png)

merged at https://github.com/openmrs/openmrs-core/commit/8871a6ab62dc6e1fae17b7ea8ee0d73bfee7dc80

merged the code at https://github.com/openmrs/openmrs-core/commit/ae60df456b79021b7f0499499ac53100bb8c4430

I have merged this such that it does not get out of date and lead to merge conflicts. So create a new pull request for the remaining work.

@aka001 am closing this because it clears the passwords when one clicks the Back button. The clearing should only be when they close the page, and then run the wizard again. Other wise just clicking the back button should preserve all that the user had entered.

Okay I will work on it again.

This has merge conflicts. Can you update your code with the latest changes from upstream? Then put in your changes and make a new pull request.

Please use more a descriptive pull request title, similar to that as described for commit messages in https://wiki.openmrs.org/display/docs/Using+Git under step 3 in section "Work on your task".

Hi @vinkesh. Please include any relevant JIRA issue number in your pull request, similar to the format for a commit message shown in https://wiki.openmrs.org/display/docs/Using+Git under step 3 in section "Work on your task". Thanks!

Please use more a descriptive pull request title, similar to that as described for commit messages in https://wiki.openmrs.org/display/docs/Using+Git under step 3 in section "Work on your task".

Please use more a descriptive pull request title, similar to that as described for commit messages in https://wiki.openmrs.org/display/docs/Using+Git under step 3 in section "Work on your task".

Hi @aniketha. Please use more a descriptive pull request title, similar to that as described for commit messages in https://wiki.openmrs.org/display/docs/Using+Git under step 3 in section "Work on your task".

Hi @jasper-vandemalle. In future could you pllease kindly use a more a descriptive pull request title, similar to that as described for commit messages in https://wiki.openmrs.org/display/docs/Using+Git under step 3 in section "Work on your task". The comment was helpful but a reviewer might not immediately see it. Thanks!

Please use more a descriptive pull request title, similar to that as described for commit messages in https://wiki.openmrs.org/display/docs/Using+Git under step 3 in section "Work on your task".

Hi @WolfSchlegel. In future please kindly use any relevant JIRA issue numbers in your pull request title, similar to that as described for commit messages in https://wiki.openmrs.org/display/docs/Using+Git under step 3 in section "Work on your task". Thanks!

@WolfSchlegel Travis complains about this pull request. So i decided to get your changes and test them locally only to find that these tests fail:

Failed tests: 
  validate_shouldAcceptAVisitIfStartDateTimeFallsIntoAnotherVoidedVisitOfTheSamePatient(org.openmrs.validator.VisitValidatorTest)
  validate_shouldAcceptAVisitIfStopDateTimeFallsIntoAnotherVoidedVisitOfTheSamePatient(org.openmrs.validator.VisitValidatorTest)
  validate_shouldAcceptAVisitIfStartDateTimeIsEqualToStartDateTimeOfAnotherVoidedVisitOfTheSamePatient(org.openmrs.validator.VisitValidatorTest)
  validate_shouldAcceptAVisitIfItContainsAnotherVoidedVisitOfTheSamePatient(org.openmrs.validator.VisitValidatorTest)

Could it be a date format issue? Am using a mac book. Are you using windows?

Yes, I will, Sorry about it, this commit was done a time before. Before
Daniel asked me to do so. I will do in that manner next time for sure.

On Thu, Mar 6, 2014 at 7:15 PM, Michael Downey notifications@github.comwrote:

> You should use more descriptive commit comments, as described in
> https://wiki.openmrs.org/display/docs/Using+Git under step 3 in section
> "Work on your task".
> 
> ## 
> 
> Reply to this email directly or view it on GitHubhttps://github.com/openmrs/openmrs-core/pull/727#issuecomment-36888668
> .

## 

Akshika Wijesundara
Department of Computer Science & Engineering
University of Moratuwa
Sri Lanka,

Yes, I will, Sorry about it, this commit was done a time before. Before
Daniel asked me to do so. I will do in that manner next time for sure.

On Thu, Mar 6, 2014 at 7:19 PM, Michael Downey notifications@github.comwrote:

> Please use more a descriptive pull request title, similar to that as
> described for commit messages in
> https://wiki.openmrs.org/display/docs/Using+Git under step 3 in section
> "Work on your task".
> 
> ## 
> 
> Reply to this email directly or view it on GitHubhttps://github.com/openmrs/openmrs-core/pull/706#issuecomment-36888953
> .

## 

Akshika Wijesundara
Department of Computer Science & Engineering
University of Moratuwa
Sri Lanka,

Yes, I will, Sorry about it, this commit was done a time before. Before
Daniel asked me to do so. I will do in that manner next time for sure.

On Thu, Mar 6, 2014 at 7:19 PM, Michael Downey notifications@github.comwrote:

> Please use more a descriptive pull request title, similar to that as
> described for commit messages in
> https://wiki.openmrs.org/display/docs/Using+Git under step 3 in section
> "Work on your task".
> 
> ## 
> 
> Reply to this email directly or view it on GitHubhttps://github.com/openmrs/openmrs-core/pull/705#issuecomment-36888974
> .

## 

Akshika Wijesundara
Department of Computer Science & Engineering
University of Moratuwa
Sri Lanka,

@downeym: I've modified the PR title. It now matches the title of the ticket.

Merged at https://github.com/openmrs/openmrs-core/commit/517b4fd2cb1e755ef9aae3e25732c5f48f016555
Thanks Vinkesh

Merged the code at https://github.com/openmrs/openmrs-core/commit/ed4fd043f3f999b3e9ccb6def918c8c2cbb9b76e

The rest of changes looks fine to me for now

Hi @amberheilman :-) In the future, it would probably be best if you can title your pull request with not only the JIRA issue number but with a short description, similar to what was done in commit b5a0787. Thanks!

name is now updated

Thanks! :+1: 

Merged the code at https://github.com/openmrs/openmrs-core/commit/001a0537d5bd37e79632d025c61e2578cc8211d8

![void_reason_cannot_be_empty](https://f.cloud.github.com/assets/4049383/2356977/af7014a4-a5f6-11e3-9363-ef33795f20ae.png)

translations added in message properties 

@aka001 can you update your code with the latest changes from upstream. Then ensure that you resolve any conflicts and that mvn clean install runs successfully.

Since this is a new feature, you need to do it from master instead of 1.9.x

Please attach screenshots on the JIRA ticket instead of github.

https://github.com/openmrs/openmrs-core/pull/737

Please create a new pull request that has only changes relevant to the ticket. But no more. And also do not translate for languages you do not speak. :)

This one is synced with the latest changes in git.

@aka001 please do not attach screenshots on github. Do so only on the JIRA tickets.

@dkayiwa  Okay, won't repeat it again.

@suraj5 can you also do a second pull request for master? Please always first run "mvn clean install" before committing to ensure that all unit tests pass and that your changes get formatted according to our conventions.

Just create a new pull request to address the review comments for this.

Create a new pull request that does not have all these commits. And also remember to include some text descriptions in your commits and pull requests.

New pr. :)
https://github.com/openmrs/openmrs-core/pull/739

@dkayiwa trunk-1748 by @mseaton  .In the comments section you can see mike seaton last comment ,he said that the 'ProgramWorkflowService.getProgramByName()' should look at the program name, not the concept name.

I find that these 2 files in OpenmrsUtil.getApplicationDataDirectory() is problematic:

filepath = System.getProperty("user.home") + File.separator + ".OpenMRS";
if (!(new File(filepath)).canWrite()) {

In my case, I started with a fresh installation, run from jetty and get the same error as in https://answers.openmrs.org/questions/1860/openmrs-manual-install-on-mac-log-in-as-root

The problem is that the folder .OpenMRS is not created yet, so call to canWrite() will always return false. Can we add code to create folder here?

Can you create a ticket for that?

On Sat, Mar 8, 2014 at 7:28 PM, giangnn notifications@github.com wrote:

> I find that these 2 files in OpenmrsUtil.getApplicationDataDirectory() is
> problematic:
> 
> filepath = System.getProperty("user.home") + File.separator + ".OpenMRS";
> if (!(new File(filepath)).canWrite()) {
> 
> In my case, I started with a fresh installation, run from jetty and get
> the same error as in
> https://answers.openmrs.org/questions/1860/openmrs-manual-install-on-mac-log-in-as-root
> 
> The problem is that the folder .OpenMRS is not created yet, so call to
> canWrite() will always return false. Can we add code to create folder here?
> 
> ## 
> 
> Reply to this email directly or view it on GitHubhttps://github.com/openmrs/openmrs-core/pull/454#issuecomment-37102048
> .

## 

If we keep uppermost in our minds the unkind and unjust acts of others, we
shall find it impossible to love them as Christ has loved us; but if our
thoughts dwell upon the wondrous love and pity of Christ for us, the same
spirit will flow out to others.

@akshika47 - Remember to include JIRA issue numbers in your commit comments and pull requests, as described in: https://wiki.openmrs.org/display/docs/Using+Git

@sashrika - Please use more a descriptive pull request title, similar to that as described for commit messages in https://wiki.openmrs.org/display/docs/Using+Git under step 3 in section "Work on your task". Additionally, please include JIRA issue numbers in your commit comments as shown in the same page.

@ujjwalarora - Please use both JIRA issue numbers AND a descriptive phrase in your pull requests AND commit comments, as described in https://wiki.openmrs.org/display/docs/Using+Git under step 3 in section "Work on your task". 

The logic behind my solution is that whenever dwr-modules.xml file is not found, a script creates it using DOM before its used further in WebModuleUtil.java, and hence its very well recognized by the XML parser and new module information is written into it.

Ahhh, I missed that part. Sorrry. I was concentrating about giving a
meaningful commit message. I will do that from next one :-)
On Mar 9, 2014 7:32 AM, "Michael Downey" notifications@github.com wrote:

> @akshika47 https://github.com/akshika47 - Remember to include JIRA
> issue numbers in your commit comments and pull requests, as described in:
> https://wiki.openmrs.org/display/docs/Using+Git
> 
> ## 
> 
> Reply to this email directly or view it on GitHubhttps://github.com/openmrs/openmrs-core/pull/748#issuecomment-37116636
> .

Steps to Test :

1.) Delete the dwr-modules.xml from /webapps/openmrs/WEB-INF/dwr-modules.xml.
2.) Try to add/delete a module
3.) New dwr-modules.xml file would be created with the module info

i edited the pull request title.
I used more descriptive pull request title :)

Thanks, @downeym. 
For now I'll give additional details in this comment and in the comment on the ticket as well.
@dkayiwa 
ticket : https://tickets.openmrs.org/browse/TRUNK-301

I added a new table to fieldForm.jsp which shows the forms that being using that particular field.
When you are trying to add a new field, this table will be hidden. When the selected field is not using in any forms, this table will be empty. 

@milinda-ruk can you add some unit tests for these changes?
Secondly, where is trunk-8483?

@sashrika if you fail to fix it, feel free to unassign yourself from the ticket such that others can take it up.

@sachethgupta i have put instructions on the ticket.

@ujjwalarora can you add a unit test for this?
Secondly, can you always run "mvn clean install" before you commit to ensure that your changes are formatted according to our conventions?

@aka001 if you get blocked on this without a solution, feel free to unassign yourself such that others can take it up.

@ShubhamRai can you also indent your if statements to make them more readable?

@saikrishna17 pull the latest changes from upstream and then make a new pull request.

@suraj5 this would be done at the service layer instead of the controller.
We would also need to have some unit tests.

Take at look at this page? https://wiki.openmrs.org/display/docs/Using+Git
Particularly this section: 5 Before you pick up your work again, update to the latest code.

Closing this PR because author is creating another one.

Create a new pull request when you are done addressing the above comments.

@ujjwalarora can you squash these commits into one?

Closing this PR because author opened a new one: https://github.com/openmrs/openmrs-core/pull/751

@dkayiwa The legend for concept resources is visible but the one of concept usage is not as the concept does not exist.Should I create a new pull request?

@mylesbarros tell me to reopen this after you are done with the above.

@ShubhamRai  which one will be easier for you? A new pull request? Or another commit?
Even if the concept does not exist, still show the legend as it is done for the other section above it.

Create a new pull request that does not have these automated translations.

@dkayiwa : you mean ,only to add English. Is it??

Add only for the languages you can speak. In other wards, wherever you just
use your head instead of Google translator. :)

On Mon, Mar 10, 2014 at 3:23 PM, Akshika Wijesundara <
notifications@github.com> wrote:

> @dkayiwa https://github.com/dkayiwa : you mean ,only to add English. Is
> it??
> 
> ## 
> 
> Reply to this email directly or view it on GitHubhttps://github.com/openmrs/openmrs-core/pull/669#issuecomment-37176486
> .

## 

If we keep uppermost in our minds the unkind and unjust acts of others, we
shall find it impossible to love them as Christ has loved us; but if our
thoughts dwell upon the wondrous love and pity of Christ for us, the same
spirit will flow out to others.

Great. I understood. I will do English and Sinhala(my mother tongue).

On Mon, Mar 10, 2014 at 5:56 PM, dkayiwa notifications@github.com wrote:

> Add only for the languages you can speak. In other wards, wherever you just
> use your head instead of Google translator. :)
> 
> On Mon, Mar 10, 2014 at 3:23 PM, Akshika Wijesundara <
> notifications@github.com> wrote:
> 
> > @dkayiwa https://github.com/dkayiwa : you mean ,only to add English.
> > Is
> > it??
> > 
> > ## 
> > 
> > Reply to this email directly or view it on GitHub<
> > https://github.com/openmrs/openmrs-core/pull/669#issuecomment-37176486>
> > .
> 
> ## 
> 
> If we keep uppermost in our minds the unkind and unjust acts of others, we
> shall find it impossible to love them as Christ has loved us; but if our
> thoughts dwell upon the wondrous love and pity of Christ for us, the same
> spirit will flow out to others.
> 
> ## 
> 
> Reply to this email directly or view it on GitHubhttps://github.com/openmrs/openmrs-core/pull/669#issuecomment-37176697
> .

## 

Akshika Wijesundara
Department of Computer Science & Engineering
University of Moratuwa
Sri Lanka,

@dkayiwa Now the legend is getting displayed and I have also indented the code.I am not creating a new pr.If required kindly say so.

Go ahead!

On Mon, Mar 10, 2014 at 3:28 PM, Shubham Rai notifications@github.comwrote:

> @dkayiwa https://github.com/dkayiwa Now the legend is getting displayed
> and I have also indented the code.I am not creating a new pr.If required
> kindly say so.
> 
> ## 
> 
> Reply to this email directly or view it on GitHubhttps://github.com/openmrs/openmrs-core/pull/742#issuecomment-37176874
> .

## 

If we keep uppermost in our minds the unkind and unjust acts of others, we
shall find it impossible to love them as Christ has loved us; but if our
thoughts dwell upon the wondrous love and pity of Christ for us, the same
spirit will flow out to others.

@dkayiwa yaa done. :)

There is lots of formatting here and it is hard to tell what has changed and what has not. Can you create a new pull request where you do not do any formatting? We shall format in a separate commit later on.

Closing this because author is creating a new PR

@amberheilman this pull request seems to have some problems. Can you update your code with the latest changes from upstream, then create a new one? Remember to also address the comment i have just put. Also include some unit tests.
This page can be of help for getting the latest changes from upstream: https://wiki.openmrs.org/display/docs/Using+Git under section: 5 Before you pick up your work again, update to the latest code.

https://github.com/openmrs/openmrs-core/pull/760

@sashrika can you create a new pull request? This has two unrelated merges and other commits.
As you can tell from this page: https://wiki.openmrs.org/display/docs/Using+Git
You need to pull with --rebase to avoid such. :)

Why is this closed?:/

Hi Daniel,
Sorry it should be Trunk-3483.i will also add unit test and will commit asap.
Thanks

@dkayiwa  I have sent the pr as you requested. :) :)

I already merged the code and addressed the comments as i indicated in the ticket comment

Sorry. I did not see the merge part when I commented here. :P

@dkayiwa , this is a new pull req with a new branch instead of https://github.com/openmrs/openmrs-core/pull/746

@dkayiwa , thanks for the fast response. 
I created a seperate pull request with a new branch. 
https://github.com/openmrs/openmrs-core/pull/766
Hope this should avoid merging conflicts. 

Merged the cod at https://github.com/openmrs/openmrs-core/commit/2a72379d688ca7fda7f3b3b0aa020777060dc992

@dkayiwa In this pull request as asked by you I have not done any formatting.

Created new pull request with 1 commit
https://github.com/openmrs/openmrs-core/pull/769

@kushal8 can you create a new pull request for all these changes? You seem to have forgotten to pull the latest changes from upstream before committing as per this page: https://wiki.openmrs.org/display/docs/Pull+Request+Mistakes

I see that you still modify a number of existing messages. Since these could already be in use at some pages and the new message text that you give them may not be relevant in those places, can you please do as we agreed?

@aka001 i think some of the recent user interface changes could have confused you a bit. But i have put the explanation in the earlier comments. Deleting from the user interface is internally voiding in the API. Address this and create a new pull request.

There are errors with this pull request. Can you create a new one and ensure you do all that is mentioned here? https://wiki.openmrs.org/display/docs/Pull+Request+Mistakes

Closing because author created a new pull request at: https://github.com/openmrs/openmrs-core/pull/759

@dkayiwa I have made a new pr, kindly have a look.
https://github.com/openmrs/openmrs-core/pull/771

Closed due to code formatting and indentation issues

Now, I have time to do it today, but there's one thing not clear to me, how should I decide, that which `OrderType` is associated to an `Order` by default? Is it appropriate like this, because as I saw, the `order_type_id` field is removed previously in the _changeset_ and there's no information about the type of an order?

Should I be more precise with the `orders.order_type = 1`? Something like inline select?

This code isn't compiling

Yes, because I had to update the `OrderService` interface 338c9646525837f1cd1ea4c8c56128ee4dbd5f47  which is dependent by many objects and so incompatible

Merged at https://github.com/openmrs/openmrs-core/commit/33030683a45006fe9623d08c7b697827f1e1cfca

Merged at https://github.com/openmrs/openmrs-core/commit/57897187706ac56749b988c2b9d1e8d43909e63e

Merged the code at https://github.com/openmrs/openmrs-core/commit/e532b3704eae01d1cc6c0d2c5bbffeb3e8f58e83

Looks good, i will address the comments and merge the code

Merged at https://github.com/openmrs/openmrs-core/commit/e532b3704eae01d1cc6c0d2c5bbffeb3e8f58e83

I will fix the review comments and merge the code

Do I need to do the necessary changes and create a pull request again? I saw this is committed. 

Merged!

I see this pull request includes a commit for TRUNK-4021. Is that intentional?

@rkorytkowski oh ,sorry it mistakenly happend.Should i delete this branch

The logic behind my solution is that whenever dwr-modules.xml file is not found, a function creates it using DOM before its used further in WebModuleUtil.java, and hence its very well recognized by the XML parser and new module information is written into it.

Steps to Test :

//Unit Tests
1.) The first 2 unit tests are added for the purpose in WebModuleUtilTest.java

//Manually
1.) Delete the dwr-modules.xml from /webapps/openmrs/WEB-INF/dwr-modules.xml.
2.) Try to add/delete a module
3.) New dwr-modules.xml file would be created with the module info

@dkayiwa Done. Added 2 unit tests such that they PASS in the edited file and FAIL in the previous configurations.
Yes, done 'mvn clean install'

Made a new pull request https://github.com/openmrs/openmrs-core/pull/789

Merged at https://github.com/openmrs/openmrs-core/commit/439377cdef7877785db93c561412e475723d46b4

I will address the comments as i merge the code

Merged at https://github.com/openmrs/openmrs-core/commit/8300f4086fb81ff8f794dced3a3918c909b6ea12

This pull request looks invalid, i doubt if even the code compiles, i will fix everything

@milinda-ruk this pull request has many other commits and merges that should not be for this ticket. Do you mind creating a new one as you take a look at this page? https://wiki.openmrs.org/display/docs/Pull+Request+Mistakes

@dkayiwa 

Is these fixes merged ?

Thanks!

Hi @dkayiwa ,

I tried but still it seems to add all 5 commits into the pull request. I will try with creating a new branch and adding changes there. 
Thanks!

@vaibhav-hp can you first pull the latest changes from upstream and then make a new pull request?
You can find more of this at: https://wiki.openmrs.org/display/docs/Pull+Request+Mistakes

@milinda-ruk did you pull with --rebase as per this page? https://wiki.openmrs.org/display/docs/Pull+Request+Mistakes

Secondly, every time you finish a branch and want to create another, you need to first switch to the master branch.

So can you do that, then create a new branch and put in your changes?

Hi @dkayiwa ,

Ok  i will send the both pull requests again ASAP.

Thanks!

Code merged at https://github.com/openmrs/openmrs-core/commit/fbec70e2c500897d1cbb8edfdbae6ff55efda7b1

@dkayiwa ,

pls find the new pull request here.

@dkayiwa ,
Please find the PR for the new branch here. I hope it is correct this time.
Thanks!

Can you use descriptive commit messages as mentioned here? https://wiki.openmrs.org/display/docs/Pull+Request+Mistakes

@milinda-ruk can you also include some unit tests?

@aka001 this pull request seems to have failures on merge. Can you do a new one and take note of the points noted at? https://wiki.openmrs.org/display/docs/Pull+Request+Mistakes

Closing this because author made a new pull request.

@sachethgupta this pull request has merge errors. Do you mind creating a new one while taking note of the tips at? https://wiki.openmrs.org/display/docs/Pull+Request+Mistakes

@dkayiwa Yaa I am creating a new pr. Thank you for the review.

@ehsdev feel free to reopen this after responding to the review comments.

Can you add a unit test for this?

This pull request has merge conflicts. Please create a new one and take note of the tips at: https://wiki.openmrs.org/display/docs/Pull+Request+Mistakes

Closing because author opened a new pull request at: https://github.com/openmrs/openmrs-core/pull/785

@dkayiwa new pr, https://github.com/openmrs/openmrs-core/pull/798 . Kindly have a look.

Can you also create a unit test for this?

I have rebased and made the appropriate changes.
I can write the unit test. I will soon send it in another pr.
Thanks!

@aka001 you do not have to always create a new pull request for each and every change. You can just commit to this same pull request. Tell me to reopen this after you have committed the unit tests.

@milinda-ruk feel free to reopen this pull request after you have committed the above changes and unit tests.

@sashrika can you squash these commits into one? You can look for instructions at: https://wiki.openmrs.org/display/docs/Using+Git

Closing this PR because author created a new one.

@akolodziejski can you squash these commits into one? You can use the instructions at: https://wiki.openmrs.org/display/docs/Using+Git

@dkayiwa okay.

@milinda-ruk on the JIRA ticket, can you attach a screenshot showing the effects of your changes?

@aniketha this being a new feature, can you create a new pull request for it on master?
We generally avoid back porting new features.

@ujjwalarora did you do mvn clean install and ensure all is well before creating this pull request?

@madawa-rc i have put a comment for this on the ticket.

Hi @dkayiwa ,

I will remove the commented code and recommit the code. However for the unit tests please see the comments in the JIRA which i have added. I tried writing a test like below,

@Verifies(value = "should not return language locale only if country locale is specified in allowed list", method = "getPresentationLocales()")
public void getPresentationLocales_shouldNotReturnLanguageLocaleIfCountryLocalIsSpecifiedInAllowedList() throws Exception { 
Context.getAdministrationService().saveGlobalProperty( new GlobalProperty(OpenmrsConstants.GLOBAL_PROPERTY_LOCALE_ALLOWED_LIST, "en,es,es_CL")); 
int size = Context.getAdministrationService().getPresentationLocales().size(); Assert.assertEquals(2,size); }

 but it fails since Context.getMessageSourceService().getLocales() doesnot return any possibleLocales as i mentioned in ticket. Can you pls help in resolving that?

@dkayiwa : I attached the screenshots into ticket.

@ dkayiwa : I checked in the updates. Please review again. Thanks very much!

I checked in the updates. Please review again. Thanks very much!

@ehsdev this pull request has a merge and commits from other tickets. Can you create a new pull request while while taking note of the tips at? http://go.openmrs.org/pull-request-tips

@kushal8 this pull request has errors on merging. Do you mind creating a new pull request taking note of the tips at http://go.openmrs.org/pull-request-tips?

@aka001 am closing this pull request because of the issue raised by @lluismf 

@jkondrat on the JIRA ticket, can you add a screenshot showing the effects of your changes?

@ujjwalarora can you create a new pull request while taking note of the tips at http://go.openmrs.org/pull-request-tips?

@dkayiwa : Sure, I will
I realised 1 unit test is failing, I have tried it to solve but stuck on 1 point. Actually, as I have hashed the secret answer in HibernateUserDAO.java, there's 1 test which tries to match secret answer by taking sample password from 'openmrs-core\web\target\test-classes\org\openmrs\web\include\ForgotPasswordFormControllerTest.xml', which is created during the time of unit testing in /target folder and the changes in/target folder are not reflected.

So, can I modify the test. Or is there any other solution ?

modify and i have a look at it.

On Thu, Mar 20, 2014 at 9:37 PM, ujjwalarora notifications@github.comwrote:

> @dkayiwa https://github.com/dkayiwa : Sure, I will
> I realised 1 unit test is failing, I have tried it to solve but stuck on 1
> point. Actually, as I have hashed the secret answer in
> HibernateUserDAO.java, there's 1 test which tries to match secret answer by
> taking sample password from
> 'openmrs-core\web\target\test-classes\org\openmrs\web\include\ForgotPasswordFormControllerTest.xml',
> which is created during the time of unit testing in /target folder and the
> changes in/target folder are not reflected.
> 
> So, can I modify the test. Or is there any other solution ?
> 
> ## 
> 
> Reply to this email directly or view it on GitHubhttps://github.com/openmrs/openmrs-core/pull/800#issuecomment-38204958
> .

## 

If we keep uppermost in our minds the unkind and unjust acts of others, we
shall find it impossible to love them as Christ has loved us; but if our
thoughts dwell upon the wondrous love and pity of Christ for us, the same
spirit will flow out to others.

@aka001 you need to create unit tests for each of the scenarios the Darius mentioned on the ticket.

@dkayiwa okay.

@akolodziejski can you pull the latest changes from upstream and then resolve conflicts? You can take a look at: http://go.openmrs.org/pull-request-tips

I did sth wrong :/ I will need help with git. Could someone help me with git ?  ( via chat or Skype)

Have you read the whole of this?
https://wiki.openmrs.org/display/docs/Using+Git
And this? http://go.openmrs.org/pull-request-tips

On Thu, Mar 20, 2014 at 11:44 PM, akolodziejski notifications@github.comwrote:

> I did sth wrong :/ I will need help with git. Could someone help me with
> git ? ( via chat or Skype)
> 
> ## 
> 
> Reply to this email directly or view it on GitHubhttps://github.com/openmrs/openmrs-core/pull/362#issuecomment-38218730
> .

## 

If we keep uppermost in our minds the unkind and unjust acts of others, we
shall find it impossible to love them as Christ has loved us; but if our
thoughts dwell upon the wondrous love and pity of Christ for us, the same
spirit will flow out to others.

@dkayiwa I have created a new pr. Kindly review it.
Thanks.
https://github.com/openmrs/openmrs-core/pull/806

I will fix the comments as i merge the code

Made some changes and merged at https://github.com/openmrs/openmrs-core/commit/f00b9f0222048e8884a3b366ab08a0bc857a0589

New pull - https://github.com/openmrs/openmrs-core/pull/807

Closing this pull request because it includes files which were not to be changed.

@ujjwalarora you will need to create a new pull request to take care of my comments.

This does not look to be the correct fix because "edit" works here: http://devtest01.openmrs.org:8080/openmrs/admin/person/addPerson.htm?personType=patient&viewType=edit

So the fix must be somewhere else.

@kushal8 your pull request still has problems. Did you take a look at this page http://go.openmrs.org/pull-request-tips? 

@dkayiwa ,

I removed the code and committed back in https://github.com/milinda-ruk/openmrs-core/commit/bd6f13d47e10035e0e0f564369ba5fe01d0247d7 . But i couldn't find a way to re-open the PR. Can you please re-open this for me? Meanwhile the issue above which is in test case still occurs.

Thanks!

I like the additional detail compared to [my draft for contributing](https://gist.github.com/bmamlin/5848938) in response to [our discussion last summer](https://groups.google.com/a/openmrs.org/d/msg/dev/wpEOtpPLphc/gIfgW1jV3VoJ).  Could you add a brief Getting Started section at the top that points people to our [getting started as a developer](https://wiki.openmrs.org/x/MQAJ) wiki page?

@ehsdev do you mind squashing these commits into one? If you do not know how, take a look at https://wiki.openmrs.org/display/docs/Using+Git under: Submit the code

@kushal8 your pull request has merge conflicts. Do you mind creating a new one while taking note of the tips at? http://go.openmrs.org/pull-request-tips

@milinda-ruk  let us talk over this on IRC

I have merged all commits into one. Please help me to review. Thanks.

@keshashah please attach, on the JIRA ticket, a screenshot with the effects of your changes.

@milinda-ruk this pull request has lots of commits and merges from other tickets. Did you take advantage of the tips at? http://go.openmrs.org/pull-request-tips

@lisamurie can you squash these commits into one? If you do not know how, just take a look at https://wiki.openmrs.org/display/docs/Using+Git under "Submit the code"

@suraj5 can you squash these commits into one? Instructions for doing that can be found at https://wiki.openmrs.org/display/docs/Using+Git under "Submit the code"

@harsha89 do you mind going though surangas pull request and address the comments one by one? You addressed a couple of them but left out others.

Thanks @bmamlin for initial feedback. Made some improvements ready for further review.

@kushal8 i can reopen this pull request when you are done addressing the above comments.

@keshashah  i can reopen this pull request when you are done addressing the above comments.

@jkondrat  i can reopen this pull request when you are done addressing the above comments.

Hi @dkayiwa ,
I have replied with screenshot and associated comment on JIRA ticket. Pls have a look. Thanks!

@dmexs this pull request seems to have lots more commits than it should. Can you create a new one while taking note of the tips at? http://go.openmrs.org/pull-request-tips

Haven't written one before but I'll see what I can come up with. Might take me a little while.

Looks good, i will address the comments as i merge the code.

Tell me to reopen this when you are done with the unit test.

@vaibhav-hp i can reopen this when you are done with the changes.

@vaibhav-hp i can reopen this when you are done with the changes.

@saikrishna17 i can reopen this when you are done addressing the above comments.

@jkondrat i can reopen this after you are done addressing the above review comments.

@sashrika i can reopen this when you are done with the above.

@lisamurie i can reopen this when you are done with the above.

@milinda-ruk I can reopen this after you are done addressing the above comments.

@suraj5 i can reopen this after you are done with the above.

I can reopen this after you are done addressing the above comments.

@suraj5 did you read about better commit and pull request messages at http://go.openmrs.org/pull-request-tips?

@suraj5 create a new pull request to address the above review comments.

@sashrika are all these changes just about replacing OpenmrsUtil.loadProperties() with the non deprecated one?

@sashrika i can reopen this after your response to the review comments.

@akolodziejski i can reopen this after you have addressed the above comments.

@rkorytkowski feel free to reopen if we still need this pull request. :)

We do not intend to merge this because it is simply a proof of concept. So am closing it. :)

@rapilabs if you are still interested in taking this forward, feel free to tell me and i will reopen. :)

@keshashah i can reopen this after you have addressed Ada's comments on the ticket.

@dkayiwa & @wluyima - please take a look at c39a27a instead as there have been some changes in the content. Thanks.

@dkayiwa , Yes. 
The problem comes when we going to write unit tests. When we invokde mergeDefaultRuntimeProperties(Properties runtimeProperties) in ContextDAOTest, it threw a ConcurrentModificationException. to get rid of that I had to do some changed in the code. 

@dkayiwa , I romoved catching throwables.
Added catching runtime exceptions. I made a new commit and created a pull req 
https://github.com/openmrs/openmrs-core/pull/824

@dkayiwa , refereing https://github.com/openmrs/openmrs-core/pull/822

@dkayiwa screenshot attached in the ticket. Hope this fix is correct. :)

@dkayiwa This is the link fo the new pr https://github.com/openmrs/openmrs-core/pull/825

@aka001 if you look at https://tickets.openmrs.org/browse/TRUNK-3931 you will notice that you are reversing a commit for dealing with XSS attacks. So am closing this pull request.

@dkayiwa Okay. I will figure out the bug and send it in new pr. Thanks for the review. 

@dkayiwa Kindly have a look at this pr. 
https://github.com/openmrs/openmrs-core/pull/826

@sashrika can you also squash these commits into one?

Merged at https://github.com/openmrs/openmrs-core/commit/be598dec02b8e9864cd39c9ff7366740d1c91517

@dkayiwa I have written a unit test for it. Kindly review it.
https://github.com/openmrs/openmrs-core/pull/827

I will fix the things i have commented about when i merge the code

@wluyima are we going to merge this?

@aka001 create a new pull request addressing the above review comments.

@aka001 the solution is not to get rid of the c:out
Rather properly deal with the NPE  which causes the server side exception.

@kushal8 i can reopen this after you are done with the above comments.

Yes i have tested the web application by restarting it. It is working accordingly.

@sashrika i can reopen after you have responded to the above comments.

Am closing this pull request because @wluyima already merged and made the followup commits.

@dkayiwa Okay. I am exploring on the same. Thanks for the review. :)

Hi @dkayiwa ,

I just noticed these comments. I am currently in the IRC with nickname milindaruk. Please come over for a chat when you are available.

@dkayiwa ,

Yes i did read that and created the new branch after rebase. I cannot find where the commits https://github.com/milinda-ruk/openmrs-core/commit/bd6f13d47e10035e0e0f564369ba5fe01d0247d7 and https://github.com/milinda-ruk/openmrs-core/commit/8e688d1f4a295d98152d30a2c46feb006885b29d has merges from other tickets. Can you please point me? I cannot figure out why it has happened.

Am always on IRC as dkayiwa

On Fri, Mar 28, 2014 at 4:16 PM, milinda-ruk notifications@github.comwrote:

> Hi @dkayiwa https://github.com/dkayiwa ,
> 
> I just noticed these comments. I am currently in the IRC with nickname
> milindaruk. Please come over for a chat when you are available.
> 
> ## 
> 
> Reply to this email directly or view it on GitHubhttps://github.com/openmrs/openmrs-core/pull/812#issuecomment-38917399
> .

## 

If we keep uppermost in our minds the unkind and unjust acts of others, we
shall find it impossible to love them as Christ has loved us; but if our
thoughts dwell upon the wondrous love and pity of Christ for us, the same
spirit will flow out to others.

@milinda-ruk if you do all at http://go.openmrs.org/pull-request-tips and still have no success, just create a brand new branch and put your changes there.

Sure, will do ASAP.

@lbat i can reopen this when you are done with the above comments.

@vineetv2821993 just run "mvn" clean install and you will see that it fails.

No

@dkayiwa , I made a new pull request addressing these changes.
https://github.com/openmrs/openmrs-core/pull/834

@dkayiwa This is the new pr. Kindly have a look at this.
https://github.com/openmrs/openmrs-core/pull/835

yup it is.. what should i do then?

On Fri, Mar 28, 2014 at 8:31 PM, dkayiwa notifications@github.com wrote:

> @vineetv2821993 https://github.com/vineetv2821993 just run "mvn" clean
> install and you will see that it fails.
> 
> ## 
> 
> Reply to this email directly or view it on GitHubhttps://github.com/openmrs/openmrs-core/pull/831#issuecomment-38928432
> .

## 

with Regards

Vineet Kumar
Indian Institute of Technology, BHU
Varanasi, India

hi daniel, 
thanks for your feedback! 
I adjusted my code according to your suggestions and used the unit test tool. Unfortunately I couldn't find the comment regarding the "@should", but I hope everything is okay now.
Can you reopen the pull request?

test method name:
initially had a more meaningful name :). Then I assumed that there is a naming convention, because all the tests are named like the @should annotation [1]. I thought that the new testcase belongs to the "@should require DatatypeConfiguration..." and therefore named the method ...2(). I was aware that this name is far from ideal and added a description in the method comment.

[1] https://wiki.openmrs.org/display/docs/Unit+Testing+With+at-should+Annotation

Merged at https://github.com/openmrs/openmrs-core/commit/c6a436b3d2927ce10167788488a84c68740dc6a3

@Daniel Kayiwa I have added unit test for this.
New pull request-https://github.com/openmrs/openmrs-core/pull/836

@lbat can u comment on the ticket and change its status?

@vineetv2821993  fix the failures

This is the new pr:
https://github.com/openmrs/openmrs-core/pull/837

Without opening the session its giving an error saying the user must first open a session.
I have find the solution for the error here. https://groups.google.com/a/openmrs.org/forum/#!topic/dev/fZZzbe82xt4

Can you move it to another place where the session is already opened such
that you do not have to open and close it yourself?

On Mon, Mar 31, 2014 at 11:23 AM, kushal8 notifications@github.com wrote:

> Without opening the session its giving an error saying the user must first
> open a session.
> I have find the solution for the error here.
> https://groups.google.com/a/openmrs.org/forum/#!topic/dev/fZZzbe82xt4
> 
> ## 
> 
> Reply to this email directly or view it on GitHubhttps://github.com/openmrs/openmrs-core/pull/833#issuecomment-39064121
> .

## 

If we keep uppermost in our minds the unkind and unjust acts of others, we
shall find it impossible to love them as Christ has loved us; but if our
thoughts dwell upon the wondrous love and pity of Christ for us, the same
spirit will flow out to others.

@aka001 am closing the pull request because this does not feel like the correct solution. :)
Take a second look at Darius's comments on the mailing list

No I didnt make any change to web/WEB-INF/dwr-modules.xml.When i ran sudo mvn clean install this file appeared.

@aka001 i can reopen this after you have addressed the above comment.

Can you remove it? Just in case you had not seen this:
http://go.openmrs.org/pull-request-tips

On Mon, Mar 31, 2014 at 11:48 AM, Shubham Rai notifications@github.comwrote:

> No I didnt make any change to web/WEB-INF/dwr-modules.xml
> 
> ## 
> 
> Reply to this email directly or view it on GitHubhttps://github.com/openmrs/openmrs-core/pull/836#issuecomment-39065957
> .

## 

If we keep uppermost in our minds the unkind and unjust acts of others, we
shall find it impossible to love them as Christ has loved us; but if our
thoughts dwell upon the wondrous love and pity of Christ for us, the same
spirit will flow out to others.

@kushal8 can you squash these commits into one?

I have made the required changes.

@dkayiwa : I have squashed them into one.

@dkayiwa Thanks for the review Daniel.
Yes I am doing it. :)

@dkayiwa Thanks for the review Daniel. I will soon update this pr.

@dkayiwa I referred to LocationFormControllerTest.java and updated the changed in this pr. I haven't done any major changes.
Is the usage of Context class a major issue?
I am unable to find out any other problem in the controller unit test.
Whenever time permits, please specify the problem with the controller unit test file?
Thanks

@aka001 LocationFormControllerTest is very different from your unit test. Can you look at it again?

Do i have to write a test for the case in which both the question and answer is set correctly? I believe the test for that is already there.

Yes. If it exists, what is the test name?

The test name is shouldChangeSecretQuestionAndAnswer() in OptionsFormControllerTest.java

Oh i see!!! You have good eyes. :)

On Mon, Mar 31, 2014 at 9:31 PM, Shubham Rai notifications@github.comwrote:

> The test name is shouldChangeSecretQuestionAndAnswer() in
> OptionsFormControllerTest.java
> 
> ## 
> 
> Reply to this email directly or view it on GitHubhttps://github.com/openmrs/openmrs-core/pull/836#issuecomment-39123995
> .

## 

If we keep uppermost in our minds the unkind and unjust acts of others, we
shall find it impossible to love them as Christ has loved us; but if our
thoughts dwell upon the wondrous love and pity of Christ for us, the same
spirit will flow out to others.

Thanks :) .So now what i should do?

Have you responded to all the comments?

No. I had a doubt regarding the comment on UserValidator. Do i have to add the condition i have added here in UserValidator also so that while creating a new User the same error does not repeat?

Is it possible to put the code in the validator, then reuse that validator
here?

On Mon, Mar 31, 2014 at 9:38 PM, Shubham Rai notifications@github.comwrote:

> No. I had a doubt regarding the comment on UserValidator. Do i have to add
> the condition i have added here in UserValidator also so that while
> creating a new User the same error does not repeat?
> 
> ## 
> 
> Reply to this email directly or view it on GitHubhttps://github.com/openmrs/openmrs-core/pull/836#issuecomment-39124869
> .

## 

If we keep uppermost in our minds the unkind and unjust acts of others, we
shall find it impossible to love them as Christ has loved us; but if our
thoughts dwell upon the wondrous love and pity of Christ for us, the same
spirit will flow out to others.

I am not sure about that. I'll check it out and then get back to you.As far as i can see now UserValidator.java is not dealing with advanced options

Some of our validators are not handling all the fields that they should be
dealing with. So if you see any missing, feel free to add. :)

On Mon, Mar 31, 2014 at 9:45 PM, Shubham Rai notifications@github.comwrote:

> I am not sure about that. I'll check it out and then get back to you.As
> far as i can see now UserValidator.java is dealing only with username value.
> 
> ## 
> 
> Reply to this email directly or view it on GitHubhttps://github.com/openmrs/openmrs-core/pull/836#issuecomment-39125734
> .

## 

If we keep uppermost in our minds the unkind and unjust acts of others, we
shall find it impossible to love them as Christ has loved us; but if our
thoughts dwell upon the wondrous love and pity of Christ for us, the same
spirit will flow out to others.

I can reopen this when you are done responding to review comments.

I can reopen this when you are done responding to review comments.

I can reopen this when you are done responding to review comments.

I can reopen this when you are done responding to review comments.

@kushal8 can you squash the commits?

I have put the check opts.getSecretQuestionPassword().equals("") because the error occurs only when the SecretQuestionPassword is not set. If the user enters the SecretQuestionPassword and then enters only the Question or Answer appropriate error messages are shown.
But if the user does not enter the password and then enters only question, no error messages were shown. Thats why I have put the error message code as "Password incorrect" and not "Secret Answer is required".

Oh i see!!! Thanks :)

On Tue, Apr 1, 2014 at 2:16 PM, Shubham Rai notifications@github.comwrote:

> I have put the check opts.getSecretQuestionPassword().equals("") because
> the error occurs only when the SecretQuestionPassword is not set. If the
> user enters the SecretQuestionPassword and then enters only the Question or
> Answer appropriate error messages are shown.
> But if the user does not enter the password and then enters only question,
> no error messages were shown. Thats why I have put the error message code
> as "Password incorrect" and not "Secret Answer is required".
> 
> ## 
> 
> Reply to this email directly or view it on GitHubhttps://github.com/openmrs/openmrs-core/pull/836#issuecomment-39194124
> .

## 

If we keep uppermost in our minds the unkind and unjust acts of others, we
shall find it impossible to love them as Christ has loved us; but if our
thoughts dwell upon the wondrous love and pity of Christ for us, the same
spirit will flow out to others.

@kushal8 will reopen after you have squashed.

@dkayiwa Sure, it is possible. I made a new commit :)

@sashrika  can you squash the commits into one?

@dkayiwa , all changes are in a one commmit

Closing this in favor of https://github.com/openmrs/openmrs-core/pull/844

@rkorytkowski , @dkayiwa  Made a new pull req https://github.com/openmrs/openmrs-core/pull/845.

please review this. 

I have added a new pull request addressing issues discussed above.
https://github.com/openmrs/openmrs-core/pull/847/

I'm closing this as #845 replaces it. In the future you don't need to create a new pull request. Commit to the same branch then push and the pull request will be automatically updated. 

Merged at https://github.com/openmrs/openmrs-core/commit/c56bd025da788f2b22748109061609bcd8ede95f

Thanks!

See my comment on the ticket.

See my comment on the ticket.

Thanks @rkorytkowski  for the review.

@rkorytkowski I have updated the pr and it works when controller is accessed by multiple users at a time. Kindly have a look at it.

I accidentally forgot to save a change.

Is the Travis CI build failure a result of the TRUNK-2758 branch being on haychris/openmrs-core rather than haychris/openmrs-core/1.7.x? Since the pull request is to 1.7.x already, is this a problem?

merged at e3c5268cf4d1070e0b5051ad984481b44600a18c

Merged at https://github.com/openmrs/openmrs-core/commit/f3836a4414361d00837c1ba684b8bc3e33738794

Looks great! Nice job Wyclif! 

@djazayeri i know you are vacation, it would be good if you weighed in on this pull request if can

@sashrika  i can reopen this after you have responded to the question. :)

@Fahv did you first pull the latest changes from upstream before creating this pull request? http://go.openmrs.org/pull-request-tips

@Nnabugw this seems to have merge conflicts. Do you mind creating a new pull request after taking note of the tips at? http://go.openmrs.org/pull-request-tips

@gilhooleyd this pull request seems to have more than it should. Do you mind creating a new one while taking advantage of the tips at? http://go.openmrs.org/pull-request-tips

@aka001 come and we discuss this on IRC

@kkaczmarczyk this pull request seems to have merge conflicts. Do you mind creating a new one while taking advantage of the tips at? http://go.openmrs.org/pull-request-tips

@kkaczmarczyk this pull request has merge errors. Do you mind creating a new one while taking advantage of the tips at? http://go.openmrs.org/pull-request-tips

@haychris just take a look at http://go.openmrs.org/pull-request-tips and then create a new pull request.

@lluismf do you mind helping me to see what the actual change is here?

@jkondrat this new pull request does not deal with all the comments on the original pull request. Can you please go through it again and ensure that you respond to each and every comment.

There is a new private method getName, and its references (lines 87 and 92). That's all.

@dkayiwa Hello Daniel. I am leaving town tonight(IST) for a trip. I will be back on 4th morning(IST). If my luck goes good I will catch you on IRC today or I will be back on 4th.
Sorry for the inconvinience caused.

@kkaczmarczyk  did you notice that your commit on master is still failing?

@rpuzdrowski can you attach, on the JIRA ticket, a screenshot for the user interface having the effects of your changes?

@jkondrat this pull request has merge conflicts. Do you mind creating a new one?

@Pakul i can reopen this after you have responded to the review comments.

@Pakul i tried running your unit tests after completely removing the functionality to be tested. But your tests still passed. Your tests should have failed, if written correctly. Can you revisit them and create a new pull request?

@dkayiwa The error coming on "web/target/surefire-reports/org.openmrs.web.controller.patient.PatientFormControllerTest.txt" is
http://pastebin.com/HaMaNgp7
The major error marked by me is coming in line 124 which is throwing NPE.
the line concerned is "if (action.equals(msa.getMessage("Patient.save"))) {"
Kindly look into this whenever time permits.
Thanks.

Merged at 3d5f7257a443313e8fea12dd828d62b80b937368

@kkaczmarczyk i can reopen this pull request after you have addressed the above review comments. :)

Merged at https://github.com/openmrs/openmrs-core/commit/5d2245130606ffbbfcaa82d8552690fcb98a1446

Hi Dkayiwa, I have done changes according to the comments given in the pull request.

@kkaczmarczyk i put comments in the pull request you made for master. I can always reopen this pull request after you have addressed the review comments. :)

@kkaczmarczyk i put comments in the pull request you made for master. I can always reopen this pull request after you have addressed the review comments. :)

@Fahv this is the error message i get when i try merging:
Auto-merging webapp/src/main/webapp/WEB-INF/messages.properties
CONFLICT (content): Merge conflict in webapp/src/main/webapp/WEB-INF/messages.properties
Automatic merge failed; fix conflicts and then commit the result.

After pulling from upstream, how many lines does your messages.properties file have?

@harsha89 this pull request has merge errors. You need to pull from upstream before putting in your changes and create a new pull request. :)

Yes Dkayiwa, I pulled from upstream before I made the changes. Somehow it went wrong. I'll provide a new pull request. 

Merged at ee3a641c82ad1acdea578ba11065313d48589f33

Merged at: https://github.com/openmrs/openmrs-core/commit/14f394f3ba6d5999ddacb86187e6106fc4995cdb

Merged at: https://github.com/openmrs/openmrs-core/commit/c8231eccb018f90ef254ea71a7c091fb5936b1c3

@ujjwalarora i can reopen this after you have addressed the review comments.

@aka001 i can reopen this after you have addressed the review comments.

@jkondrat can you add some unit tests to this?
For an example, you could take a look at TRUNK-4134

@wluyima did you say this is already merged?

Yes, but not this pull request

This is not the correct pull request

Change didn't work....

@jkondrat i can reopen this after you have added the unit test i requested for, on the ticket.

@kohousim your pull request has lots of formatting changes. Do you mind creating a new one while taking advantage of the tips at? http://go.openmrs.org/pull-request-tips

Can you quash these commits into one? You can get details of how to do that from: https://wiki.openmrs.org/display/docs/Using+Git

@kohousim i still see lots of formatting changes. Can you do this afresh with a new pull request. Remember the tips at: http://go.openmrs.org/pull-request-tips
Do a full mvn clean install before committing.

I am doing "mvn clean install" but this formatting changes are still there.

Can you create a new branch, put the changes there, do a full mvn clean
install and create a new pull request?

On Tue, May 13, 2014 at 3:41 PM, kohousim notifications@github.com wrote:

> I am doing "mvn clean install" but this formatting changes are still there.
> 
> —
> Reply to this email directly or view it on GitHubhttps://github.com/openmrs/openmrs-core/pull/903#issuecomment-42949378
> .

## 

If we keep uppermost in our minds the unkind and unjust acts of others, we
shall find it impossible to love them as Christ has loved us; but if our
thoughts dwell upon the wondrous love and pity of Christ for us, the same
spirit will flow out to others.

@kohousim the ticket has an attachment (sample-test-case.patch) of a unit test which should pass with the correct changes. I have tried running the test, after your changes, and it still fails. Can you look into this?

The simple-test-case.path use this constructor for locale " new Locale("es_ES")", but I guess it should be new Locale("es","ES"). Fixed version of this test case was added to ConceptTest.java.

@rpuzdrowski i can reopen this pull request after you have addressed those comments. :)

@poiresel do all unit tests pass pass for you locally?

How do you run the unit tests for 1.7.x without maven?

@dkayiwa You are right, it works inversely. I'll fix it :) 

@poiresel and lastly, did you actually test this out on 1.7 and 1.8 to confirm that the back port fixes it?
Using the standalone version of OpenMRS greatly simplifies testing out various versions of OpenMRS. Feel free to ask me just incase you are not sure of how to do it.

@anotherdave can you squash these commits into one? You can get details about squashing here: https://wiki.openmrs.org/display/docs/Using+Git

I ran through the test cases for 1.8.x which explicitly tested the merging of patients names and addresses and they passed. I will work on testing out the backport on a standalone version.  
Just to confirm, to build a standalone version of OpenMRS, should I follow the instructions below or are there other instructions?
 https://github.com/openmrs/openmrs-standalone/blob/master/readme.txt?

I ended up manually running the Junit tests through Eclipse. There were 4 failures on parts of the code that I didn't edit so I'm working on finding out what happened. 

To give more context on my priority function, I'm going to focus on the 1.8.x backport first https://github.com/openmrs/openmrs-core/pull/908 and then will focus on this 1.7.x backport. The main reason is to make sure eclipse and my local git repo stay in sync. 

@poiresel you do not have to build the standalone from source. You can just download any standalone release, and replace the war file, under tomcat/webapps, with the war file of the particular openmrs version that you want to run. After deleting the database folder in the root standalone folder, running it should take you through the initial setup wizard to setup the database for the war file you pasted.

Thanks for this information, that makes more sense.

@jkondrat can you add some unit tests as i advised above?

Hi Daniel, sorry about that, it's my first pull request but I should have RTFM properly. I have squashed it now.

Am closing this in favor of https://github.com/openmrs/openmrs-core/pull/909

@rpuzdrowski can you squash these commits into one? You can get details about squashing from: https://wiki.openmrs.org/display/docs/Using+Git

@anotherdave i have just tried out your changes and still get random failures for this test: shouldAllowTwoTasksToRunConcurrently(org.openmrs.scheduler.SchedulerServiceTest)

@dkayiwa thanks, I've revised it again to fix the problem (caused by null IDs in task definitions) and re-squashed the commits. 

@kkaczmarczyk this pull request has merge conflicts. Do you mind creating a new one?

@jkondrat can you also adopt a practice of using more meaningful pull request text as advised at? https://wiki.openmrs.org/display/docs/Pull+Request+Mistakes

@harsha89 i was able to select  the empty string Format and saved an attribute type without it.

Mhh I can remove the option of not selecting any field? But is it okey to do that? Is person attribute type should always associated with a format?

@lluismf i can't tell what you actually changed here. :)

Yes it does not make sense to have an attribute type without a format.
You also need to make sure the validator also deals with it, such that
those who do not go through the web page also get an error message.

On Mon, May 26, 2014 at 6:13 PM, Harsha Kumara notifications@github.comwrote:

> Mhh I can remove the option of not selecting any field? But is it okey to
> do that? Is person attribute type should always associated with a format?
> 
> —
> Reply to this email directly or view it on GitHubhttps://github.com/openmrs/openmrs-core/pull/918#issuecomment-44197260
> .

## 

If we keep uppermost in our minds the unkind and unjust acts of others, we
shall find it impossible to love them as Christ has loved us; but if our
thoughts dwell upon the wondrous love and pity of Christ for us, the same
spirit will flow out to others.

Thank you dkayiwa. I'll fix that and update the pull request. 

See my comments in JIRA. I also sent a message to the list a few weeks ago but nobody had a solution for the CR/LF problem. If you download my repo and compare versions with Eclipse you'll see the changes. 

@harsha89 can we remove the empty option from the list of formats?

Removed the empty option. :) 

@felipeq  you commit had merge conflicts which you committed, leading to compile errors. When you do mvn clean install, which we recommend any way before pushing, it should show you the errors

@felipeq  just in case you had not yet seen this: http://go.openmrs.org/pull-request-tips

All fixed and checked, as you suggested.

@dsurrao did you do an mvn clean install before creating this pull request? This test fails: getDrugs_shouldReturnDrugsThatAreRetired(org.openmrs.api.ConceptServiceTest)
Just in case you had not seen this: http://go.openmrs.org/pull-request-tips

@dkayiwa 
I commented these 2 assert statements because these 2 units test fails. I have tried it to solve but stuck on 1 point.

Actually, as I have hashed the secret answer in HibernateUserDAO.java and these 2 unit tests tries to match secret answer by taking sample password from 'openmrs-core\web\target\test-classes\org\openmrs\web\include\ForgotPasswordFormControllerTest.xml', which is created during the time of unit testing in /target folder and the changes I made are not reflected in in/target folder 

So, what can be done ?

@rpuzdrowski when working on a ticket, can you always first claim it using the "Claim Issue" button? :)
On the JIRA ticket, can you always attach a screenshot with the effects of you changes, for cases like this where the user interface is affected?
After submitting the pull request, click the Request Code Review button and include url to the pull request. This will also be useful to you: http://go.openmrs.org/pull-request-tips

@dkayiwa I was wrong. It's pull request for TRUNK-4032 :)

@ujjwalarora can you paste the failure log at pastebin.com and then put the paste url on the ticket?

@jgrochowski can you squash these commits into one? This page could be useful for you: http://go.openmrs.org/pull-request-tips
Secondly, before pushing, run mvn clean install and ensure that all unit tests pass.

Alright, I'm getting to it now.

@dsurrao can you squash these commits into one?
This could be helpful to you: http://go.openmrs.org/pull-request-tips

@dkayiwa Done. Let me know if this works.

I don't think we should get rid of the empty option. It is invalid to select nothing, but it's usually better not to have a select list default to the first item (e.g. alphabetically first) because usually this isn't what the user wants, and they may accidentally skip this field if it's already set with a "default" value.

Mhh yeap, user can forgot about the format. Since the validation is already there.We can have the empty option. Dkayiwa WDYT?

Yes am convinced that you add back the empty option. :)

On Sat, May 31, 2014 at 2:50 PM, Harsha Kumara notifications@github.com
wrote:

> Mhh yeap, user can forgot about the format. Since the validation is
> already there.We can have the empty option. Dkayiwa WDYT?
> 
> —
> Reply to this email directly or view it on GitHub
> https://github.com/openmrs/openmrs-core/pull/918#issuecomment-44746236.

## 

If we keep uppermost in our minds the unkind and unjust acts of others, we
shall find it impossible to love them as Christ has loved us; but if our
thoughts dwell upon the wondrous love and pity of Christ for us, the same
spirit will flow out to others.

sure i'll provide the pull request dkayiwa :)

added pull request  https://github.com/openmrs/openmrs-core/pull/935. 

@jgrochowski  did you just forget to add a unit test?

Updated pull request.

I had small difficulties with the unit test's implementation, which I will get to fixing today as I was busy before.

@citigoDev1 what is the trunk ticket number for this pull request?
Did you have a chance to look at this? https://wiki.openmrs.org/display/docs/Pull+Request+Mistakes

@jgrochowski after addressing these comments, you also need to squash these commits into one.

@rpuzdrowski can you create a unit test for this?

@jkondrat your unit test is dealing with the case of assigning the same patient more than one identifier for the same identifier type. We already have a validator to ensure that such cannot happen. See: PatientIdentifierValidator.hasMoreThanOneIdentifierForSameIdentifierType
My understanding was that this ticket is about assigning the same identifier to two or more patients. not so?

@dkayiwa I changed test. It's worked wrong, because secretQuestionNew wasn't empty and formed error "Incorrect password" for changing secret questions.

@rpuzdrowski the reported problem is that the secret answer gets deleted. So i expected you to create a unit test where the assertion about secret answer fails. Then your fix makes it pass. In other wards, i expected this line Assert.assertEquals("easy answer", loginCredential.getSecretAnswer()); to fail before your fix. But on the contrary, that line passes even before your changes. Do you see what am saying? :)

@dkayiwa When you choose "My Profile" and "Change Login Info" and you have "Secret Question", content of the question is entered in text box. Before my change, if you wanted to change your password, and clicked "Save Options" button, you receive an error "Incorrect Password" for password required to change "Secret Answer" (because content of the question was entered). So, if you wanted change password, you had to remove content of the question and then click "Save Options". It was reason, that secret answer was deleted. After my change, content of the question is entered too, but if you want change password, you dont't need remove content of the secret question from text box. If you remove content of the question, this means that you want remove secret question. This test don't fail without my change, because I set parameter "SecretQuestionNew" and then is error "Incorrect Password" as previously and there is no change in the database.

Link to ticket: https://issues.openmrs.org/browse/TRUNK-248

Forgot to add the link to the ticket: https://issues.openmrs.org/browse/TRUNK-3850?filter=10068

@vpillinger can you read this? https://wiki.openmrs.org/display/docs/Coding+Conventions#CodingConventions-Donotcommentoutcode

You removed a number of TODOs without adding the unit tests they were meant for. Do you mind adding them back? You can remove them only after adding the necessary unit tests.

@geoff-wasilwa this does not fix the two problems reported on the ticket. Did you even test it out by running the web app?

@rpuzdrowski before even testing out your changes on the use interface, i would expect you to write a test where this line first fails: Assert.assertEquals("easy answer", loginCredential.getSecretAnswer());
The reason being simply that the problem reported is about the user's secret answer being deleted or cleared. So you test starts by proving the problem, and then your fix makes it pass. But with your current test, even without your changes, the above assertion still passes. Meaning that the unit test is not properly written. Does this make sense?

@citigoDev1 i will reopen this after you have answered the above question.

@jkondrat i can reopen this after you have addressed the above.

@rkorytkowski do you think you can review this? :)

@rkorytkowski do you think you can review this? :)

@rkorytkowski do you think you can review this? :)

@rkorytkowski do you think you can review this? :)

@dkayiwa  do I have to make a new pull request?

Yes

On Sun, Jun 8, 2014 at 1:52 PM, Geoffrey W Wasilwa <notifications@github.com

> wrote:
> 
> @dkayiwa https://github.com/dkayiwa do I have to make a new pull
> request?
> 
> —
> Reply to this email directly or view it on GitHub
> https://github.com/openmrs/openmrs-core/pull/946#issuecomment-45433918.

## 

If we keep uppermost in our minds the unkind and unjust acts of others, we
shall find it impossible to love them as Christ has loved us; but if our
thoughts dwell upon the wondrous love and pity of Christ for us, the same
spirit will flow out to others.

@mhawila can you squash these commits into one? http://go.openmrs.org/pull-request-tips

@geoff-wasilwa can you add some unit tests for your changes?

@dkayiwa all the cases I can think of are covered, maybe you can help me out. Here is my list:
- Should fail if both Provider Name and Person are provided 
- Should fail if both Provider Name and Person are _NOT_ provided
- Should Pass if only Provider Name is provided
- Should Pass if only Person is provided

I changed the implementation of the _validate_shouldNeverHaveBothPersonAndNameSet()_ since it passed in the case where both Provider Name and Person are provided and this was reported as a bug.

Also given that the same method is used for validating existing providers and existing providers can be linked to Person my method should not be executed - all existing tests should pass.

In the ticket description, we have:
2. The Provider is allowed to create even when both fields are filled.

If we already have a validator for that, which is even unit tested as you
say, can you investigate the cause of the above reported problem?

On Tue, Jun 10, 2014 at 3:08 PM, Geoffrey W Wasilwa <
notifications@github.com> wrote:

> @dkayiwa https://github.com/dkayiwa all the cases I can think of are
> covered, maybe you can help me out. Here is my list:
> - Should fail if both Provider Name and Person are provided
> - Should fail if both Provider Name and Person are _NOT_ provided
> - Should Pass if only Provider Name is provided
> - Should Pass if only Person is provided
> 
> I changed the implementation of the
> _validate_shouldNeverHaveBothPersonAndNameSet()_ since it passed in the
> case where both Provider Name and Person are provided and this was reported
> as a bug.
> 
> Also given that the same method is used for validating existing providers
> and existing providers can be linked to Person my method should not be
> executed - all existing tests should pass.
> 
> —
> Reply to this email directly or view it on GitHub
> https://github.com/openmrs/openmrs-core/pull/947#issuecomment-45605064.

## 

If we keep uppermost in our minds the unkind and unjust acts of others, we
shall find it impossible to love them as Christ has loved us; but if our
thoughts dwell upon the wondrous love and pity of Christ for us, the same
spirit will flow out to others.

The provider was being created because the _validate_ method only checked for null Provider Name and Person and not if both are supplied. The code I added checks if: 
- This is a new provider
- If above is true, checks if both Provider Name and Person are provided and displays an error message.

Did you add unit tests for your new changes?

On Tue, Jun 10, 2014 at 3:20 PM, Geoffrey W Wasilwa <
notifications@github.com> wrote:

> The provider was being created because the _validate_ method only checked
> for null Provider Name and Person and not if both are supplied. The code I
> added checks if:
> - This is a new provider
> - If above is true, checks if both Provider Name and Person are
>   provided and displays an error message.
> 
> —
> Reply to this email directly or view it on GitHub
> https://github.com/openmrs/openmrs-core/pull/947#issuecomment-45606107.

## 

If we keep uppermost in our minds the unkind and unjust acts of others, we
shall find it impossible to love them as Christ has loved us; but if our
thoughts dwell upon the wondrous love and pity of Christ for us, the same
spirit will flow out to others.

I have thought of one case not covered in the unit test, let me add it. All the other cases are covered though.

Okay @dkayiwa I will do that soon.

Combined the four commits into one and will create a pull request for the corresponding commit

With your current changes, have you tried to run the web app and confirmed that it solves the two problems as reported on the ticket, repeated below?

Problem :
1. The error message for the both fields can't be filled is displayed when both the fields are empty.
2. The Provider is allowed to create even when both fields are filled.

Just discovered a potential problem. The implementation is that if a person is provided and provider name is left blank, then the person's name is used as provider name. This means provider name is never blank, when the user supplies person only the system supplies provider name from person's name. I've try saving by providing Provider Name, it saves, but if I only provide Person an error is displayed.

The implementation is that provider name is never null, the user can explicitly set the provider name or it will be inferred from the person name.

@dkayiwa I hope, that now it is ok.

@rpuzdrowski can you now squash these commits into one? http://go.openmrs.org/pull-request-tips

@geoff-wasilwa  the error message at the top "Please fix all errors and try again." should be with a red background. You can take at look at a sample here: http://demo.openmrs.org/openmrs/admin/provider/provider.form

@geoff-wasilwa secondly, when i try create a new provider and enter only the person, without Provider Name, i still get the error message: Provider Name or Person required, but not both
Which is not correct because i have actually entered one of the two instead of both. :)

@dkayiwa I mentioned this yesterday, and I was waiting for your input. As I said earlier, the implementation is that the Provider Name is inferred from Person if it is left blank, in short, Provider Name is never null and my code does not allow for both to be provided. 

@dkayiwa should I move my comments to JIRA?

Yes you can discuss from the ticket. I do not seem to understand what you
are saying.
But any way, what i reported are bugs that should be fixed.
If you do not know how to fix them, feel free to un assign yourself from
this ticket and take on another.

On Thu, Jun 12, 2014 at 4:45 PM, Geoffrey W Wasilwa <
notifications@github.com> wrote:

> @dkayiwa https://github.com/dkayiwa should I move my comments to JIRA?
> 
> —
> Reply to this email directly or view it on GitHub
> https://github.com/openmrs/openmrs-core/pull/947#issuecomment-45892847.

## 

If we keep uppermost in our minds the unkind and unjust acts of others, we
shall find it impossible to love them as Christ has loved us; but if our
thoughts dwell upon the wondrous love and pity of Christ for us, the same
spirit will flow out to others.

@dkayiwa, try this out on your copy of OpenMRS, create a provider by only
setting the person name. Click on the created provider, you'll notice that
person and provider name are the same. So my question is, why do we not
want users to edit the provider name?

The response i gave was after real testing. As for why we do not allow
that, i do not remember. :)
But that should not prevent you from fixing the reported problem.

On Fri, Jun 13, 2014 at 12:19 AM, Geoffrey W Wasilwa <
notifications@github.com> wrote:

> @dkayiwa, try this out on your copy of OpenMRS, create a provider by only
> setting the person name. Click on the created provider, you'll notice that
> person and provider name are the same. So my question is, why do we not
> want users to edit the provider name?
> 
> —
> Reply to this email directly or view it on GitHub
> https://github.com/openmrs/openmrs-core/pull/947#issuecomment-45949384.

## 

If we keep uppermost in our minds the unkind and unjust acts of others, we
shall find it impossible to love them as Christ has loved us; but if our
thoughts dwell upon the wondrous love and pity of Christ for us, the same
spirit will flow out to others.

@dkayiwa I know that, I also tested it out and got the same error. I'm
trying to demo the default behavior. My thought is that the error message
is what's misleading. So the scenario will be like, when a user wishes to
create a provider there are three options :
- user types in the Person leaves provider name blank and in this case
  provider name is set to be the same as Person Name
- user types in Provider name and later links provider name to person
- lastly, user types in Person, sets desired provider name and saves

@dkayiwa see attached screenshots

@rpuzdrowski i have also tested this code and found that the select multi is still enabled for non coded data types. Did you actually try run the web app to test your changes before creating this pull request?

I'm really looking forward to this fix.  However, how do you handle when multiple concepts have the same name?  This will cause an error when uniqueResult is called.  In my test database we happen to have two similar concepts (English and english).  The query will return both and fail on the unique part.  Also, do we have to take into account locality like the previous query?  

@rpuzdrowski, see @sjmckee comment. You can't simply query for a unique result in concept_name as there may be more concepts with the same name (it's allowed for short, synonym and index_term concept_name_type). The search should mimic getConcepts except for the fuzzy part. The sql will be faster and will return less results if you look only for exact matches.

Merged to master

@dkayiwa done

Merged into master at https://github.com/openmrs/openmrs-core/commit/a5d64128ca02fab97f6895971d5eda84cc97c24b

@rpuzdrowski i have just tested this again and i still can select multi even for non coded concepts. For instance i have a WEIGHT concept under my OBS section which i can still check as select multi.

Commented on ticket

Merged in https://github.com/openmrs/openmrs-core/commit/ccbd1df7adc75c3f2386d252949398228dd2776d

Merged in https://github.com/openmrs/openmrs-core/commit/27423e4969a818284b4f6ac03126871efc09ea1b

I've removed the duplicate @should annotations.

@vencik  can you squash these commits into one?

@rpuzdrowski i can reopen this after you have addressed the above. :)

Am closing this because author abandoned it.

Am closing this because author abandoned it.

@geoff-wasilwa can you squash these commits into one?

@vencik by the way, did you get a chance to look at squashing commits as documented here? https://wiki.openmrs.org/display/docs/Using+Git

@dkayiwa I'll finish this tomorrow; I'm having a bit of trouble with connectivity

Removed the commented out line. I think there's need to build again.

@dkayiwa Too much confusion; let me open another pull req.

@ujjwalarora can you squash these commits into one?

@geoff-wasilwa do you actually test the webapp before committing? I have tried create a provider by entering the identifier and provider name, only to still get the "Provider Name or Person required, but not both" error message.

@geoff-wasilwa try save without entering anything, you will correctly get the "Provider Name or Person required" error message. Immediately enter both the person and provider name, you will notice that you get a new error message, but the first one is also still displayed. Can you fix that?

@dkayiwa this should fix the problem, and I remembered to test this time round. Should I upload the screenshots, they are still the same as the once I posted earlier?

@vencik can we squash these into one? One of the commits looks more than a mere adding of @since. :)

@geoff-wasilwa can you squash these commits into one?

@dkayiwa done

This pull is to fix the problem with the header menu's being abnormally bigger in Internet Explorer 9/10 when xforms are loaded

Merged in https://github.com/openmrs/openmrs-core/commit/2fefe9576c8a5fb60fa92e1ad36f9d6aeafe3333

Merged at 1a56324

@citigoDev1 can we look for a solution which does not involve touching the css or headers in core?

@akolodziejski  do you mind adding license headers to these files?

@akolodziejski can we also add some class and method javadoc?

@dkayiwa How about this? To make these test more generic i can list all files matches pattern '.*.messages' instead of keeping file names in array. 

@akolodziejski can you try it out.

@dkayiwa I apply your requests. Thanks

@akolodziejski  when do you plan to finish the other dependent ticket?

@dkayiwa I believe make it in next week. But if it is too late i will try make it this weekend.

Commented and corrected as you suggested

@felipeq do you mind squashing these commits into one?

@dkayiwa You can reopen this. I sent a new commit few days ago :)

@dkayiwa  i created new pull request for dependent TRUNK-4406 issue : 
https://github.com/openmrs/openmrs-core/pull/978

@akolodziejski  how are you looking for duplicate keys? Manually or did you automate it?

@dkayiwa  I used script :(example)$ awk -F "=" '{print $1}' messages.properties | sort | uniq --count | sort -r | grep -v '^[[:space:]]*1'>> messages_es.properties.duplicated_lines.txt

TO find duplicated keys.

@ujjwalarora here is the answer too this: https://answers.openmrs.org/questions/1402/why-does-my-build-of-193-on-windows-fail-a-test

@rpuzdrowski do you mind squashing these commits into one? And also do not include the merge from Geoff. :)

@rpuzdrowski i have tested the web application and found that this works well when adding the field to a form. But when i navigate away from the form schema screen and then come back to edit the field, the select multiple is disabled even for coded data types. Can you look into this too?

Added changes in commit ca07259

@dkayiwa I hope that now it's ok :)

@rpuzdrowski yes it is now ok, finally. :)

Well, hasErrors is a more generic check. But hasFieldErrors("identifier") is valid too in this case. The old tests used hasErrors for some unit tests and hasFieldErrors in others. So there was some level of inconsistency I guess. 

It would make sense to use hasFieldErrors("identifier") on asserting on the errors encountered during a test to ensure that the errors are in fact related to the field identifier. Now, we check for positive behaviour (i.e accept duplicates) checking for the absence of any errors with assertFalse(errors.hasErrors) is sufficient in this case.

@dkayiwa I have realised the error of my ways.

@dkayiwa I have realised the error of my ways. The _isVersionWithQualifiers_ method checks for values like 1.2.3-SNAPSHOT so that they are not confused with version ranges. I have removed the line that stripped of qualifiers since it does the same thing as _isVersionWithQualifiers_, but without restrictions on the format of qualifiers.

It was intentional. The comment suggested that the code would 'skip check if this is a retired provider'. But the code didn't seem to have any logic to skip duplicate checks on retired providers. It was doing the duplicate checks on the identifier and then did a check on whether it was retired and had a reason for retiring and threw an error if the reason didn't exist.

```
-       //if this is a retired existing provider, skip this
 -      //check if this provider has a unique identifier
 -      boolean isUnique = Context.getProviderService().isProviderIdentifierUnique(provider);
 -      if (!isUnique) {
 -          errors.rejectValue("identifier", "Provider.error.duplicateIdentifier",
 -              new Object[] { provider.getIdentifier() }, null);
 -      }
 -      
        if (provider.isRetired() && StringUtils.isEmpty(provider.getRetireReason())) {
            errors.rejectValue("retireReason", "Provider.error.retireReason.required");
        }
```

Oh i see!!!

On Tue, Jul 15, 2014 at 7:23 PM, Priya Chandran notifications@github.com
wrote:

> It was intentional. The comment suggested that the code would 'skip check
> if this is a retired provider'. But the code didn't seem to have any logic
> to skip duplicate checks on retired providers. It was doing the duplicate
> checks on the identifier and then did a check on whether it was retired and
> had a reason for retiring and threw an error if the reason didn't exist.
> -       //if this is a retired existing provider, skip this
>   -      //check if this provider has a unique identifier
>   -      boolean isUnique = Context.getProviderService().isProviderIdentifierUnique(provider);
>   -      if (!isUnique) {
>   -          errors.rejectValue("identifier", "Provider.error.duplicateIdentifier",
>   -              new Object[] { provider.getIdentifier() }, null);
>   
>   ## \-      }
>   
>   ```
>     if (provider.isRetired() && StringUtils.isEmpty(provider.getRetireReason())) {
>         errors.rejectValue("retireReason", "Provider.error.retireReason.required");
>     }
>   ```
> 
> —
> Reply to this email directly or view it on GitHub
> https://github.com/openmrs/openmrs-core/pull/983#issuecomment-49056892.

## 

If we keep uppermost in our minds the unkind and unjust acts of others, we
shall find it impossible to love them as Christ has loved us; but if our
thoughts dwell upon the wondrous love and pity of Christ for us, the same
spirit will flow out to others.

@dkayiwa do I create another pull request?

yes

On Wed, Jul 16, 2014 at 8:35 AM, Geoffrey W Wasilwa <
notifications@github.com> wrote:

> @dkayiwa https://github.com/dkayiwa do I create another pull request?
> 
> —
> Reply to this email directly or view it on GitHub
> https://github.com/openmrs/openmrs-core/pull/980#issuecomment-49125339.

## 

If we keep uppermost in our minds the unkind and unjust acts of others, we
shall find it impossible to love them as Christ has loved us; but if our
thoughts dwell upon the wondrous love and pity of Christ for us, the same
spirit will flow out to others.

@felipeq  did you make all the commits i see on this pull request? :)

I already merged the earlier pull request.

and did you make the change to use the java constant? that's what this PR was about

That change is not yet there. You need to create a new pull request that
has only this change, and no more. :)

On Thu, Jul 17, 2014 at 7:59 AM, Geoffrey W Wasilwa <
notifications@github.com> wrote:

> and did you make the change to use the java constant? that's what this PR
> was about
> 
> —
> Reply to this email directly or view it on GitHub
> https://github.com/openmrs/openmrs-core/pull/986#issuecomment-49258593.

## 

If we keep uppermost in our minds the unkind and unjust acts of others, we
shall find it impossible to love them as Christ has loved us; but if our
thoughts dwell upon the wondrous love and pity of Christ for us, the same
spirit will flow out to others.

@rkorytkowski this generally looks good. When do you plan to merge it?

@geoff-wasilwa can you add another unit test where you save two concept reference terms, with one of them retired. The try call ConceptService.getConceptReferenceTermByCode() and check if the test passes.

@dkayiwa It fails with following error: ConceptReferenceTerm.foundMultipleTermsWithCodeInSource :). Can I change the implementation of ConceptService.getConceptReferenceTermByCode() to return only non-retired terms?

Try that and we see.

On Tue, Jul 22, 2014 at 6:41 PM, Geoffrey W Wasilwa <
notifications@github.com> wrote:

> @dkayiwa https://github.com/dkayiwa It fails with following error:
> ConceptReferenceTerm.foundMultipleTermsWithCodeInSource :). Can I change
> the implementation of ConceptService.getConceptReferenceTermByCode() to
> return only non-retired terms?
> 
> —
> Reply to this email directly or view it on GitHub
> https://github.com/openmrs/openmrs-core/pull/990#issuecomment-49756876.

## 

If we keep uppermost in our minds the unkind and unjust acts of others, we
shall find it impossible to love them as Christ has loved us; but if our
thoughts dwell upon the wondrous love and pity of Christ for us, the same
spirit will flow out to others.

@felipeq do you mind including more than just the ticket number for your commit and pull request messages as advised here? http://go.openmrs.org/pull-request-tips

@chocobar can you clean up this pull request according to the tips at? http://go.openmrs.org/pull-request-tips

@chocobar can you squash these commits into one? http://go.openmrs.org/pull-request-tips

@felipeq i can reopen this after you have addressed the review comments.

Am closing this PR because the ticket was cancelled.

Well, I did consider squashing these into one but felt it might be good to keep them separate. This ticket talks about two separate issues really - 1) making date of birth a required field for Patients and not Persons and 2) making gender a required field for Patients and not Persons. 

I felt it would be good practise to keep these commits separate. In the future, if the maintainers of openmrs decide to revert one of these functions (i.e date of birth or gender being a required field for Patients) they could can independently revert the appropriate commit without having to make any other changes.

The third commit is a refactoring bit which just pulls out some validation. This could be squashed.

Could you explain why you might want to squash everything into one commit? If it's just the general practice in openmrs, that's fine.

- Sure yes, I'll rename isBirthDateValid to validateBirthDate. Does sound more appropriate.
- - @should fail validation if gender is blank
  - @should fail validation if birthdate is blank
    already exists in PatientValidator. Is there another place I'd need to add it to?
- Regarding tests for date/birthdate not being a requirement for Persons who are not Patients.  Because of the way this is implemented this test might not be required.  Right, this was a minor dialemma I faced and would like to discuss this. PatientsValidator extends PersonValidator and adds extra functionality to it. PersonValidator has no idea about gender or birthdate requirement validation as such. So PersonValidatorTests test only the functionality that exists within it. PatientValidatorTests test the extra requirements that it adds on (gender and birthdate) and also run PersonValidatorTests with Patients to make sure none of the base class requirements are violated.

So adding a test for a requirement which is not implemented in Person seemed inappropriate. It's a lot like testing having classes Animal and Cat, where Cat extends Animal. And having a test for Cats to say "meou", and then having an additional test in Animals to not say "meou".

It is a general practice which simplifies reviews (in some cases) and back porting using cherry-pick.

I've now squashed relevant refactoring into other commits. And made changes to rename isBirthDateValid. I've rebased it so look cleaner.

@dkayiwa Could you please elaborate on your last comment above.

@dkayiwa Is there an issue with flaky builds on this project? I pushed changes and CI failed. I pushed the exact same changes again and it passed!

@chocobar depends on the CI log. We had a SchedulerServiceTest which used to fail randomly. Some one is looking into it. :)

Please could you link me to your comment. I'm unable to find anything about removing the "birthdate" and why.

Your comment says:
"
Am making this ticket ready for work such that some one can implement the recommendations from above, which are:
Not to require gender or birthdate for persons linked to users or providers.
Take a look at PersonValidator.java"

That's because this method as well as tests need modulePackageName and taskPackageName as String[], split by '.' . I corrected

@dkayiwa 

I've removed the commit to implement the birthdate requirement on Patients and pushed. I'm not very familiar with openmrs yet, so I just went in and implemented the solution based on your comments on implementation the ticket. Initially it was to have a requirement check for gender and birthdate for Patients and explicitly not have that check for Persons. I see that now it has been modified to just _not_ have a requirement for gender and birthdate for Persons and ignore the behaviour for Patients. 

NB: In the software community here, it's not considered good practice to change the requirements after it's worked on without any comments on the rationale as to why! In the spirit of Agile development, I understand that requirements change all the time. But it would have been good to review this before making this ticket 'ready to work'.

I completely agree with you on this. We try as much as possible to avoid
it. But once in a while we find ourselves in this situation. Am please
sorry about this and will do my best to minimize the re occurrence of such.
Other wise thank you so much for your patience and great efforts!!!

On Tue, Jul 29, 2014 at 1:13 PM, Priya Chandran notifications@github.com
wrote:

> @dkayiwa https://github.com/dkayiwa
> 
> I've removed the commit to implement the birthdate requirement on Patients
> and pushed. I'm not very familiar with openmrs yet, so I just went in and
> implemented the solution based on your comments on implementation the
> ticket. Initially it was to have a requirement check for gender and
> birthdate for Patients and explicitly not have that check for Persons. I
> see that now it has been modified to just _not_ have a requirement for
> gender and birthdate for Persons and ignore the behaviour for Patients.
> 
> NB: In the software community here, it's not considered good practice to
> change the requirements after it's worked on without any comments on the
> rationale as to why! In the spirit of Agile development, I understand that
> requirements change all the time. But it would have been good to review
> this before making this ticket 'ready to work'.
> 
> —
> Reply to this email directly or view it on GitHub
> https://github.com/openmrs/openmrs-core/pull/995#issuecomment-50458301.

## 

If we keep uppermost in our minds the unkind and unjust acts of others, we
shall find it impossible to love them as Christ has loved us; but if our
thoughts dwell upon the wondrous love and pity of Christ for us, the same
spirit will flow out to others.

I've added a unit test for checking that gender is not a requiement for Persons now. But it might be a bit overkill as PersonValidator now doesn't have any logic to validate/not-validate gender. It's a test to check for behaviour that doesn't exist.

Since PatientValidator extends PersonValidator the tests are set up such that PatientValidatorTests runs all it's tests and also PersonValidatorTests (to check that it doesn't break the base class). This means that I had to work around this in my tests. 

What will we gain by making it a fully qualified class name.
So if a new custom DosingType is added by one of the implementors they can always write their own validator, and I have made changes to the DrugOrderValidator. 

Or the other approach we can use is by giving access of the object of type DosingInstructions in the DrugOrder model itself and then have a validate method in the drugOrder itself, which in turn will call the validate in the DosingInstruction. 

That way one can implement DosingInstruction for a custom dosing type and then can implement their own validation. But that would mandate having a DosingInstructions for a new DosingType. 

Also, I agree that we should have something like: DosingInstructions.validate(DrugOrder) which is called by DrugOrderValidator

DosingInstructions _is_ what a dosing type is.

Should we implement the DosingInstructions.validate(DrugOrder) as part of this story? 

Code looks good. Could you please squash 2 commits to be one (merge branch 'master' needs to go) and mention issue id in the commit message? use for example git rebase -i HEAD~2

Merged in https://github.com/openmrs/openmrs-core/commit/cc8882cdaa734ee3fce8025775b8529a88aa16ab

Just saw the merge.

Thanks for taking care of squashing commits.

On Mon, Aug 4, 2014 at 8:23 PM, Rafal Korytkowski notifications@github.com
wrote:

> Merged in cc8882c
> https://github.com/openmrs/openmrs-core/commit/cc8882cdaa734ee3fce8025775b8529a88aa16ab
> 
> —
> Reply to this email directly or view it on GitHub
> https://github.com/openmrs/openmrs-core/pull/1005#issuecomment-51070491.

Also, please note that since we merged another change that renamed startDate to dateActivated, you're going to need to rebase this against master, and fix some conflicts.

If there is any existing validation logic in DrugOrderValidator or in the service that really belongs in DosingInstructions.validate, then it should be moved there. If there are no relevant validations yet, it can be an empty method in our DosingInstructions implementations.

Done :)

There was also another key which i think you forgot to change as past the last review. :)

These pull requests need to be issued to be merged into master and not 1.10.x,which means you should be coding against master

These pull requests need to be issued to be merged into master and not 1.10.x,which means you should be coding against master

The request is already issued to be into master. These changes would be required in master and back ported to 1.10.x.

Changes only required in 1.10.x. Will raise a pull request again into master.

Created a pull request into master for backporting deprecated getters and setters to 1.0.x
[https://github.com/openmrs/openmrs-core/pull/1010]

It's not needed since Orders API is already backwards incompatible.

@felipeq i can reopen this pull request after you have addressed the review comments.

Merged into master

Made the required changes. Please review. 

Also OpenMRS has to be supported from Java 1.6 onwards right? 
Because if the support is from 1.7 there is another change I would like to make. 

I wanted to know how do you backport to the previous branches from the master?
Do you cherry-pick?

Because since we have 1.10.x already in production I would like to add new liquibase changesets which were required as part of this story rather than modify the existing ones and send a pull request just for the branch 1.10.x 
Don't want to go through an extra deployment step for the next deployment. And also modifying changesets on something which is already in production(even if only one place) kind of seems wrong.

Tell me what you think.

As long as you add new liquibase changeset(s) and not modify existing ones, you should be fine in production.

I will do the back porting to other branches once you are done with, so don't worry about that.

It works, i just don't think it is worth the effort to do it separately for different branches

I can reopen this after you have addressed the review comments. :)

I would probably keep the getCalculatedXXX() methods private, they are intended for internal use, external code should still call getDateActivated() and getDateStopped() and under the hood we call getCalculatedXXX() where necessary.

Also remember we renamed startDate to dateActivated therefore the new methods should be named accordingly to avoid confusion.

Merged

merged

It is getting closer @endeepak, thanks for the latest changes, I added some responses to your comments

@wluyima Thanks for reviewing. I've made changes as per your comments

The Travis CI failure is meaningless, since travis doesn't know how to build 1.7.x

Good. Then that means I didn't break anything. :)

Tammy

On 9/11/2014 11:48 AM, Darius Jazayeri wrote:

> The Travis CI failure is meaningless, since travis doesn't know how to 
> build 1.7.x
> 
> —
> Reply to this email directly or view it on GitHub 
> https://github.com/openmrs/openmrs-core/pull/1036#issuecomment-55284140.

@tmdugan something went wrong here because it shows up as if you have edited every line of the files touched, and we can't see the actual change. Possibly it got reformatted to use spaces instead of tabs, or vice versa? Or maybe a windows vs linux line terminator thing (that I thought Burke had fixed, but maybe not in 1.7.x)?

How can I fix it?

It looks fine on my end when I do a diff in Eclipse. I am editing on a Windows machine.

@bmamlin is it possible that when you fixed whatever you fixed about line endings, you didn't do so for 1.7.x?

It would be nice to check the count in all unit tests that test searching

I made comments on https://issues.openmrs.org/browse/TRUNK-4487

I tried what was described on the dev list. When I do it, several files are changed but not my files. Does that mean my files have the correct line endings but core does not?

I was looking at the code in Duration, and this method needs to change to only consider SAME-AS mappings: public static String getCode(Concept durationUnits)

@djazayeri, why is necessary to restrict it to SAME-AS map type? I think it would weird to reject a concept that has a different mapping type, but if we everyone else agrees that it is what we want, i can update the code

Updated pull request as per review comments except for restricting on SAME-AS type, still waiting on response

We want to know if the concept is exactly the same as the SNOMED term for a duration unit. We are not interested in concepts that are merely "related to" those SNOMED terms in some other way.

Take a look at all the other map type options at https://wiki.openmrs.org/display/projects/Concept+Mapping+Metadata+(Design+Page) 

If the admin has mapped a concept as being "NARROWER THAN" seconds, how would we interpret that? Answer: we should not, and it's probably a mistake.

Updated the code to only allow mappings with SAME-AS map type

The Travis CI failure is "[ERROR] /home/travis/build/openmrs/openmrs-core/web/src/main/java/org/openmrs/web/controller/patient/PatientIdentifierTypeValidator.java:[20,7] error while writing org.openmrs.web.controller.patient.PatientIdentifierTypeValidator: No space left on device", which I guess is spurious.

This looks really good.

My only concern is that you've now moved code that uses AdministrationService to get global properties so that it comes before the call to Context.addProxyPrivilege(""), whereas the proxy privilege used to be granted first.

A different instance of addProxyPrivilege("") in the same file has this comment:

```
// this method must check and run queries against the database.
// to do this, it must be "authenticated".  Give the current
// "user" the proxy privilege so this can be done. ("user" might
// be nobody because this is being run at startup)
Context.addProxyPrivilege("");
```

How thoroughly have you tested this code in a running webapp?

(I'd feel safer with a minor tweak to just make sure the proxy privilege is granted for all the operations, though I forget the exact details of why that line is there, but it's been there since at least 2007.)

I have removed it then @wluyima

@dkayiwa did you get the chance to review this?

@wluyima I made the changes you suggested. Please take a look.

Requires modifications.

@mhawila , FYI you don't need to create a new pull request whenever you make changes to an unmerged pull request, when you commit and push to the same branch, github updates your pull request automatically with the changes in subsequent commits

@dkayiwa made changes according to your earlier comments.

Merged at: https://github.com/openmrs/openmrs-core/commit/c2fcd08f9a34e51ada6a2c0f11ccbbee59c996d7

@pmuchowski did you test this out in the webapp? I voided a patient but did not have him listed by your changes even after checking include voided. Do you mind addressing this?

@k-joseph this will override whatever value the user may have customized to. So it does not address @wluyima 's concern

We have to use straight sql because Hibernate is giving issues when I try to get a fresh order from the db. It was failing other tests when I tried evicting the order and then merging the previous order back to the session.

I expected to see a test that saves a REVISED order and ensures that the autoExpireDate gets set

It is more like autoExpireDate should not get set only when it is a DISCONTINUE order, right? The tests check that it does not get set when order type is DISCONTINUE, and does get set irrespective of any other order type. 
Let me know if I need to write a test specifically for REVISE orders. 

@juanferrub can you create a ticket for this?
Can you also squash these commits into one?
Did you take a look at? http://go.openmrs.org/pull-request-tips

Closing this pull request because it cannot be automatically merged.

@SharonVarghese can you create a new pull request on master instead of the 1.9.x branch?

Closing because the author abandoned it.

@dkayiwa How would the framework determine you want to set void property to whatever value you want considering the fact that voidNote() for all what the framework cares is just another method. Or is there code defined somewhere for method of the form voidSomething() that I don't know about? I might be wrong but I don't see any event that triggers this setting automatically. 

As for saveOrUpdate() probably the most appropriate method would be update() since we expect to be voiding notes that already exist in the database.

@mhawila take a look at RequiredDataAdvice to see how the framework handles this.

Thanks @dkayiwa I missed that one! @k-joseph  I think you need to revert to the original code. Sorry I misled you buddy.

@pmuchowski you need to actually test this yourself in the browser before creating the pull request. I have just tested and confirmed that i still do not see voided patients even after ticking the include voided check box.

@pmuchowski the ticket still does not have a screenshot of your web app showing voided patients.

Closing this pull request because it is not the correct fix.

Closing this pull request because its changes are not necessary.

@vinayvenu this pull request does not allow one to save a description for any concept. Whether new or existing.

update() would have been fine and i thought about it, though i thought that saveOrUpdate() would just do the same thing.

Alright, i surely did not know that our platform does that before when i wrote the first merged code, however when @mhawila brought it up, you brought knowledge to me, thanks, i think @dkayiwa will just revert the pull request that he had merged :+1: 

He did not merge the pull request. I just closed it.

As for update vs saveOrUpdate() just take a look at the existing services
and copy the pattern they are using.

On Thu, Oct 16, 2014 at 9:47 PM, k-joseph notifications@github.com wrote:

> update() would have been fine and i thought about it, though i thought
> that saveOrUpdate() would just do the same thing.
> 
> Alright, i surely did not know that our platform does that before when i
> wrote the first merged code, however when @mhawila
> https://github.com/mhawila brought it up, you brought knowledge to me,
> thanks, i think @dkayiwa https://github.com/dkayiwa will just revert
> the pull request that he had merged [image: :+1:]
> 
> —
> Reply to this email directly or view it on GitHub
> https://github.com/openmrs/openmrs-core/pull/1064#issuecomment-59410244.

## 

If we keep uppermost in our minds the unkind and unjust acts of others, we
shall find it impossible to love them as Christ has loved us; but if our
thoughts dwell upon the wondrous love and pity of Christ for us, the same
spirit will flow out to others.

Ok please, i just was remembering another PR

Closing this because ticket was closed after all code was merged.

Am closing this because all code was merged and ticket closed.

Am closing this because all code was merged and ticket closed.

Am closing this because all code was merged and ticket closed.

@Tharunya according to the tips here http://go.openmrs.org/pull-request-tips, can you create a new pull request on the master branch?

@Tharunya according to the tips here http://go.openmrs.org/pull-request-tips, can you create a new pull request on the master branch?

@dkayiwa Should i create the new pull request after making the changes as @lluismf suggested? Or should i directly create a new pull request on master branch?

@Tharunya create a new pull request on the master branch.

I'm sorry I've made few minor mistakes in this pull request.So,I've closed the pull request and will put up a updated pull request shortly 

@vinayvenu can you look into why this breaks the travis build?

Done.

In replies to all comments. 

Used StringUtils. 
Changed assert to assertNull. 
Added assertNotNull assertion for conceptDescription. 
Added a test for blank string. 

Adding/editing concept seems to be working fine. What problem/exception are you facing? 

In SimpleDosingInstructionsTest, getAutoExpireDate_shouldInferAutoExpireDateForScheduledDrugOrder and getAutoExpireDate_shouldInferAutoExpireDateForAKnownSNOMEDCTDurationUnit have been changed in an earlier commit to subtract a millisecond. These will test that a millisecond is subtracted from whatever Duration provides. We do not need individual tests for each duration, since that is already done in DurationTest. 

I think I see one small error ("El ombre" instead of "El nombre").

@juanferrub can you fix that and also squash the commits, as per the link that Daniel sent/

The travis build is failing for this pull request

The travis build is fixed now, so no worries about it

@Tharunya create this pull request on master as advised here http://go.openmrs.org/pull-request-tips

Good that you have identified the new invalid keys,  

@dkayiwa I think that now you'll be glad :)

Hahahahaha. :)
Do you mind creating the pull request on the master branch? And also adding some unit tests for this?

@jkondrat this unit test still passes, even without your changes in HibernatePatientDAO
Can you start with a failing unit test but which passes only after your changes?

@satwikreddy as documented at http://go.openmrs.org/pull-request-tips, you need to run mvn clean install and ensure that all tests are passing, before you create the pull request. Can you do that?

@rpuzdrowski this unit test passes even without your changes. Can you start by creating a failing unit test? Which passes only after your changes?
Secondly, we usually have these tests in pairs where one tests the condition which should throw the exception, while the other tests that which should not throw.

@dkayiwa on master branch OpenMRS uses Spring 3.2.3 and start even if JVM is 1.8, problem was on branch 1.9.x. So on master branch, I can't write test which will fail. If you want I can write test, which will fail on 1.9.x :)

@rpuzdrowski can you write a test which will fail on 1.9?

@dkayiwa the second test will fail on 1.9.x without my changes :)

@vinayvenu with your changes, i cannot save any concept description

@dkayiwa - not sure why that happens. @djazayeri was here when we retested the code on the legacy UI. 
Do you have a stack trace? Also, I was running tomcat 7.0.22 on Oracle JDK 7 with demo data, if that could make a difference. 

@vinayvenu it does not throw any errors.
Here is how to reproduce it:
1) Get the latest changes for master
2) Apply your changes to master
3) Create a new concept, give it description, and save. Try create another concept without a description and later on edit to give it a description. These two cases will be enough.

@harsha89 unless you can prove that we need both tests :)

@dkayiwa I have checked and tested by changing dataComplted to empty with only null check. Also verified the dataComplted value after changed it to empty which is null in the database. So only null check is enough and updated the pull request :)

@jkondrat i still see a couple more comments not yet addressed. Do you mind cross checking again?

@dkayiwa I think now it should be ok :)

@rpuzdrowski i love this! :)

@jkondrat do you mind helping me understand how this fixes the problem?
This is because the line you replaced was saving the exact same value as your new code and for the exact same global property. :)

@dkayiwa The saveGlobalProperty method also notifies global property listeners, while setGlobalProperty doesn't

@rpuzdrowski did you find out why all works well with the master branch, which does not have these changes?

@dkayiwa  The popup show up, when the number of search results was bigger than two pages (default 20). I added own patients and tested it.

@dkayiwa I was sitting with Vinay et al, and watched as they clicked around, adding and removing descriptions. It all worked fine.

Can you clarify what is failing if it doesn't throw errors?

@djazayeri 
Here is how to reproduce it:
1) Get the latest changes for master
2) Apply this pull request changes to master
3) Create a new concept, give it description, and save. Try create another concept without a description and later on edit to give it a description. These two cases will be enough to show you that no description is saved. :)

@jbuczynski did you actually test your changes by running the web application and checking the user interface effects?

@dkayiwa, I don't have a master database and I'm not going to to test this.
It would help if you can clarify what the error mode is. Are you saying
that when you create a new concept via the UI, its descriptions are not
actually saved?

Correct!
They are not saved and no error is thrown.

On Wed, Nov 5, 2014 at 12:39 AM, Darius Jazayeri notifications@github.com
wrote:

> @dkayiwa, I don't have a master database and I'm not going to to test this.
> It would help if you can clarify what the error mode is. Are you saying
> that when you create a new concept via the UI, its descriptions are not
> actually saved?
> 
> —
> Reply to this email directly or view it on GitHub
> https://github.com/openmrs/openmrs-core/pull/1055#issuecomment-61719377.

## 

If we keep uppermost in our minds the unkind and unjust acts of others, we
shall find it impossible to love them as Christ has loved us; but if our
thoughts dwell upon the wondrous love and pity of Christ for us, the same
spirit will flow out to others.

@rpuzdrowski are all these changes necessary for just getting rid of this error message? Or did you do some other cleanup issues alongside this? :)

@dkayiwa When I was able to fix the error with show pop up, I received only 20 results (2 pages), although I should received more. I fixed it also. Such I as wrote in my comment on JIRA, it was related to TRUNK-3833. 

@jkondrat the failure for this test, before your changes, is caused by Context.getPatientService().getPatient(10) returning null. We need a test whose failure is caused by lack of thread safety when saving patients.

@Tharunya can you do the pull request on master as advised here? http://go.openmrs.org/pull-request-tips

@pmuchowski i think it is fine to close this pull request since you already opened https://github.com/openmrs/openmrs-core/pull/1132. Not so? :)

Remember to run mvn clean install as advised here http://go.openmrs.org/pull-request-tips such that your code gets correctly formatted.

Yes, of course I did

Can you attach a screenshot on the ticket?

On Thu, Nov 6, 2014 at 1:54 PM, jbuczynski notifications@github.com wrote:

> Yes, of course I did
> 
> —
> Reply to this email directly or view it on GitHub
> https://github.com/openmrs/openmrs-core/pull/1125#issuecomment-61962669.

## 

If we keep uppermost in our minds the unkind and unjust acts of others, we
shall find it impossible to love them as Christ has loved us; but if our
thoughts dwell upon the wondrous love and pity of Christ for us, the same
spirit will flow out to others.

@jbuczynski can you squash these commits into one?

in this case record is LocationAndDepth instance and it only have two properties : location and depth so i can't simply get retired property from this class

@dkayiwa Its because this patient was not in the dataset before my commit - I needed at least two patients lacking identifiers with the same type. On my side the test fails with ConstraintViolationException when I revert changes in PatientServiceImpl

Committed at: https://github.com/openmrs/openmrs-core/commit/df2330fd934d76112d7c37ac77aa65b71091020a

I have some minor mistakes in this pull request so i am closing this pull request will create a new pull request shortly ! Apologies :) 

@rpuzdrowski can you try to investigate what makes scheduledTasks null?
It is initialized on declaration and is never expected to be set to null. Can you investigate what calls setScheduledTasks() with a null argument? We could be masking a bug somewhere.

@dkayiwa When some module is started, method 'onShutdown()' in TimerSchedulerServiceImpl.java is called. In this method 'TimerSchedulerServiceImpl.scheduledTasks' is setting to null. Do you think, that I should modify only onShutDown() method?

@rpuzdrowski oh i see!!!. Then in that case what you did is enough . :)

Please don't merge this yet. Discussion at https://groups.google.com/a/openmrs.org/d/msg/dev/hh0dlh1yOKU/1Hc6IcBrA0sJ

(Probably this discussion will need to be rekindled if it peters out.)

@jkondrat we shall reopen this after the discussion is concluded. :)

@jkondrat can you add some unit tests for this controller?

@nrfowler did you get a chance to look at? http://go.openmrs.org/pull-request-tips

@juanferrub remind me to reopen this when you are done with the above. :)

@vinayvenu remind me to reopen this when you are done looking into what i reported. :)

@SharonVarghese you have left out a few more places. Can you take another look?

@jkondrat remind me to reopen this after you have added the unit test. :)

@pmuchowski i some how feel like this kind of logic belongs to the service layer. Not so?
It would also be great to add some unit tests.
And finally attach, on the ticket, a screen shot with the effects of your changes.

Closing because it was merged at: https://github.com/openmrs/openmrs-core/commit/311765c1da2f3219f3b19b81b2d63ca822ad076b

@rpuzdrowski this pull request has merge conflicts. Did you remember to do all as advised at? http://go.openmrs.org/pull-request-tips

@dkayiwa Updated.

Some tests are broken

@geoff-wasilwa remind me to reopen this after you have responded to the review comments.

@pmuchowski when i try search for patients here http://uat01.openmrs.org:8080/openmrs/admin/patients/index.htm with your changes, i get no results and the progress icon spins forever.

@harsha89 remind me to reopen this when you are done responding to Wyclif's comments. :)

@richhiey1996 are you really doing a pull request for? https://issues.openmrs.org/browse/TRUNK-2193

@satwikreddy this ticket is about Javadoc Comments to Services instead of unit tests.

@pmuchowski  remind me to reopen this after you have attached, on the ticket, an example screenshot with the effects of your changes.

@pmuchowski reopen this when you are done with the changes.

@jbuczynski remind me to reopen this after you have attached, on the ticket, a screenshot with the effects of your changes.

@rpuzdrowski remind me to reopen this after you have responded to the query i have raised on the ticket.

@pmuchowski remind me to reopen this after you have attached a screenshot with the effects of your changes.

@jkondrat remind me to reopen this after you have attached, on the ticket, a screenshot with the effects of your changes.

@pmuchowski remind me to reopen this after responding to the comment on the ticket.

@jbuczynski remind me to reopen this after you are done responding to the review comments.

Am closing this pull request until when the line endings problem is fixed.

@rpuzdrowski did you forget to add this requirement to ConceptValidator?

@pmuchowski i have failed to reopen the pull request. Did you force-push or recreate the branch?

@harsha89 do you mind including some unit tests for these changes?

@dkayiwa pull request is looks good to me. 

@harsha89 the ticket does not have any assignee. :)

@dkayiwa mhhh since this task is for multtiple students in GCI.There may be several students working on this task. How we going to handle it?

Is it possible to have this as the parent ticket but with sub task tickets
for each student?

On Tue, Dec 2, 2014 at 11:59 AM, Harsha Kumara notifications@github.com
wrote:

> @dkayiwa https://github.com/dkayiwa mhhh since this task is for
> multtiple students in GCI.There may be several students working on this
> task. How we going to handle it?
> 
> —
> Reply to this email directly or view it on GitHub
> https://github.com/openmrs/openmrs-core/pull/1172#issuecomment-65200067.

## 

If we keep uppermost in our minds the unkind and unjust acts of others, we
shall find it impossible to love them as Christ has loved us; but if our
thoughts dwell upon the wondrous love and pity of Christ for us, the same
spirit will flow out to others.

@dkayiwa mhhh actually we may not strictly mentioned about the task. Student will look at the existing bad code practices either from sonar and manually inspecting them. So we may can ask them to create a ticket for their task and link to the parentt. What would be the best thing to do?  

Creating a ticket for their task and link to parent looks perfect!

On Tue, Dec 2, 2014 at 12:07 PM, Harsha Kumara notifications@github.com
wrote:

> @dkayiwa https://github.com/dkayiwa mhhh actually we may not strictly
> mentioned about the task. Student will look at the existing bad code
> practices either from sonar and manually inspecting them. So we may can ask
> them to create a ticket for their task and link to the parentt. What would
> be the best thing to do?
> 
> —
> Reply to this email directly or view it on GitHub
> https://github.com/openmrs/openmrs-core/pull/1172#issuecomment-65200976.

## 

If we keep uppermost in our minds the unkind and unjust acts of others, we
shall find it impossible to love them as Christ has loved us; but if our
thoughts dwell upon the wondrous love and pity of Christ for us, the same
spirit will flow out to others.

@dkayiwa created the ticket on behalf of him in https://issues.openmrs.org/browse/GCI-44. I can't assign it to him. :)

Needed to go from Needs Assessment to Ready For Work

On Tue, Dec 2, 2014 at 12:24 PM, Harsha Kumara notifications@github.com
wrote:

> @dkayiwa https://github.com/dkayiwa created the ticket on behalf of him
> in https://issues.openmrs.org/browse/GCI-44. I can't assign it to him. :)
> 
> —
> Reply to this email directly or view it on GitHub
> https://github.com/openmrs/openmrs-core/pull/1172#issuecomment-65202748.

## 

If we keep uppermost in our minds the unkind and unjust acts of others, we
shall find it impossible to love them as Christ has loved us; but if our
thoughts dwell upon the wondrous love and pity of Christ for us, the same
spirit will flow out to others.

Done it seems :). 

Sure,  that would help,  I read about several students working on the same issue via melange and had not thought about who then would be the assignee of such group worked on tickets and therefore I totally agree that sub-tasks will as will eliminate having similar participants submitting similar work. 

@harsha, have you guys assigned me any days as a captain already so I check with  my program

@k-joseph @dkayiwa yep we needs to define that strategy.

I couldn't assign the task to myself as I don't appear to have the necessary privileges in the JIRA bug tracker.

Are you logged in JIRA?

On Tue, Dec 2, 2014 at 2:21 PM, rarkenin notifications@github.com wrote:

> I couldn't assign the task to myself as I don't appear to have the
> necessary privileges in the JIRA bug tracker.
> 
> —
> Reply to this email directly or view it on GitHub
> https://github.com/openmrs/openmrs-core/pull/1172#issuecomment-65216219.

## 

If we keep uppermost in our minds the unkind and unjust acts of others, we
shall find it impossible to love them as Christ has loved us; but if our
thoughts dwell upon the wondrous love and pity of Christ for us, the same
spirit will flow out to others.

I think we should not merge it now... once we have all the pull request on core tickets, we should review thoroughly and then merge. We can close the GCI task, but not merge the pull request till the time GCI is over and all the pull requests on a single ticket is done... Sounds good?

@sunbiz that sounds good. But again if students are going to work on task which can done by multiple students, they may repeat same thing. In this case, some other student may fix same set of code segments and create a pull request. We should dealt with that. Since GCI tasks are much simpler, we can review them quickly. As @dkayiwa mentioned, are we going to create sub tasks of parent tickets and assign it to the student as we can't have multiple assignees per some tasks?

No, it will be just one ticket, worked on by multiple students in GCI. This is the workflow that we follow when a developer takes up an issue, submits a pull request, the pull request is merged, but more work remains, another developer comes in, works a bit more on it... so the GCI ticket is designed in this way that multiple students make pull requests to a single ticket. Makes sense @dkayiwa ??

Hi @sunbiz, I would actually vote for subtasks to give our students a sense of ownership of an issue in JIRA. 
Still I see no need of approving issues that we can't merge,  in-case of earing any risks in merging students contributions in the master branch of core for core related tasks,  then I think we can branch off a gci2014 branch from off master where we can merge student contributions like patches and be able to pull from such a branch and look at the impact of their changes if they affect the UI. Another advantage of branching is to work separately outside master and have other community members be able to checkout what we reviewed and merged,  late on the gci2014 can be merged into master after all reviews are satisfied. 

Thanks,  let me know if I can be assigned any days as a captain mentor so we can agree on which dates that can be

@k-joseph the problem with that is that it becomes duplicating issues in our JIRA, unless we create separate issue for each 10 code style fixes from each student. We decided that we will avoid this duplication in JIRA and limit wasteful ticketing. Instead that is managed in melange. I see the point of creating a separate branch from which gci students will fork and then work... but I also dont see any reason why we shouldnt give them a real feel of forking master, with the goal that they can then start working on intro tickets. May be we should take this discussion to Talk instead of here?

@sunbiz +1 for start discussion on this topic in talk. This is becoming a conversation now :)

Accidentally changed file on wrong branch but computer died. Will rebase asap.

Can you please include the ticket number in the summary/title of this pull request? Because i can't tell what it is.

Can you please include the ticket number in the summary/title of this pull request? Because i can't tell what it is.

Can you please include the ticket number in the summary/title of this pull request? Because i can't tell what it is.

Can you please include the ticket number in the summary/title of this pull request? Because i can't tell what it is.

Can you please include the ticket number in the summary/title of this pull request? Because i can't tell what it is.

@wluyima This fixes GCI-09 and GCI-44, where the latter is a subtask of the former. Does that provide the information you need?

The subtask then should be the one to include in the title of the pull request

Hi Manika, It is good practice to work from a separate branch per ticket you work on and to use the ticket id as the branch name, like in this case the branch name should be named TRUNK-4492
You should probably take sometime to read our pull request conventions at https://wiki.openmrs.org/x/KYOfAw

And you might want to look at https://wiki.openmrs.org/x/KQQdAg

@chaityabshah seems String.valueOf function is available from java 7. We needs to have things compatible with java 6 also. Can you check it?

@chaityabshah seems String.valueOf function is available from java 7. We needs to have things compatible with java 6 also. Can you check it?

This pull request is looks good!

String.valueOf exists in java 6

String.valueOf exists in java 6

@wluyima great then, pull request is looks good to me. :). I may have referred to wrong document. My bad :(

@wluyima great then, pull request is looks good to me. :). I may have referred to wrong document. My bad :(

Do you don't have to create a new pull request for every follow up commit for, as long it is the same ticket, JIRA will update the initial pull request as long as you commit follow up commits to the same branch.

@lzaron The pull request includes two commit coming from the wyclif and some other commmit. Pull request should only inlcude your changes. You will needs update your repo before you commit it. Can you update your repo and do your changes? 

The pull request is looks good. :) Thanks @lzaron. 

harsha, the System.gc command is implementation dependent. It doesn't really do anything. However, I can revert the changes if you want.

Oh, it was also in the Sonar error list... silly me.

Added Corrections!

Done. Thanks for telling me.

Overall pull request is looks good!. 

@azuro  your commits contains some other commits also. For example there is a commit from wlumiya. Your pull request should clean and should only contains your commits. Can you correct that and send a pull request again?

Looks good lzaron. Can you merge these commits to a single one and add a description?

Overall pull request is goood. Needs to look at the implementation of equals method and it's need

@harsha89 
I corrected the description, but I can't merge, I have it "This pull request can be automatically merged by project collaborators.
Only those with write access to this repository can merge pull requests."

@Izaron I'm asking you to squash the commits to one commit. Standard practice is to have less number of commits as much as posssible :) git rebase --interactive HEAD~4(number of commits) will do it. Have a look at it :). 

@harsha89 
Stop, I will use "git rebase --interactive HEAD ~ 4", little later :)

@Izaron great :)

Forget this this is a fail

Please help me delete this if possible

Also you have to have single commit with descripting description? Can you squash your commits to one? I also noticed dkayiwa's commits messages also include in your pull request. Can you update you r repo before you do the changes?

How can I delete dkayiwa's commit

Hi, should I merge all commits into one?

@harsha89 
Yes, all compiled successfully, I execute "mvn clean install"
Screen: http://rghost.ru/59512955/image.png

In this line:
            final Field kac = HttpClient.class.getDeclaredField("kac");
HttpClient type is "org.openmrs.util.HttpClient"

Great thats Ok :) 

Yes boss!

@meghna97 
Hello!
Please look at: https://github.com/openmrs/openmrs-core/pull/1183
You should choosw another issue

I've also included fixes for issue if/else/for/while/do statements should always use curly braces
https://ci.openmrs.org/sonar/drilldown/issues/1865?&rule=squid%3AS00121&rule_sev=MAJOR&severity=MAJOR

Done!

As a addtional comment, when you log error or put logs, make your error message descriptive and add additional parameters as well.

For example if a error occurred during parsing the integer, you can add that integer to log message as well. It will help to catch the error more quickly. Keep that in you mind.

overall pull request is looks good :) 

Looks Good :)

Good work @chaityabshah 

Looks Ok :). I encourage you to find any other places which has this issue. But looks good :)

Looks good @lzaron

Am I doing everything alright?

Pull request is looks good :)

pull request is looks good!

GCI-9 CHECK BAD CODEPRACTICES THROUGH FINDBUGS OR SONAR AND FIX THOSE ISSUES

Closing this pull request because another one was created: https://github.com/openmrs/openmrs-core/pull/1205

I didn't see the unit test and the travis build is broken, did you run **mvn clean install** to ensure that the project builds and that all unit tests pass?

@geoff-wasilwa can you update your branch with the lastest changes in master?

@wluyima it's updated.

This is 1.7.x so it is not mavenized yet, correct?

@Tharunya your unit test passes even before applying your changes. Can you create a test which starts by failing and passes only after applying your changes?
Remind me to reopen this pull request when you are done.

@SharonVarghese try to submit this form with an invalid value for around 7 or 8 times and tell me what happens. Remind me to reopen this pull request when you are done.

@satwikreddy the patch on the ticket has 3 lines which were removed. I do not see this reflected in your pull request. Did you properly apply the patch? Remind me to reopen this pull request when you are done.

@tmdugan is correct, since this is 1.7.x the travis failure is meaningless, since it's not set up to build at all.

Thanks!

Ok

Closing this because the ticket was closed as a Wont Fix.

@jbuczynski it depends on why you renamed it. Do you know why? :)

@dkayiwa i changed test method name becouse it failed after fix https://github.com/jbuczynski/openmrs-core/commit/c8c39b79c695e254a4ce0037c468302f1b053455#diff-a61b38574384b2e7329cd6be76e475caR456 i fixed method too and thought that would be more consistent to keep it in HibernateFormDAOTest where similar test have already been, and renamed it to suit getFormCriteriaWithContainingAnyFormParameter_shouldReturnValuesWithMatchingFormFields tets method name

@pmuchowski this being a delicate section of patient name searching, do you mind throwing in a comment or two wherever you make non obvious changes? :)

Can you please include the ticket number in the title of the pull request?

Yeah i missed the 3 lines which were to be removed. I have created a new pull request. https://github.com/openmrs/openmrs-core/pull/1218 :)

@wluyima 
Ok! I done it

Looks Good!

Also, pull requests #1222  and #1223 are the same changes for branches 1.10.x and 1.11.x.

Thanks Andrew! Do you mind creating a ticket for this and include the name of the ticket in the title, the other thing is that you don't have to create multiple pull requests, you only need one to master, the dev who will merge your pull request into master is the one that will make sure it gets into 1.10.x and 1.11.x

See my comment on the other pull request, you only need one pull request and should be to master

Closing in favor of #1220 

Closing in favor of #1220 

Addressed several points brought up by @wluyima

Approved. Will be merged by a core developer with push access. 

Approved -- Will be merged by a core contributor

@SandeepRaparthi1 can you create a unit test for this?

@Tharunya for the pull request, you also need to put some text, instead of just the ticket number. http://go.openmrs.org/pull-request-tips

@dkayiwa I've added Junit test having look at this https://github.com/openmrs/openmrs-core/blob/master/api/src/test/java/org/openmrs/api/ObsServiceTest.java#L1330  test case which checks if Obs is deleted from database.
Requesting you to review my pull request and suggest if any changes are required :-)

@Tharunya this unit test fails: checkDuplicatesInFiles[ filename: src/main/webapp/WEB-INF/messages_hi.properties]
Did you run mvn clean install before committing?

Closing this pull request because it is not the correct fix. :)

@dkayiwa Apologies for the inconvenience. I have removed the existing duplicates. Please refer to https://github.com/openmrs/openmrs-core/pull/1252 :)

Looks okey!

@akshika47 please attach a screenshot, on the ticket, as per: http://go.openmrs.org/pull-request-tips

@Tharunya the problem with this change is that now i cannot see more that two search field elements. As a result, i cannot even see the Add New Field or Add New Concept links.

@Tharunya can you squash these commits as advised at? http://go.openmrs.org/pull-request-tips

@rpuzdrowski  this pull request has some merge conflicts. Do you think you can do something about it? :)

Instead of hardcoding , do you want me to keep the questions in the messages.properties file ?

Yes!

@satwikreddy am closing this pull request because the descriptions are simply a duplicate of the method names. :)

@dkayiwa Fixed :)

@rpuzdrowski you have very many places where you just pass null for the second argument of the api exception constructor. Why don't you simply overload the constructor with one that does not require the second argument?

@dkayiwa I have added some "message.properties" which previously didnt exist in the file "message_hi.properties". Also, I did not manipulate the already existing contents of the "message_hi.properties" file.
Is this how it was to be done ? :)

@dkayiwa because the constructor already exists.
public APIException(String message) {
        super(message);
    }

@dkayiwa  Sure, I've squashed the commits. Please check :)

@dkayiwa Thank you for correcting me :) 
Please refer to the pull request here: https://github.com/openmrs/openmrs-core/pull/1262

@Tharunya i some how do not find this satisfactory. I still feel the Find Field Elements widget should be at the same vertical level as the Schema Design tree widget. Do you think you can do that?

The formatting for the change does not look right. Did you do an mvn clean install before committing this as advised at? http://go.openmrs.org/pull-request-tips

@SandeepRaparthi1 can you squash these commits as advised at? http://go.openmrs.org/pull-request-tips

@pmuchowski was it really this simple? :)

Yes, Please refer to my latest pull request here: https://github.com/openmrs/openmrs-core/pull/1266 :)

Secondly, your pull request should also include the ticket number. Just take a look at other pull requests to see how the ticket number is written.

Sincere apologies for not typing the Ticket number. Will put up a pull request soon without changing the alignment :) 

@SharonVarghese am closing this pull request because it is not formatted properly. Please do an mvn clean install before committing, as advised at: http://go.openmrs.org/pull-request-tips
If you have any problems doing this, just talk to me on IRC. Am logged on as: dkayiwa

@jkondrat reopen this after you have attached, on the ticket, a screenshot with the effects of your changes.

Sure :) . Thank you for your valuable suggestions :)

@Tharunya when the search results are many, the search box gets mixed up with the other widgets and links at the top. Just type "blo" to see this in action. You need to think harder for a better solution. :)

@SharonVarghese you do not seem to have got this. Just ping me on IRC for help.

@akshika47 am closing this pull request because you seem to have created it accidentally.

@dkayiwa : yes, thank you very much ;)

@pmuchowski can you create a unit test for this?

@jkondrat the contract for Person.getAttributeMap() is not to include voided ones. So that contract should not be broken as you have done in this commit.

@dkayiwa In that case, should I introduce a new method for getting pa map including voided attributes?

@jkondrat doesn't the existing Person.getAttributes() already do so?

@dkayiwa It does, but patient form iterates through all attributes by name of their type, so it is convenient to have them in a map form. See editPersonInfo.jsp:107

@jkondrat then in that case you can add the new convenient method you were proposing.

@jkondrat there are a few places where you need to set allAttributeMap to null, as is done for attributeMap

@dkayiwa Oops, I didn't notice that. Updated the commit.

@gnarula can you wrap the ignoreCase() call with? Context.getAdministrationService().isDatabaseStringComparisonCaseSensitive()
Check in the same class to see example usage.

@Tharunya this does not seem to be the only object related to obs.
Take a look at liquibase-schema-only.xml and search for something like: referencedTableName="obs"

@dkayiwa: Done

@gnarula can you squash these commits as advised at? http://go.openmrs.org/pull-request-tips

@dkayiwa: Please refer to: https://github.com/openmrs/openmrs-core/pull/1283 :)

Creating a new one with Unit Tests  

@kristopherschmidt instead of the try and catch in your unit tests, can you do as in: OrderServiceTest.saveOrder_shouldNotSaveOrderIfOrderDoesntValidate

@SharonVarghese can you create a unit test for this?

@SandeepRaparthi1 this pull request has merge conflicts. Can you pull the latest changes from upstream and then create a new pull request?

@jkondrat can you do this as a new service method which does not deprecate the old one?
Can you also make it more useful as per Nick's comments?

Am closing this pull request because the change request was cancelled and ticket closed.

The challenge with using @ExpectedException is that the way the test is written, Mockito.verify() needs to be called after the exception is thrown, and there is no clear way to do that (see http://stackoverflow.com/questions/13224288/mockito-verify-after-exception-junit-4-10). The standard approach seems to be to fall back to try/catch for these situations.
Granted this particular test could be rewritten to use Mockito.when(), and avoid the need for a verify() afterwards, I will see how that goes.

@kristopherschmidt just simply do as the test i referred you to.

@vinayvenu do you mind squashing these commits into one?

@pmuchowski am closing this pull request because it has merge conflicts.

@rpuzdrowski am closing this pull request because it has merge conflicts.

I have rewritten the test to use @ExpectedException by switching to using Mockito.when().

OK this is done. (+formatting updated to be consistent with maven build - I discovered that the OpenMRSFormatter.xml link on https://wiki.openmrs.org/display/docs/Coding+Conventions is slightly different from the version checked into tools/src/main/resources/eclipse)

@kristopherschmidt do you mind squashing these commits into one? http://go.openmrs.org/pull-request-tips

Question for you: when I have made updates to my branch/pull-request, should I be going back into JIRA and selecting "Request Code Review" again to indicate that the code is ready? Or once the case is In Progress should I just be responding to the pull request conversation thread?

You got it! Yes you need to request code review again in jira. :)

On Mon, Jan 19, 2015 at 10:52 PM, kristopherschmidt <
notifications@github.com> wrote:

> Question for you: when I have made updates to my branch/pull-request,
> should I be going back into JIRA and selecting "Request Code Review" again
> to indicate that the code is ready? Or once the case is In Progress should
> I just be responding to the pull request conversation thread?
> 
> —
> Reply to this email directly or view it on GitHub
> https://github.com/openmrs/openmrs-core/pull/1285#issuecomment-70550611.

## 

If we keep uppermost in our minds the unkind and unjust acts of others, we
shall find it impossible to love them as Christ has loved us; but if our
thoughts dwell upon the wondrous love and pity of Christ for us, the same
spirit will flow out to others.

I have squashed the commits into one.

@dkayiwa done. 

@pmuchowski the problem happens with all lines in the controller that start with: errors.reject("concept"

I also do not think this fixes it because you already have the popNestedPath call immediately after: ValidateUtil.validate(concept, errors);

@dkayiwa popNestedPath after ValidateUtil.validate(concept, errors) won't work because validator throws exception

Oh i see!
So you can you pop even in the other places where exceptions are caught?

On Tue, Jan 20, 2015 at 5:30 PM, pmuchowski notifications@github.com
wrote:

> @dkayiwa https://github.com/dkayiwa popNestedPath after
> ValidateUtil.validate(concept, errors) won't work because validator throws
> exception
> 
> —
> Reply to this email directly or view it on GitHub
> https://github.com/openmrs/openmrs-core/pull/1289#issuecomment-70661283.

## 

If we keep uppermost in our minds the unkind and unjust acts of others, we
shall find it impossible to love them as Christ has loved us; but if our
thoughts dwell upon the wondrous love and pity of Christ for us, the same
spirit will flow out to others.

@dkayiwa can you reopen PR?

@pmuchowski unfortunately am not able to because the branch was force-pushed or recreated.

@jkondrat have you dealt with? Ideally, as this change is introduced, all secret answers in the database would be hashed in this manner.

@BhavanaRamasayam go ahead with the rest.

Am closing this pull request because we are going to use another approach different from this.

@jbuczynski can you explain why the original getForms_shouldReturnFormsContainingAllFormFieldsInContainingAllFormFields fails after your changes?

@coolyashish can you include the ticket number in your commit messages as advised at http://go.openmrs.org/pull-request-tips

Closing this pull request because of https://github.com/openmrs/openmrs-core/commit/287a77d6408f108d2cc5d1b700e4887e038aecaa

Closing because i have merged at https://github.com/openmrs/openmrs-core/commit/2b832a9e55c53d6420f67bf121047e3368949d4f

@SharonVarghese can you create some unit tests for the changes you have made in ForgotPasswordFormController?

@satwikreddy i can reopen this after you have addressed my comments.

Closing this pull request because the bug it was supposed to fix cannot be reproduced.

Closing because creating  new one with required changes 

@SandeepRaparthi1 your unit tests pass even before applying your changes. Unit tests should start by failing. Then you make changes to the classes you are testing, to make the tests pass. Does this make sense?

@jkondrat i tried running this and noted the following:
1) Runtime properties file path in the summary page does not reflect my custom application data directory
2) When i choose the test installation method, i do not see the option to set the application data directory.

@SharonVarghese i will reopen this after you have writen some unit tests for the changes you have made in ForgotPasswordFormController?

@jkondrat on the JIRA ticket, can you attach a screenshot with the effects of your changes?

@jkondrat your unit test passes even without the changes in PatientServiceImpl
A test should start by failing and then if the fix is correct, the changes in the tested class make it pass.

@waffle-iron can you include the ticket number, squash the commits into one, and use a better pull request message as advised at? http://go.openmrs.org/pull-request-tips

@SharonVarghese some of your changes are not correctly formatted. Did you run mvn clean install before committing, as advised at? http://go.openmrs.org/pull-request-tips

@SharonVarghese one of your tests passes even before i apply your changes. Can you look into that?

@BhavanaRamasayam can you squash these commits into one as advised at http://go.openmrs.org/pull-request-tips

@bobbyToor did you take a look at? http://go.openmrs.org/pull-request-tips
You would also need some unit tests?

It's a very bad practise to put binaries such as omod in the git repo. They will stay there forever and increase the size of the repo to clone. We should configure maven to download it instead and put in the war while building.

Since we cannot do anything right now to fix it and the omod will stay there for eternity you can leave it as it is. I will create an issue in JIRA to bundle the next version properly using maven build. We definitely don't want to add 0.5 MB to the git repo with each release.

Actually I just discovered https://github.com/openmrs/openmrs-distro-platform which promises to bundle things correctly. For the distro-platform to work you must revert the commit you just merged here.

Could you please update https://wiki.openmrs.org/display/docs/Release+Process and mention you need to use openmrs-distro-platform to release the platform?

@bobbyToor this commit also has compiler errors.

Thanks @rkorytkowski, Surely keeping out the omod from our repo is a good idea I didn't think about before tagging. I will be updating the release process page of this which is what I used, I think we may use the distro-platform next time since I already tagged. For now we may bare this and hope to use this tool next time, probably just making another commit on 1.11.1-SNAPSHOT to remove the omod and use the tool

@dkayiwa There is only one commit now. I have closed all the previous ones .Please do check :)

@Tharunya this unit test passes even before applying your changes. Can you create one which fails and passes only after your changes?

@BhavanaRamasayam i still see two commits which are not yet squashed.

@dkayiwa I have referenced this pull request from the previous pull request .That's the reason the second commit message shows up. But if you can check the commit tab, there is only one commit. Please do check :)

@BhavanaRamasayam can you close one of the pull requests?

@dkayiwa I already closed the previous pull request :)

@BhavanaRamasayam can you do a new pull request that shows only one commit instead of two?

I have updated the Release Process page and also removed the module, we shall follow that for 1.11.1 etc, 

thanks

@geoff-wasilwa when you copy an encounter and hence its orders, you later on try to saving this encounter as a new one, hence the orders also as new ones. But since some of the orders you copied are no longer active, they cannot be saved as new. Does this make sense? 

@gnarula can you create a unit test for this?

@pmuchowski i tried to move an encounter within a visit for a certain patient to another patient and got the error "failed to validate with reason: visit: The encounter and the visit it belongs to must both belong to the same patient". I have put the detailed stack trace on the ticket.

I will work on the issues, thanks @dkayiwa  

@dkayiwa  I am unclear about the line number 89 you had mentioned , could you explain exactly the requirement as the map is to check about valid usernames and then the value is put into the map depending on the input  . Thank you :)

I was just saying that it simply keeps incrementing by 1 yet your code
assumes a maximum of 7 questions. So a bug.

On Thu, Feb 12, 2015 at 7:41 PM, SharonVarghese notifications@github.com
wrote:

> @dkayiwa https://github.com/dkayiwa I am unclear about the line number
> 89 you had mentioned , could you explain exactly the requirement as the map
> is to check about valid usernames . Thank you :)
> 
> —
> Reply to this email directly or view it on GitHub
> https://github.com/openmrs/openmrs-core/pull/1322#issuecomment-74104444.

## 

If we keep uppermost in our minds the unkind and unjust acts of others, we
shall find it impossible to love them as Christ has loved us; but if our
thoughts dwell upon the wondrous love and pity of Christ for us, the same
spirit will flow out to others.

@dkayiwa  Now I get it , thank you :) 

@dkayiwa, that makes sense. But say I only migrate active orders and obs, when reviewing previous orders (not sure if this functionality exists :)) won't we be missing a certain chunk of the history (previously prescribed orders that have been deactivated/fulfilled/expired)?

@geoff-wasilwa did you say that you only migrate active orders? Your code does not seem to be doing so. :)

@pmuchowski for the message confirmation dialog box, i clicked cancel. Then i immediately tried again to click Save Encounter the second time. This time it just saved without showing the confirmation dialog box. Can you look into this?

@dkayiwa I meant what if I changed my code to do that, what happens to the case where I'd like to review previous orders for a merged patient? My code migrates all orders and that is why it fails, and then we have the obs with a start date before encounter (but that is for another time).

@geoff-wasilwa you still need to migrate all orders, including the inactive ones. But just do not save them as new.

@jkondrat use an application data directory different from the default. Then run the setup to completion. Finally restart tomcat to run the application again and tell me what happens.

@dkayiwa sorry for my poor choice of word (migrate). From the requirements, the orders and obs should be cloned (two copies saved; one referencing the non-preferred patient and the other referencing the preferred patient). And doing this without saving new obs or orders, doesn't seem possible to me.

thanks @rarkenin

thanks @azuro 

See: https://github.com/openmrs/openmrs-core/pull/1335 created to resolve the conflict of removing api/src/test/java/org/openmrs/report/ReportSchemaXmlTest which happened after @azuro's PR

This pull requests looks confusing to me, @harsha89  am skipping this one

Am merging this, it's alright to me as well

Looks ok to me as well after a look into it, thanks @chaityabshah 

Merging this first to handle the above issue

@geoff-wasilwa can you create a non public method that just saves the orders while preserving their state, without doing the default processing that happens when a new order is being saved?

Reverted this first, to clear some conflicts when merging it easily

@azuro, are you able to open a new pull request towards master directly this time round! Please do that if you can since i previously had reverted this PR and its commits are missing in https://github.com/openmrs/openmrs-core/pull/1340

@harsha89, this PR now includes all commits merged into https://github.com/openmrs/openmrs-core/tree/gci-2014 excepts one i had innocently reverted, https://github.com/openmrs/openmrs-core/pull/1186 i have requested @azuro to open a new PR to be directly merged into master.

@dkayiwa  As mentioned in the description of the ticket, I went through the files, taking them as reference , wrote the comments accordingly . I would like to know if I have to make changes to the existing comments on parameters as I made changes only to the comments which were missing for the respective functions  Thank you :)

@SharonVarghese a function's comments are not complete if you leave the parameters undocumented.

@k-joseph  @harsha89 how do i see the exact changes you wanted this pull request to have? I see many other non CGI merges listed here.

It will be corrected by @pmuchowski.

Something should be wrong with these that i had not noticed before, just not sure why these would show up here, i will close this and we shall redo this work, thanks @dkayiwa for noticing this.

How i created this PR:
- Checked out a new branch locally after updating master local branch from upstream master branch
- Pulled from upstream gci-2014 branch into my new local branch.
- Committed and created PR, 

Am glad this is still un-merged.
@harsha89, does this mean our gci-2014 mean not be worth our trust for all gci merged tasks, what's our step for those commits that were committed in this branch?
I also hope that we shall resume vising un-merged PR's tomorrow!

Hi Joseph,

Shall we discuss this today and sort out things? I will catch you at IRC.

Thanks,
Harsha

On Mon, Feb 16, 2015 at 10:38 PM, k-joseph notifications@github.com wrote:

> Something should be wrong with these that i had not noticed before, just
> not sure why these would show up here, i will close this and we shall redo
> this work, thanks @dkayiwa https://github.com/dkayiwa for noticing this.
> 
> How i created this PR:
> - Checked out a new branch locally after updating master local branch
>   from upstream master branch
> - Pulled from upstream gci-2014 branch into my new local branch.
> - Committed and created PR,
> 
> Am glad this is still un-merged.
> @harsha89 https://github.com/harsha89, does this mean our gci-2014 mean
> not be worth our trust for all gci merged tasks, what's our step for those
> commits that were committed in this branch?
> I also hope that we shall resume vising un-merged PR's tomorrow!
> 
> —
> Reply to this email directly or view it on GitHub
> https://github.com/openmrs/openmrs-core/pull/1340#issuecomment-74540822.

## 

_Harsha Kumara_
_Software Engineer_
_WSO2 Inc._
_Sri Lanka._

@dkayiwa  I'll work on it, Thanks for the help :) 

@dkayiwa while implementing the change I noticed something interesting. It seems orders should not be copied over to the preferred patient (or should they...), since orders cannot/should not be [updated/edited](https://github.com/geoff-wasilwa/openmrs-core/blob/TRUNK-9/api/src/main/java/org/openmrs/api/impl/OrderServiceImpl.java#L93-L95) and during patient merging only those with voided orders can be merged, see [here](https://github.com/geoff-wasilwa/openmrs-core/blob/TRUNK-9/api/src/main/java/org/openmrs/api/impl/PatientServiceImpl.java#L807-L811). I think this should be documented, what do you say?

Can you bring this to the developers mailing list?

On Tue, Feb 17, 2015 at 12:36 PM, Geoffrey W Wasilwa <
notifications@github.com> wrote:

> @dkayiwa https://github.com/dkayiwa while implementing the change I
> noticed something interesting. It seems orders should not be copied over to
> the preferred patient (or should they...), since orders cannot/should not
> be updated/edited
> https://github.com/geoff-wasilwa/openmrs-core/blob/TRUNK-9/api/src/main/java/org/openmrs/api/impl/OrderServiceImpl.java#L93-L95
> and during patient merging only those with voided orders can be merged, see
> here
> https://github.com/geoff-wasilwa/openmrs-core/blob/TRUNK-9/api/src/main/java/org/openmrs/api/impl/PatientServiceImpl.java#L807-L811.
> I think this should be documented, what do you say?
> 
> —
> Reply to this email directly or view it on GitHub
> https://github.com/openmrs/openmrs-core/pull/1311#issuecomment-74640299.

## 

If we keep uppermost in our minds the unkind and unjust acts of others, we
shall find it impossible to love them as Christ has loved us; but if our
thoughts dwell upon the wondrous love and pity of Christ for us, the same
spirit will flow out to others.

@SharonVarghese can you squash these commits into one?

@dkayiwa I have squashed them 

@SharonVarghese i have not gone through all of them because they have the same exact problem.
The method description needs to tell exactly what the method is supposed to do.
Each parameter description should be clear enough such that the caller understands what it is for.

@SandeepRaparthi1 you will also need to pull the latest changes from upstream because this pull request now has merge conflicts.

Closing this because the author has left the ticket for others to do.

@jkondrat according to this email thread: https://groups.google.com/a/openmrs.org/forum/#!topic/dev/m0Lfk0Uz3Vc we are going to make changes that will make merging this pull request painful. Do you think you can finish this before Friday next week (27 Feb 2015), to avoid the unnecessary extra work?

@jbuczynski according to this email thread: https://groups.google.com/a/openmrs.org/forum/#!topic/dev/m0Lfk0Uz3Vc we are going to make changes that will make merging this pull request painful. Do you think you can finish this before Friday next week (27 Feb 2015), to avoid the unnecessary extra work?

@jbuczynski according to this email thread: https://groups.google.com/a/openmrs.org/forum/#!topic/dev/m0Lfk0Uz3Vc we are going to make changes that will make merging this pull request painful. Do you think you can finish this before Friday next week (27 Feb 2015), to avoid the unnecessary extra work?

@jbuczynski according to this email thread: https://groups.google.com/a/openmrs.org/forum/#!topic/dev/m0Lfk0Uz3Vc we are going to make changes that will make merging this pull request painful. Do you think you can finish this before Friday next week (27 Feb 2015), to avoid the unnecessary extra work?

@jkondrat according to this email thread: https://groups.google.com/a/openmrs.org/forum/#!topic/dev/m0Lfk0Uz3Vc we are going to make changes that will make merging this pull request painful. Do you think you can finish this before Friday next week (27 Feb 2015), to avoid the unnecessary extra work?

@jbuczynski according to this email thread: https://groups.google.com/a/openmrs.org/forum/#!topic/dev/m0Lfk0Uz3Vc we are going to make changes that will make merging this pull request painful. Do you think you can finish this before Friday next week (27 Feb 2015), to avoid the unnecessary extra work?

@jkondrat according to this email thread: https://groups.google.com/a/openmrs.org/forum/#!topic/dev/m0Lfk0Uz3Vc we are going to make changes that will make merging this pull request painful. Do you think you can finish this before Friday next week (27 Feb 2015), to avoid the unnecessary extra work?

@geoff-wasilwa according to this email thread: https://groups.google.com/a/openmrs.org/forum/#!topic/dev/m0Lfk0Uz3Vc we are going to make changes that will make merging this pull request painful. Do you think you can finish this before Friday next week (27 Feb 2015), to avoid the unnecessary extra work?

@Tharunya according to this email thread: https://groups.google.com/a/openmrs.org/forum/#!topic/dev/m0Lfk0Uz3Vc we are going to make changes that will make merging this pull request painful. Do you think you can finish this before Friday next week (27 Feb 2015), to avoid the unnecessary extra work?

@r4white according to this email thread: https://groups.google.com/a/openmrs.org/forum/#!topic/dev/m0Lfk0Uz3Vc we are going to make changes that will make merging this pull request painful. Do you think you can finish this before Friday next week (27 Feb 2015), to avoid the unnecessary extra work?

@SharonVarghese according to this email thread: https://groups.google.com/a/openmrs.org/forum/#!topic/dev/m0Lfk0Uz3Vc we are going to make changes that will make merging this pull request painful. Do you think you can finish this before Friday next week (27 Feb 2015), to avoid the unnecessary extra work?

@akshika47 according to this email thread: https://groups.google.com/a/openmrs.org/forum/#!topic/dev/m0Lfk0Uz3Vc we are going to make changes that will make merging this pull request painful. Do you think you can finish this before Friday next week (27 Feb 2015), to avoid the unnecessary extra work?

@SandeepRaparthi1 according to this email thread: https://groups.google.com/a/openmrs.org/forum/#!topic/dev/m0Lfk0Uz3Vc we are going to make changes that will make merging this pull request painful. Do you think you can finish this before Friday next week (27 Feb 2015), to avoid the unnecessary extra work?

@dileepa according to this email thread: https://groups.google.com/a/openmrs.org/forum/#!topic/dev/m0Lfk0Uz3Vc we are going to make changes that will make merging this pull request painful. Do you think you can finish this before Friday next week (27 Feb 2015), to avoid the unnecessary extra work?

@gnarula according to this email thread: https://groups.google.com/a/openmrs.org/forum/#!topic/dev/m0Lfk0Uz3Vc we are going to make changes that will make merging this pull request painful. Do you think you can finish this before Friday next week (27 Feb 2015), to avoid the unnecessary extra work?

@SandeepRaparthi1 according to this email thread: https://groups.google.com/a/openmrs.org/forum/#!topic/dev/m0Lfk0Uz3Vc we are going to make changes that will make merging this pull request painful. Do you think you can finish this before Friday next week (27 Feb 2015), to avoid the unnecessary extra work?

@SharonVarghese according to this email thread: https://groups.google.com/a/openmrs.org/forum/#!topic/dev/m0Lfk0Uz3Vc we are going to make changes that will make merging this pull request painful. Do you think you can finish this before Friday next week (27 Feb 2015), to avoid the unnecessary extra work?

@SharonVarghese according to this email thread: https://groups.google.com/a/openmrs.org/forum/#!topic/dev/m0Lfk0Uz3Vc we are going to make changes that will make merging this pull request painful. Do you think you can finish this before Friday next week (27 Feb 2015), to avoid the unnecessary extra work?

@dkayiwa Sorry, but I've exams beginning next week. I'll gladly take this up again after the license and line ending changes are in place :). Closing this for now.

@dkayiwa  Yes I will send my pr asap :) 

@dkayiwa  Yes I will send my pr asap :) 

@dkayiwa I have made the changes and commited the code  :) if required any changes please comment will put in my maximum efforts to finish them by next friday thank you :) 

@dkayiwa Will put in My maximum efforts to do it :) just a few test cases are failing due to my validation will rectify and put up pull request asap :) 

@dkayiwa did you see my comment on [TRUNK-257](https://issues.openmrs.org/browse/TRUNK-257)

@dkayiwa I'd like to leverage the copyAndAssignToAnotherPatient method, but as I pointed out in [TRUNK-257](https://issues.openmrs.org/browse/TRUNK-257) copying orders leads to test failures and also violates some business rules as Darius pointed out [here](https://groups.google.com/a/openmrs.org/d/msg/dev/jMtz-y2qOUY/78695etNNuwJ)

@dkayiwa : Yes I am working on it now. 

@akshika47 which ticket is this pull request for? Can you always include the ticket number in your commit messages? And in the pull request message?

@SandeepRaparthi1 did you do mvn clean install and ensure all tests are passing before creating this pull request?

Closing this because author abandoned it.

@LordSriyan can you revert changes in all the non english message properties files?

@SandeepRaparthi1 at least add the ticket title to the pull request message, instead of just the ticket number.

@SandeepRaparthi1 can you start by answering Darius's question above? :)

@dkayiwa I apologise will do add description  from next time i did ensure that all test cases are passing however will ensure it again i am not sure what went wrong will rectify them asap :) 

This Pull request says it is from unknown repository, hence making it not so easy to pull from it! any idea how i can do this devs?

I have never seen "unknown repository" before...

I think it is because@itatriev happened to delete his own fork for core after creating this PR

@k-joseph Yeah, I did, because I had some problems with git and though "it would be more easy if I will REfork repo again". I wanted to refork it

@dkayiwa It gives Array Index Out Of Bounds Index 7 Size 7 error  as the number of questions are 7. 

@dkayiwa : Ok. I will revert the changes in all the non english message properties.  Thank You for pointing out the mistakes. I'll correct them soon. 

Closing because it failed a few test cases

Closing so as to add a new unit test and create a new one :) 
Squash was not possible because local branch was deleted apologies 

Closing so as to create a new one with required changes :) 
Squash was not possible because local branch was deleted apologies

Shall we merge this? 

So fix the code bug that the unit test exposes!

On Tue, Feb 24, 2015 at 7:18 AM, Sharon Varghese notifications@github.com
wrote:

> It gives Array Index Out Of Bounds Index 7 Size 7 as the number of
> questions are 7.
> 
> —
> Reply to this email directly or view it on GitHub
> https://github.com/openmrs/openmrs-core/pull/1350#issuecomment-75697069.

## 

If we keep uppermost in our minds the unkind and unjust acts of others, we
shall find it impossible to love them as Christ has loved us; but if our
thoughts dwell upon the wondrous love and pity of Christ for us, the same
spirit will flow out to others.

Is this having all the gci commits that were merged into the gci branch without none missing out? 

I see a total of 14 merged pull requests for gci-2014 and I hope we have more commits than just these in this PR

I discarded some of them as they not make any sense such as shortening the if statements by aggregating the conditions so on. So I filter out those things. :). 

:+1: on getting these in ASAP

Does this PR replace the existing GCI PR's that are already pending for openmrs-core, or is it additional?

Thanks @itatriev for your reply, we are merging gci work into openmrs-core soon and we need you to fork and open up a new Pull request that can allow me to pull from it to resolve conflicts if you would love us to have your work merged, 

Regards

@harsha89 these commits look fine apart from just one question which i have put on the last commit.

After merging and resolving all other Pull Requests, pulling from here says every thing is update. Thanks @pwmvx1289 

Any way, i have added these commits by my self since we are out of time :+1: 

I'm sorry, I was not at home, should I do this right now or it's to late?

On Tue, Feb 24, 2015, 9:31 PM k-joseph notifications@github.com wrote:

> Any way, i have added these commits by my self since we are out of time [image:
> :+1:]
> 
> —
> Reply to this email directly or view it on GitHub
> https://github.com/openmrs/openmrs-core/pull/1219#issuecomment-75777890.

Actually most of these fixes you mentioned @harsha89, i have also done in my next PR, which is about resolving conflicts of all the GCI PRs and i hope that after we merge this into gci-2014, we can re-do this to avoid more conflicts. 

 I have while working on the it considered all gci PRs and left out none. just a few minutes and you will have it for your review here 

@downeym this PR takes the commits from the PRs made by GCI students :). I have went through commit by commit and add to the latest master :). Some commits are ignored by myself as beacuse of some tradeoffs such as code complexity vs understandability.  

Closing this PR since it is included in: https://github.com/openmrs/openmrs-core/pull/1356 

Closing this PR since it is included in: https://github.com/openmrs/openmrs-core/pull/1356 

Closing this PR since it is included in: https://github.com/openmrs/openmrs-core/pull/1356 

Closing this PR since it is included in: https://github.com/openmrs/openmrs-core/pull/1356 

Closing this PR since it is included in: https://github.com/openmrs/openmrs-core/pull/1356 

Closing this PR since it is included in: https://github.com/openmrs/openmrs-core/pull/1356 

Closing this PR since it is included in: https://github.com/openmrs/openmrs-core/pull/1356 

Closing this PR since it is included in: https://github.com/openmrs/openmrs-core/pull/1356 

Closing this PR since it is included in: https://github.com/openmrs/openmrs-core/pull/1356 

@SandeepRaparthi1 can you squash these commits into one, as advised at? http://go.openmrs.org/pull-request-tips
Secondly, did you run mvn clean install? Travis reports some failures.

@SharonVarghese more work is needed for this. Have you ever had a chance to look at standard documentation like? http://docs.oracle.com/javase/7/docs/api/java/lang/ClassLoader.html

After a close review of https://github.com/openmrs/openmrs-core/pull/1358 which right now has all commits for gci-2014 that have not yet been merged into master, we shall close this PR and merge pull/1358 into master instead.

thanks @harsha89 :+1: 

@dkayiwa : I will do the following changes
1. remove is from the method name
2. use asserTrue() instead of assertEquals()
3.Add @should annotations for the Test Method.

Is there more that you suggest? 

Sorry for the inconvenience. 

@dkayiwa Ok :+1: 

@dkayiwa Have Ensured that the test cases pass now the problem was the test passed at my end but Travis CI failed Apologies my fault Now Everything is fine please review my PR :)

Closing this because author opened a new one.

Closing this because author opened a new one.

Closing this because author opened a new one.

@LordSriyan can you create the pull request on the master branch as advised at? http://go.openmrs.org/pull-request-tips

@dkayiwa  Made the changes and squahsed my Commits :) 

@SandeepRaparthi1 that was fast!!! :)

@dkayiwa  Thank you :)

@dkayiwa Made the changes and squashed the commits :) Please review the PR and let me know if i have to do more changes :) 

@dkayiwa when the  concept.getDescriptions is NULL we register a field error against descriptions
and i have checked that there is no null pointer exception when we call size() method on it in the test case i have written :)  

@dkayiwa, my last commit here at: https://github.com/k-joseph/openmrs-core/commit/91c6be799f090fa3b1fe1a9c325cdb4b68da1905 addresses your reviews, we can later handle the log and deprecated issues

@dkayiwa I have made the required changes :) Please review it :) 

Am now closing this PR since i have merged https://github.com/openmrs/openmrs-core/pull/1358 as mentioned before

@LordSriyan this pull request has merge conflicts. Can you pull from upstream as advised at? http://go.openmrs.org/pull-request-tips

@akshika47 can you also squash these commits into one?

@dkayiwa : yeah I will do that :)

Wow great thanks @k-joseph , thought it would be fogotten

Thanks @harsha89 for this PR, actually we reasoned the need of this before the merge but didn't reach a consensus of removing it from gci commits, does this fix it @rkorytkowski ?

Yes, looks good.

@r4white i can reopen this when you are done.

Closing this because a new pull request was opened .

@dkayiwa I have Made the required changes as stated :) can you please review the pull request :) 

It's not the right fix. See my comment on TRUNK-4606.

@LordSriyan this pull request still has merge conflicts. Did you pull from upstream as advised above?

Closing this because it has merge conflicts and creating a new one!

@tharinduNA can you create a unit test for this? You can look at existing controller unit tests, for an example.

@SandeepRaparthi1 can you at least include the ticket summary in the pull request message, instead of just the ticket number?

@dkayiwa okay I will create an unit test

On Wed, Mar 4, 2015 at 3:19 PM, dkayiwa notifications@github.com wrote:

> @tharinduNA https://github.com/tharinduNA can you create a unit test
> for this? You can look at existing controller unit tests, for an example.
> 
> —
> Reply to this email directly or view it on GitHub
> https://github.com/openmrs/openmrs-core/pull/1391#issuecomment-77125832.

## 

Regards,
Tharindu,

   -
      - BSc Computer Engineering Undergraduate,
      Faculty of Engineering,
      University of Peradeniya,
      Sri Lanka.

@SharonVarghese does this actually fix the problem where someone has added a child role to a role and then tries to go and make the child role a parent, creating chaos?

@dkayiwa  Yes because when we create a role called parent, then we create a role called child. This child inherits from the parent. Before applying the changes, the parent could also inherit from the child. After applying the changes, the parent cannot inherit from the child, because the button is disabled . 

@dkayiwa Apologies for the Name thing Changed the name now :) 

@SharonVarghese on the ticket, can you attach a screenshot showing the effects of your changes to confirm that what you are saying is so?

@dkayiwa  I have attached screenshots of the changes , and while reproducing the error, if in the parent's role edit page, the child option was ticked, it would give an error, but now, the child option checkbox is disabled 

@dkayiwa Made the required Changes :) please review it 

Closing the request due to unresolved conflicts

@dkayiwa : I rebased with "git pull --rebase upstream master".
https://github.com/LordSriyan/openmrs-core/commit/cfa1c2e7d4df6d3e40afc46ea317fd07d671a2aa
is the commit that I want to be merged. 

:clap: 

@dkayiwa : Can you merge the changes of my last commit(https://github.com/LordSriyan/openmrs-core/commit/cfa1c2e7d4df6d3e40afc46ea317fd07d671a2aa)?
Does it have conflicts? 

This is a fix to TRUNK-4630

Please confirm also that all results returned at a search of eqauls("") are replaced

I also confirm that all occurrences of `object == null || object.equals("")` have also been replaced. There were very few such cases when compared to `"".equals(object)`

Thank you @teleivo for your contribution

You haven't used pull --rebase nor the up alias we configured yesterday, thus we see the extra merge commit. Please avoid that in the future.

@rkorytkowski 
@SandeepRaparthi1 
fixed import issue

There's something smelly about the commits in this pull request. There are 6 commits, but should be just 2 or 3 at most. They repeat twice. Do you remember by chance what git commands you used?

When I was fixing the import issue I used "git pull origin master" command which caused a conflict that I had to merge manually and add extra commit. Could this be the reason of repeating commits?

Probably conflict resolution didn't go that well. Unfortunately I can't say what precisely you did wrong. If you ever have to resolve conflict again please ping me before so we can pair and do it the right way. Also do not use "git pull origin master". It should be "git pull --rebase upstream master" or "git up upstream master".

Please reach out to me tomorrow so we can share screen and pair on fixing this pull request. You'll learn some cherry-picking :)

We don't generally use static imports in /src/main code, since it makes it less clear where functions are coming from. (We use static imports in /src/test code.)

Please remove the static imports, and re-issue this PR.

@rkorytkowski Hello, if you wish to share screen, I'm ready

Could you please update the code to the latest version of master?

@rkorytkowski causes not passing tests SchedulerFormControllerTest & TaskHelperTest
do not merge!

Please rebase to one commit.

done

The error from TaskHelperTest is described in https://issues.openmrs.org/browse/TRUNK-4598

And the error in SchedulerFormControllerTest in https://issues.openmrs.org/browse/TRUNK-4602

@rkorytkowski warning is caused by KeepAliveCache
it is used only for keepAliveTimer
I replaced it with resolutionTimer from TimeCachePolicy

The errors are not related to commited changes so I think they can be merged

@rkorytkowski https://issues.openmrs.org/browse/TRUNK-4639

@rkorytkowski https://issues.openmrs.org/browse/TRUNK-4640
I'm not sure about the cases where printstacktrace to PrintWriter was used(in Format.java,  SchedulerUtil.java, HL7ServiceImpl.java, StartupErrorFilterModel.java)

@rkorytkowski changed accordingly to comment in https://issues.openmrs.org/browse/TRUNK-4639

@rkorytkowski https://issues.openmrs.org/browse/TRUNK-4644

@rkorytkowski https://issues.openmrs.org/browse/TRUNK-4645

fixed and merged into one commit

@rkorytkowski done

@rkorytkowski done

@rkorytkowski done

Required: please log consistently with standard OpenMRS practice
Optional: is there a way we can give a more specific error message in some cases?

(You can reopen this PR after addressing those issues.)

@djazayeri Can you please refer me to some code where such error handling is done. The errors thrown are all related to the database layer. There are various kind of resources present and a no of errors are being thrown, for eg, when one or both fields are empty in the form. Hence, I am not able to extract meaningful info. from the exceptions thrown.

I suggest you look into whether it's possible to have the underlying code (in LongFreeTextDatatype or DatatypeServiceImpl) throw a meaningful exception in this specific case, or else report a more meaningful error message as a string message in the InvalidCustomValueException. It's probably better to display the message from there, rather than displaying _nothing_ to the user.

But the error is not localized to the LongFreeTextDatatype. There is no error handling and input validation for adding resources to a form. So even if we leave the resource name and/or value empty, uncaught exceptions are thrown. So should I just focus on the case described solely in this issue?

I was thinking of first adding validation for the presence of resource name and resource value form fields(since they can't be null). I think we should only then think about catching exceptions specific to a datatype. 

Another thing I have found is that, the handlers(say DateFieldGenDatatypeHandler) are not throwing InvalidCustomValueException for incompatible resource values because in the getValue method of WebAttributeUtils([link](https://github.com/openmrs/openmrs-core/blob/master/web/src/main/java/org/openmrs/web/attribute/WebAttributeUtil.java#L56)), a classCastException is being thrown, while typecasting the handler to its subclasses. I guess this is not the desired behaviour, since we are not able to catch specific exceptions raised in the getValue method of handlers.

@djazayeri Can you please review this?

Please send a pull request for the hibernate4 branch after addressing issues. I'm closing this one. @harsha89, please do not forget to reply to Wyclif's questions.

Merged in a12f6a443bb6b750d49a4ae9304475bc26a9a037

well done!

Fixed in file PatientServiceImpl.java.
In ModuleClassLoader.java local variable seems to be needed. How to suppress sonar reports? 

@rkorytkowski https://issues.openmrs.org/browse/TRUNK-4654

Fixed hashCode

@rkorytkowski pull request with code that I asked you about in private email.
Do not merge!

Can we add test case for this?

Also please assign ticket to yourself if you working on it :)

I think there's already a test for this file?
web/test/java/org.openmrs/web/filter.update/UpdateFilterTest

Anyway I ran all the tests and all passed before making this pull requests :)

That's fine. Since this is more of a bad practice correction. No need of a ttest if present :)

@rkorytkowski https://issues.openmrs.org/browse/TRUNK-4657

@rkorytkowski  https://issues.openmrs.org/browse/TRUNK-4658

@STheis can you squash these commits into one? http://go.openmrs.org/pull-request-tips

@joshim5 did you notice that there is a unit test which fails in ModuleUtilTest?

@tomaszmueller where is it needed (used)?

@dkayiwa Yes -- This is because the OpenMRS unit tests test the uploading of SNAPSHOT versions. Seeing as we no longer allow SNAPSHOT versions, should these unit tests be changed?

@tomaszmueller i commented on the ticket.

@sashrika can you squash these commits into one? Also ensure that all tests pass after running mvn clean install

@yousefhamza which ticket number is this?

https://issues.openmrs.org/browse/TRUNK-4641

I hope, I made it in the correct way. I'm new with git.

Fixed ModuleClassLoader.java too

It seems that this pull request should be for master and not 1.11.x branch. Please create it for master.

@tomaszmueller can you squash these commits into one?

@dkayiwa done

@tomaszmueller this pull request has merge conflicts. Do you mind pulling the latest changes from upstream and try again?

@dkayiwa I updated the pull request. Did it help?

@sashrika for which ticket is this pull request?

@STheis no you have not. Did you read the link i gave above?
Did you also see? https://wiki.openmrs.org/display/docs/Using+Git

@vikashgupta2000 your pull request has merge conflicts. Can you pull the latest changes form upstream and try again?

@vikashgupta2000 i also see that the ticket you are working on is not ready for work. It needs assessment. We encourage you to work on only those tickets which are ready for work.

Any luck creating that unit test, @tharinduNA ?

sorry @dkayiwa , I think this is a mistake. 

Please close this PR.

Closing per request.

yes, i have read the links. But is not easy. I found my first issue. I worked with notepad++ to squash the commits and this file was sychronized to patch-1. If it dont work. I close this pull request and create a new one with the newest translation. 

sure, no problem

I created the unitTest **getForms_shouldReturnFormsThatHaveAnyMatchingFormFieldsInContainingAnyFormField()**. 
I placed it in **FormServiceTest.java**. I thought it would be better there. Besides this modification I basically followed the modifications done by Jakub Buczyński.

I added a new data-set **FormServiceTest-multipleForms-formFields.xml**. I did it because when the data-set **FormServiceTest-formFields.xml** contains more than one form-data it will break the UnitTest **getForms_shouldReturnFormsContainingAllFormFieldsInContainingAllFormFields**.
It happens because the test asserts the expected number of forms and it didn't match.
I think the problem is here. https://github.com/Fernando-Jack/openmrs-core/blob/master/api/src/main/java/org/openmrs/api/db/hibernate/HibernateFormDAO.java#L457-L462
The query return a wrong number of forms when the dataset has more than one form.

I used the code here "http://stackoverflow.com/questions/554481/how-to-get-sql-from-hibernate-criteria-api-not-for-logging" to extract the sql generated by the CriteriaQuery and the query created was this. 

select \* from
form this_
    where ? < (
    select count(ff_.form_field_id) as y0_ from 
      form_field ff_ 
      where ff_.form_id=ff_.form_id and ff_.form_field_id in (?, ?)
    )

Jakub Buczyński had noticed it and He was close to fix the problem. He tried to fix this error here
 https://github.com/jbuczynski/openmrs-core/blob/c8c39b79c695e254a4ce0037c468302f1b053455/api/src/main/java/org/openmrs/api/db/hibernate/HibernateFormDAO.java#L459-464. But his modifications generated the below.  But I think it didn't fixed the problem.

select \* from form this_ 
    where this_.form_id = all (
        select ff_.form_id as y0_ from  form_field ff_  where ff_.form_field_id in (?, ?, ?)
    )

After some time, I figured out this query :
select \* from  form outerForm
where 2 <= 
       (select  count(*) from  form innerForm
                inner join
            form_field formfield ON innerForm.form_id = formfield.form_id
        where
            innerForm.form_id = outerForm.form_id and formfield.form_field_id in (2,3))

I implemented it with HibernateCriteria here. https://github.com/Fernando-Jack/openmrs-core/blob/correctingUnitTest/api/src/main/java/org/openmrs/api/db/hibernate/HibernateFormDAO.java#L457-L464

All the modifications described are in this commit: https://github.com/Fernando-Jack/openmrs-core/commit/1a99ecc23371676cc90d69da807e8d58f8fbfd74

Question
- Should I make a new pull request with this commit: https://github.com/Fernando-Jack/openmrs-core/commit/1a99ecc23371676cc90d69da807e8d58f8fbfd74 With all modifications described above? Or split it in two commits? I already did "mvn clean install".

Thanks

@Pakshal can you squash these commits into one?

@zak905 can you squash these commits into one as advised at? http://go.openmrs.org/pull-request-tips

@rkorytkowski and @wluyima what do you generally think of this proposed refactoring?

@tomaszmueller is this for only 1.10? Or should the pull request be made on master?

@tomaszmueller can you squash these commits into one?

@dkayiwa this is for 1.10

Oops, just wanted to make a pull request on commit 
Multithreaded correctness - Call to static DateFormat    d373423

but some other commits have also been appended because of some reason.

@dkayiwa  squashed

So what do you recommend here? @dkayiwa?

I'm surprised that doing this isn't going to break classes that are mapped via XML. But as long as you all test it... :-)

@Fernando-Jack can you squash these commits into one?

Travis reports a failing build. The following test fails: saveShortPatient_shouldAddANewPersonAttributeWithANonEmptyValue(org.openmrs.web.controller.patient.ShortPatientFormControllerTest)
@tomaszmueller, does it pass for you locally?

when building openmrs with jetty 9.2.10.v20150310 I get error on the main page:
An error has occurred!
The following error happened somewhere on this page:
javax.servlet.jsp.JspException: javax.servlet.ServletException: File "/WEB-INF/view//portlets/welcome.jsp" not found

(The full error stack trace output is in the source of this page.) 

Yes, no problems @dkayiwa .
But should I make a new pull request with this commit: Fernando-Jack@1a99ecc or just squash these commits and make a new pull request?

thanks

Just squash the commits for this very pull request.

On Tue, Mar 31, 2015 at 3:58 PM, Fernando Barbosa notifications@github.com
wrote:

> Yes, no problems @dkayiwa https://github.com/dkayiwa .
> But should I make a new pull request with this commit: Fernando-Jack@
> 1a99ecc https://github.com/Fernando-Jack/openmrs-core/commit/1a99ecc or
> just squash these commits and make a new pull request?
> 
> thanks
> 
> —
> Reply to this email directly or view it on GitHub
> https://github.com/openmrs/openmrs-core/pull/1444#issuecomment-88074195.

## 

If we keep uppermost in our minds the unkind and unjust acts of others, we
shall find it impossible to love them as Christ has loved us; but if our
thoughts dwell upon the wondrous love and pity of Christ for us, the same
spirit will flow out to others.

@rkorytkowski https://issues.openmrs.org/browse/TRUNK-4644

Ok, then please use the latest version of 8.x

-Rafał

On 31 March 2015 at 14:46, tomaszmueller notifications@github.com wrote:

> when building openmrs with jetty 9.2.10.v20150310 I get error on the main
> page:
> An error has occurred!
> The following error happened somewhere on this page:
> javax.servlet.jsp.JspException: javax.servlet.ServletException: File
> "/WEB-INF/view//portlets/welcome.jsp" not found
> 
> (The full error stack trace output is in the source of this page.)
> 
> —
> Reply to this email directly or view it on GitHub
> https://github.com/openmrs/openmrs-core/pull/1452#issuecomment-88070893.

@STheis if you fail, ping me on IRC.

@approce did you just forget to claim this ticket? https://issues.openmrs.org/browse/TRUNK-4522

@approce you need to claim a ticket before working on it. Can you also squash these commits into one?
Did you read this? http://go.openmrs.org/pull-request-tips

@vikashgupta2000 remind me to reopen this after you deal with the above.

@itatriev for which ticket number is this pull request?

@rkorytkowski It didn't pass
I fixed it and updated the pull request

@rkorytkowski updated with 8.1.16

@dkayiwa  Ok, I have claimed ticket. Also I have squashed commits into one.
Yeap, I've read that.

I have made a new one under #1454

@yousefhamza did you notice that this pull request has merge conflicts? Can you pull the latest changes from upstream and then commit?

I guess it was up to date when I made it '6 days ago', But I will fix it now no problem.

Oh i see! We are very sorry for taking long to look at it!!!

On Tue, Mar 31, 2015 at 9:02 PM, Yousef Hamza notifications@github.com
wrote:

> I guess it was up to date when I made it '6 days ago', But I will fix it
> now no problem.
> 
> —
> Reply to this email directly or view it on GitHub
> https://github.com/openmrs/openmrs-core/pull/1438#issuecomment-88190399.

## 

If we keep uppermost in our minds the unkind and unjust acts of others, we
shall find it impossible to love them as Christ has loved us; but if our
thoughts dwell upon the wondrous love and pity of Christ for us, the same
spirit will flow out to others.

@joshim5 the changes should be in https://github.com/openmrs/openmrs-contrib-modulus

@yousefhamza did you just forget clicking the Request Code Review button as advised at? http://go.openmrs.org/pull-request-tips

Well done!

@SharonVarghese i have tried out your changes and confirmed that they do not fix the reported problem. Did you actually test this out?

@rkorytkowski  updated

@rcrichton this pull request has merge conflicts. Do you think you can pull the latest changes from upstream and try again?

@LordSriyan yes it has conflicts. Can you squash these commits into one? And also look into the conflicts after pulling from upstream?

@approce can you also always include at least the ticket summary in the pull request message as advised at http://go.openmrs.org/pull-request-tips?

@approce can you also always include at least the ticket summary in the pull request message as advised at http://go.openmrs.org/pull-request-tips?

@approce can you also always include at least the ticket summary in the pull request message as advised at http://go.openmrs.org/pull-request-tips?

@approce can you also always include at least the ticket summary in the pull request message as advised at http://go.openmrs.org/pull-request-tips?

Can you also always include at least the ticket summary in the pull request message as advised at http://go.openmrs.org/pull-request-tips?

Can you also always include at least the ticket summary in the pull request message as advised at http://go.openmrs.org/pull-request-tips?

Can you also always include at least the ticket summary in the pull request message as advised at http://go.openmrs.org/pull-request-tips?

Can you also always include at least the ticket summary in the pull request message as advised at http://go.openmrs.org/pull-request-tips?

@sashrika can you create a new pull request? This has more commits than it should.

Closing because author abandoned it.

Closing because author abandoned it.

Closing because author abandoned it.

Closing because author abandoned it.

Closing because author abandoned it.

@rkorytkowski should I add additional classpath to surefireraports plugin in pom for the tests to look in the correct WEB-INF folder like in the pull request? (do not merge)
What assertions you had on mind in your email as in openmrs-core only assertions connected to MutableResourceBundleMessageSource i could find were in AdministrationServiceTest in tests concerning locales?
Or should I create a separate test for checking MutableResourceBundleMessageSource.findPropertiesFiles and include the assertions there?

Closing because author abandoned it.

Closing because author abandoned it.

Closing because we decided to take a different path.

Closing because author abandoned it.

@SandeepRaparthi1 do you mind pulling from upstream and try resolve these conflicts?

@SharonVarghese do you mind pulling from upstream and try resolve these conflicts?

@sashrika do you mind pulling from upstream and try resolve these conflicts?

@mg011 do you mind pulling from upstream and try resolve these conflicts?

Closing because author abandoned it.

Closing because author opened a new one.

@tanayabh did you see the comments @kristopherschmidt put on the ticket?
Can you also pull from upstream and try resolve these conflicts?

@tmdugan do you still need this? :)

No. We just added to our custom build of 1.7.x until we have a chance to
upgrade.

On 4/1/2015 10:39 AM, dkayiwa wrote:

> @tmdugan https://github.com/tmdugan do you still need this? :)
> 
> —
> Reply to this email directly or view it on GitHub
> https://github.com/openmrs/openmrs-core/pull/1207#issuecomment-88508837.

@rkorytkowski 
@dkayiwa Updated

@dkayiwa updated

@karan173 on the JIRA ticket, can you first attach a screenshot with the effects of your changes?

@dkayiwa yeap, I will always include ticket summary to PR :)

@SandeepRaparthi1 this pull request has merge conflicts. Can you pull the latest changes from upstream and try again?

@tharinduNA did you get a chance to look into this? Can you also pull the latest changes from master to resolve the pull request conflicts?

@approce the formatting does not look correct. Did you run mvn clean install before committing?

@dkayiwa I will rerun command and check formatting.

@approce the formatting does not look correct. Did you run mvn clean install before committing?

@dkayiwa  Ok, I have rerun command and it become correct formatted. Also, I have squashed commits. 
You can check now.

@maany can you squash these commits into one as advised at http://go.openmrs.org/pull-request-tips?

@dkayiwa Ok, I have rerun command and it become correct formatted. Also, I have squashed commits.
You can check now.

@tomaszmueller can you always include the sonar issue url on the ticket?

Hi @dkayiwa
Do you think I should change something?

Thanks

@tomaszmueller can you always run mvn clean install before committing as advised at? http://go.openmrs.org/pull-request-tips

@yousefhamza after making the followup commit, remember to squash the commits as advised at http://go.openmrs.org/pull-request-tips

Closing it. Now I can see there are some more work in scope of the issue and more files should be changed.
dkayiwa, thank You a lot. It is much more clear now.

@dkayiwa  have fixed inaccuracies & rerun mvn clea install.

@dkayiwa Yeap, I've fixed that to use ActivityListItem.

In the english sentences, can you replace ActivityListItem with active list item?

@dkayiwa yeap, I can :)

@dkayiwa ok, have done with that.

@approce you also need to run mvn clean install before committing such that the formatting gets correct.

@dkayiwa corrected spelling & reruned mvn clean install.

@dkayiwa ok, have done and squashed commits.

Can we put a line between method description and the param javadoc?

@dkayiwa sure we can :)

Sure. 

@dkayiwa Can you please let me know what conflicts are you talking about? As you asking me to pull and check if there are any conflicts?

Made some suggested edits and also fixed the other file listed in sonar.
new pull request: https://github.com/openmrs/openmrs-core/pull/1462

updated

@dkayiwa updated

That's how it was intended, but i'm not sure how should I test it and what more is needed to do. I need some more explanations from @rkorytkowski

@wluyima have removed super.

https://issues.openmrs.org/browse/TRUNK-4672
"Correctness - int value cast to float and then passed to Math.round"

Thanks!

@dkayiwa, @rkorytkowski  would you please take a look at this?

This is not correct. I replied on the issue.

bad rebase

@lluismf it's just an initial PR, and of course it wouldn't be hardcoded in merged candidate.

The approach here is incorrect. See my comments on the ticket.

For this ticket, we really should have a test that actually looks in a different locale (with the same language). E.g. we should be explicitly testing our preferred behavior when you look for a concept name in en_US but the concept only has a name in en, or the concept only has a name in en_UK.

@rkorytkowski https://issues.openmrs.org/browse/TRUNK-4639

https://issues.openmrs.org/browse/TRUNK-4675

@djazayeri  I Have updated the PR with test case  :) 

Thanks for the fix!

@SandeepRaparthi1 my comment was based on looking at this code now, way after the fact. Can you raise another PR with that change (since @dkayiwa merged the original one months ago)?

@djazayeri I am sorry I meant i created a PR https://github.com/openmrs/openmrs-core/pull/1472 which i posted as a comment on the  ticket :) 

I will close this PR for now, until we find a way out.

@justincohler  can you squash these commits into one as advised at? http://go.openmrs.org/pull-request-tips

@rkorytkowski https://issues.openmrs.org/browse/TRUNK-4386

@dkayiwa updated

@dkayiwa fixed formatting issues

module_messages*.properties files should not be committed.

@djazayeri good catch, @tomaszmueller be sure to start the webapp once you remove module_messages*.properties to see if the actual properties from modules are loaded correctly. Go to the administration page for example and see some module's pages like webservices.rest to confirm translation works.

@justincohler this pull request has lots more than it should. Just create a new one.

@djazayeri
@rkorytkowski 
Removed module_properties*.properties

@SharonVarghese tell me to reopen if you decide to resume working on this.

@tomaszmueller it still did not work. Can you just create a new pull request?

@zak905 do you mind squashing these commits into one?

@tharinduNA tell me to reopen if you resume working on this.

@LordSriyan can you just create a new pull request?

@SharonVarghese remind me to reopen if you happen to resolve the conflicts.

@SandeepRaparthi1 remind me to reopen after you fix the merge conflicts.

@sashrika remind me to reopen if you resume working on the above.

@mg011 can you just create a new pull request?

@tanayabh remind me to reopen if you resume working on this.

@rcrichton remind me to reopen this when you resume working on it.

@dkayiwa https://issues.openmrs.org/browse/TRUNK-4658

Closing this because author created another pull request.

@dkayiwa updated

@tomaszmueller this pull request has merge conflicts. Do you mind pulling the latest changes from upstream?

@dkayiwa changed

@alexei-grigoriev can you squash these commits into one?
On the JIRA ticket, remember to also attach screenshots with effects of your changes. One screenshot with the list of providers and a second one with one of the providers selected.

But on provider list nothing changed. 
Should I put a full screens hot or a changed region is better? 

Before squashing I've made a change to providerForm.jsp. Please review it too.

The build has failed. But I am sure it caused by some random problem not related to my changes. As mentioned in https://botbot.me/freenode/openmrs/msg/36890023/ there are some other builds failing on the ModuleActivatorTest.
I have no idea how to deal with it. 

@lluismf do you mind pulling the latest changes from upstream to resolve the merge conflicts in this pull request?

I've tried several times and I have to abort the rebase always. I resolved the conflicts manually but then rebase --continue fails. I'm out of ideas.

@lluismf does it help if you just discard the changes, pull the latest from upstream, then put back the changes and create a new pull request?

@vikashgupta2000 which ticket or master commit did you back port this from?

@lluismf did you notice that this also has merge conflicts?

@SandeepRaparthi1 did you use this https://wiki.openmrs.org/display/docs/Generate+Test+Case+Plugin to generate the unit test method name?
Your name does not match the @should

@alexei-grigoriev since you changed the provider domain object, it may have effects on the provider list. So you need to also attach a screenshot with the list of providers. This screenshot should show some providers listed to confirm that your changes did not break something. Does this make sense?

@dkayiwa Sure. The screen shot is attached to the issue.

If we are going to merge this, we need some serious testing to ensure that we're not regressing some behavior.

The original method was written in the ugly way it was to intentionally bypass hibernate. Does a SQLQuery in hibernate have the same effect?

@Daniel ok I will try again, I think it's because of changes in license and line endings. Maybe I'll need to remove the branch, rebase master and branch again.

@Darius I ran unit tests (debugging) before and after the change, and the results were the same. I did not refactor any method that was not used in some test. And yes, SQLQuery is just a way to execute native SQL with the advantage of 1) less boiler plate and 2) parameter naming. Perhaps the original developer was not aware of this feature.

Yes I did. Same case as https://github.com/openmrs/openmrs-core/pull/1477

Closing for now

@vikashgupta2000 can you please create a ticket for this in the TRUNK project at issues.openmrs.org The ERR project is intended to hold error reports submitted by some automated means.

Just to verify, do we have good test coverage for the method we are changing?

@dkayiwa
@rkorytkowski
@djazayeri
I created a new pull request for this issue with updated changes, seems to work properly
https://github.com/openmrs/openmrs-core/pull/1480

@lluismf the case of concept_numeric is handled by the unit test named: saveConcept_shouldSaveNonConceptNumericObjectAsConceptNumeric
Could we have another unit test to deal with concept_complex?

I will recheck the subquery and create a new test, but take into account that the current version is already buggy (try creating a concept number and then changing to complex => throws an exception). 

@lluismf by current version, do you mean the one before you changes?
About changing a concept to complex, do you mean in the user interface?

Yes, the version already running on the demo server. Please try for yourself the following cases:
- text to numeric
- text to complex
- complex to text
- numeric to text
- numeric to complex
- complex to numeric

demo is not using master. Did you try on master?

On Tue, Apr 21, 2015 at 7:04 PM, Lluis Josep Martinez <
notifications@github.com> wrote:

> Yes, the version already running on the demo server. Please try for
> yourself.
> 
> —
> Reply to this email directly or view it on GitHub
> https://github.com/openmrs/openmrs-core/pull/1479#issuecomment-94854009.

## 

If we keep uppermost in our minds the unkind and unjust acts of others, we
shall find it impossible to love them as Christ has loved us; but if our
thoughts dwell upon the wondrous love and pity of Christ for us, the same
spirit will flow out to others.

I tested it before doing my changes so I guess it was master, but I can recheck. Are you aware of this exception by the way?

No.

On Tue, Apr 21, 2015 at 7:12 PM, Lluis Josep Martinez <
notifications@github.com> wrote:

> I tested it before doing my changes so I guess it was master, but I can
> recheck. Are you aware of this exception by the way?
> 
> —
> Reply to this email directly or view it on GitHub
> https://github.com/openmrs/openmrs-core/pull/1479#issuecomment-94856469.

## 

If we keep uppermost in our minds the unkind and unjust acts of others, we
shall find it impossible to love them as Christ has loved us; but if our
thoughts dwell upon the wondrous love and pity of Christ for us, the same
spirit will flow out to others.

I ran the webapp on master and got this when changing from Numeric to Complex:

An Internal Error has Occurred
org.hibernate.NonUniqueObjectException
a different object with the same identifier value was already associated with the session: [org.openmrs.ConceptComplex#7]

Running it with my changes throws exactly the same exception, following the same steps.

https://issues.openmrs.org/browse/TRUNK-835

@lluismf i have just changed a concept from numeric to complex, both at http://int01.openmrs.org:8080/openmrs and locally. It all works well before your changes. :)

Change to numeric again, then to complex again and you'll get the exception. It's the second time you change to complex. I've created a ticket :-)

Thanks for the detailed explanation. I was able to reproduce it in the old version. :)

FWIW, i made a followup commit with the missing test: https://github.com/openmrs/openmrs-core/commit/eb822d22a99adc1f827864078a5d12b87d3ba2f0
I also tested the user interface to confirm all is well.

Thanks !

@SandeepRaparthi1 are you still working on this?

@StasPereverziev  can you please include the ticket number in the title or description of this pull request?

@dkayiwa Yes I have made changes The name matches now :) 

@djazayeri Ticket # ERR-853

@lluismf did you see the failing tests in OrderServiceTest?

I ran that test before and after my changes and all was good. I'll recheck tonight.

@SandeepRaparthi1 can you please use the test case generator plugin above? That is how you will get it right.

@naraink when done, you will also need to squash your commits into one as advised at http://go.openmrs.org/pull-request-tips

@wluyima
@rkorytkowski 
Updated

@dkayiwa Ticket #TRUNK-4692 is created.
Please merge the same in 1.10.x

@vikashgupta2000 am not able to reopen this pull request. did you force-push?

All the tickets related to java 8 upgrade need to be merged into the java8 branch in master, you can ignore this since it is already merged but remember that for future ones

I created this branch from java8, but the pull request was on master (not sure why).

@dkayiwa the changes are made and the same is pushed to the branch.

When creating a pull request, github gives you the option to choose the space and branch you wish to merge to

:+1: 

@sdale28 did you run mvn clean install as advised at? http://go.openmrs.org/pull-request-tips
Your commit has some unit test failures.

@dkayiwa I've merged in the latest from master. This should be good to go now.

@rcrichton can you also squash these commits into one?

@wluyima
@djazayeri 
@rkorytkowski 
Updated(using PathMatchingResourcePatternResolver to retrieve messages*.properties to copy)

Hey @dkayiwa I've squashed the commits and merged with latest from upstream. I see this PR hasn't updated with the latest changes, I'm not sure if that is because it is closed. Let me know if I need to create another PR or if it works if you open it again.

@rcrichton unfortunately i cannot reopen this pull request because the branch was recreated or force pushed. Do you mind creating a new pull request?

@dkayiwa ok, I've created a new PR https://github.com/openmrs/openmrs-core/pull/1494. It must have been because of the force push to squash the commits.

@midnighteuler when i click on the Child Role link, it takes me to a page with an empty role name. Can you look into that?

@rcrichton i see two commits in this pull request. Was that intentional? :)

I'll take a look.

@rcrichton ping :)

@tomaszmueller do you see the merge conflicts in this pull request?

@tomaszmueller do you see the merge conflicts in this pull request?

Closing because author abandoned it.

The reason is that git doesn't allow me to squash merge commits.

@rcrichton does this disable all validations? Or some of it?

@dkayiwa I don't see the merge conflicts you mention. I just did a pull --rebase upstream master, and it appeared to automerge UserServiceTest.java, OrderServiceTest.java, ConceptServiceTest.java and applicationContext-service.xml and pushed the changes to pull request, please verify if it helped.

@tomaszmueller oh you are right. It is travis complaining about the famous unit test failure. :)

I believe it stops all validation, it seems pretty much all places I could find use the admin service to validate.

The new one use extraClasspath which is documented here http://download.eclipse.org/jetty/8.1.16.v20140903/apidocs/org/eclipse/jetty/webapp/WebAppContext.html#setExtraClasspath%28java.lang.String%29 

I ran "mvn clean test" and "mvn clean install" locally successfully. As far as I can tell, the test that failed in the Travis CI build failure at https://travis-ci.org/openmrs/openmrs-core/builds/62013260 does not appear to be related to my changes.

@tutak on the JIRA ticket, can you attach a screenshot with the effects of your changes as advised at http://go.openmrs.org/pull-request-tips?

@sdale28 i will reopen this when you get time to look into it.

@rcrichton is the merge also part of the pull request? It seems to contain more than it should for the pull request. :)

@dkayiwa So, can this be merged?

@dkayiwa I attached the screenshot.

@dkayiwa the merge does nothing more than bring my branch up to date with openmrs-core/master. If you look at the diff you will see all the effective change this PR will make: https://github.com/openmrs/openmrs-core/pull/1494/files

What would you like me to do here? Start from scratch with a new branch from the latest from master and recreate my changes so there isn't a merge commit?

Would it take you a lot of time to do that?

On Wed, May 13, 2015 at 10:12 AM, Ryan Crichton notifications@github.com
wrote:

> @dkayiwa https://github.com/dkayiwa the merge does nothing more than
> bring my branch up to date with openmrs-core/master. If you look at the
> diff you will see all the effective change this PR will make:
> https://github.com/openmrs/openmrs-core/pull/1494/files
> 
> What would you like me to do here? Start from scratch with a new branch
> from the latest from master and recreate my changes so there isn't a merge
> commit?
> 
> —
> Reply to this email directly or view it on GitHub
> https://github.com/openmrs/openmrs-core/pull/1494#issuecomment-101543102
> .

## 

If we keep uppermost in our minds the unkind and unjust acts of others, we
shall find it impossible to love them as Christ has loved us; but if our
thoughts dwell upon the wondrous love and pity of Christ for us, the same
spirit will flow out to others.

It wouldn't take to long cos this is a small change. Is the merge commit that much of an issue?

1. >> In fact, i think you need to get rid of this discontinueExistingOrdersIfNecessary() method since this is no longer necessary after all it is called in one palce

I think you mean method org.openmrs.api.impl.OrderServiceImpl.checkDrugOrdersForDiscontinuing(DrugOrder, DrugOrder)
I made it just to avoid 3 level of ifs. Should I remove this method?
2. >> Order orderToBeDiscontinued = null;
this variable is used to store order to be discontinued. In case of drag orders, when there are two drug orders with same drug we will discontinue the last founded. In case of orders with same concept we will throw AmbiguousOrderException on attempt to store second order to this variable. 
Should this logic be changed?
3. >> I believe there was a test that ensured the existing order gets discontinued, and i would assume after your change it would fail and then it passes once you specify the expected exception class and message
I found org.openmrs.api.OrderServiceTest.saveOrder_shouldPassIfTheExistingDrugOrderMatchesTheConceptAndThereIsNoDrugOnThePreviousOrder(), which I think you mean. But in this order Drug Orders are tested. And Drug Orders have to be discontinued in without AmbiguousOrderException. 
May be you can show me Test, where there are two Orders (not Drug Orders) with same concept and attempt to discontinue one of them.
4. >> I don't think you need this test data, you should just place an order for with a concept or drug that matches that of an existing one
I prepared this test data for situation described in 3. Should I remove this and in the test store a new Order with same concept and them try to discontinue this order?

Hey @dkayiwa, I'm going to recreate the PR from the latest in master...

Wait to make changes, have you read the recent ticket comments?

@aashna do you mind improving your commit message from simply saying that you changed the files? If you are not sure of what it should be, you can at least use the ticket title.

@dkayiwa I have updated the commit message, is it fine now?

Looks some problem with the code, I'll check it.

Hey @dkayiwa, I have addressed the comments and also updated the way that the disableValidation property is set on OpenMRS startup. Please can you have another look.

@owolabileg for which ticket is this pull request? Did you get a chance to look at? http://go.openmrs.org/pull-request-tips

Thank you for the pointer. I will open another pull request for a ticket that I have just opened.

Hey @dkayiwa any other comments?

Closing because a new pull request was created https://github.com/openmrs/openmrs-core/pull/1503

Strong work! I wish we had more such polished pull requests! Thanks!

Thanks for the compliment! I'm happy to do more. If you have specific tasks you would like accomplished, please let me know. You know how to reach me.

@rcrichton do you mind creating a ticket for this? :)

Hi, I already have :) It's here: https://issues.openmrs.org/browse/TRUNK-4728

@rcrichton is all well when you locally do a complete mvn clean install?

@dkayiwa I get a failed tests, however I get that on master as well:

```
Results :

Failed tests: 
  LocaleUtilityTest.getDefaultLocale_shouldNotReturnNullIfGlobalPropertyDoesNotExist:148 expected null, but was:<en_GB>

Tests run: 3053, Failures: 1, Errors: 0, Skipped: 29

[INFO] ------------------------------------------------------------------------
[INFO] Reactor Summary:
[INFO] 
[INFO] OpenMRS ........................................... SUCCESS [1.404s]
[INFO] openmrs-tools ..................................... SUCCESS [0.861s]
[INFO] openmrs-test ...................................... SUCCESS [0.097s]
[INFO] openmrs-api ....................................... FAILURE [1:29.290s]
[INFO] openmrs-web ....................................... SKIPPED
[INFO] openmrs-webapp .................................... SKIPPED
[INFO] ------------------------------------------------------------------------
[INFO] BUILD FAILURE
[INFO] ------------------------------------------------------------------------
```

@chethanTw can you first pull changes from upstream and then add in these changes? That way your pull request will not have this merge that i see. It will have only the changes that are for this ticket.

@chethanTw did you see the above comment?

@dkayiwa I saw the comment and made the changes and the merge is no more existing.

@chethanTw thanks! Do you mind squashing these commits into one?

@dkayiwa Sure. I will do that.

@dkayiwa I squashed the commits. Thanks :)

@dkayiwa I have done the suggested changes.. Should I put a new commit or squash it with existing one?

You can squash with the existing one.

On Thu, Jun 11, 2015 at 10:25 AM, Chethan A notifications@github.com
wrote:

> @dkayiwa https://github.com/dkayiwa I have done the suggested changes..
> Should I put a new commit or squash it with existing one?
> 
> —
> Reply to this email directly or view it on GitHub
> https://github.com/openmrs/openmrs-core/pull/1509#issuecomment-111024900
> .

## 

If we keep uppermost in our minds the unkind and unjust acts of others, we
shall find it impossible to love them as Christ has loved us; but if our
thoughts dwell upon the wondrous love and pity of Christ for us, the same
spirit will flow out to others.

@chethanTw whenever you will be done with this, remember to hit the "Request Code Review" button on the JIRA ticket.

Closing because the correct fix was committed at https://github.com/openmrs/openmrs-core/commit/19c7ae1b122fd575ec8ca3a59002b6617ff6c2ca

@tomaszmueller are all these changes for just this ticket?

@tomaszmueller am closing this because you opened up https://github.com/openmrs/openmrs-core/pull/1480
Feel free to correct me if am wrong :)

Closing because change request was cancelled

@naraink can you squash these commits into one?

@tutak can you squash these commits into one?

Closing because author no longer works on it. 
@maany feel free to tell me reopen if you want to resume working on this. :)

Closing because author no longer has time to work on this.

@dkayiwa this ticket and TRUNK-4097

Do you mind separating them and hence create a separate pull request for
each? :)

On Mon, Jun 15, 2015 at 10:56 AM, tomaszmueller notifications@github.com
wrote:

> @dkayiwa https://github.com/dkayiwa this ticket and TRUNK-4097
> 
> —
> Reply to this email directly or view it on GitHub
> https://github.com/openmrs/openmrs-core/pull/1480#issuecomment-111970931
> .

## 

If we keep uppermost in our minds the unkind and unjust acts of others, we
shall find it impossible to love them as Christ has loved us; but if our
thoughts dwell upon the wondrous love and pity of Christ for us, the same
spirit will flow out to others.

@dkayiwa, I don't think this would be a good idea, since the fix for TRUNK-4097 is a part of fix for TRUNK-4386, and that is why they are in one pull request. @rkorytkowski, what do you think?

Had one little comment, otherwise it looks good, can you look into why the travis build above is failing?

@dkayiwa Sorry for the late reply on this. I have renamed the getBirthtime() to getBirthDateTime() and created a new getter which returns just birthtime.

@rkorytkowski what is your take regarding the above? :)
By the way, @tomaszmueller this pull request has merge conflicts. Typical of pull requests that have lots of changes. :)

@dkayiwa commits squashed.

Closing this because it is simply for demonstration purposes.

The Travis build failed due to this test failure:

```
Failed tests: 
  UserServiceTest.getAllPrivileges_shouldReturnAllPrivilegesInTheSystem:490 expected:<1> but was:<150>
Tests run: 3087, Failures: 1, Errors: 0, Skipped: 29
```

I ran the UserServiceTest cases about a dozen times on mac and linux platforms; I could not reproduce the failure. Is it possible this is a transient failure?

Java files are with wrong formatting. 'mvn package' getting them changed by formatting. Could You please check it?

Java files are with wrong formatting. 'mvn package' getting them changed by formatting. Could You please check it?

Are you referring to master? Or some other branch? I have just checked master and all seems to be well. For the 1.11.x branch, i have committed: https://github.com/openmrs/openmrs-core/commit/02e50266ba0866ffef62ad4d640b830297af5703

It was about 1.11.x. Thanks

@thomasvandoren can you squash these commits into one as advised at? http://go.openmrs.org/pull-request-tips

@dkayiwa -- I squashed the commits. Thanks!

@owolabileg can you separate formatting changes from the actual code changes? That is, create a separate pull request for each.

I removed the formatting changes from this pull request. 

Can u squash these commits into one as advised at http://go.openmrs.org/pull-request-tips

closing big pull request and open up 2 separate ones (one for each ticket), with squashed commits

Hi Wyclif,

I changed array of Orders to array of UIDs. It is clear. I also removed overridden method 
saveOrder(Order order, OrderContext orderContext, Order[] parallelOrders)
despite of requirements in https://issues.openmrs.org/browse/TRUNK-4702. What about test is not clear. I have already test org.openmrs.api.OrderServiceTest.saveOrder_shouldPassIfAnKnownDrugOrderForTheSameDrugFormulationSpecified(). Should I write another one?

Now then, I do not have any idea as to why the CI build is failing. If I do "mvn clean install" I get:

```
[INFO] ------------------------------------------------------------------------
[INFO] Reactor Summary:
[INFO] 
[INFO] OpenMRS ........................................... SUCCESS [2.045s]
[INFO] openmrs-tools ..................................... SUCCESS [1.296s]
[INFO] openmrs-test ...................................... SUCCESS [0.152s]
[INFO] openmrs-api ....................................... SUCCESS [2:17.351s]
[INFO] openmrs-web ....................................... SUCCESS [58.216s]
[INFO] openmrs-webapp .................................... SUCCESS [8.305s]
[INFO] ------------------------------------------------------------------------
[INFO] BUILD SUCCESS
[INFO] ------------------------------------------------------------------------
```

If I do "mvn clean package javadoc:aggregate-jar" I get:

```
[INFO] ------------------------------------------------------------------------
[INFO] Reactor Summary:
[INFO] 
[INFO] OpenMRS ........................................... SUCCESS [24.676s]
[INFO] openmrs-tools ..................................... SUCCESS [1.345s]
[INFO] openmrs-test ...................................... SUCCESS [0.084s]
[INFO] openmrs-api ....................................... SUCCESS [2:09.815s]
[INFO] openmrs-web ....................................... SUCCESS [53.343s]
[INFO] openmrs-webapp .................................... SUCCESS [8.331s]
[INFO] ------------------------------------------------------------------------
[INFO] BUILD SUCCESS
[INFO] ------------------------------------------------------------------------
```

Looks like the "Q...;" type parameters are only used in test classes. As I described in the commit comment, I decided that javadocs of test classes are out of scope. The reasons being that the test class javadocs do not get validated (or even compiled?) and that there was enough work even without the test class javadocs. However, some of the regex stuff I did did also fix problems in test classes. Hence the modified line of code you mentioned.

As it stands, fixing the "Q...;" type parameters is out of scope (of the unit of work I have committed) and I suggest we leave them as they are for now. Or was there some specific reason why these particular problems in test class javadocs should be fixed?

Of course we can and should also discuss about what to do with the test class javadocs.

Ok, that's fine

@macorrales the commit and pull request messages look out of sync. Can you look into it?

@dkayiwa 

I don't know how this request has no commits ... it looks to me that Pull Request #1520 is fine Can you validate that one and disregard this one.

let me know, thanks

It seems I was a bit sleepy last night when a created a pull request master to master...with no changes there is another ne from the branch TRUNK-4408 #1520 

Am have commented on the ticket regarding closing the pull request.

Closing this in favor of a new pull request as i commented on the ticket.

@tomaszmueller i have commented in a few places regarding the use of Context.getMessageSourceService().getMessage() of hard coding the messages. The same applies to other places that i have not commented.
I also see a number of message properties files with "File renamed without changes", did you do anything about them?
After the above, resolve the conflicts and then i should be able to merge this pull request.
Thanks for the great work! :)

@wluyima what do you think of the above?

> Did you just forget to include "sorted" or "ordered" in the above should?

I agree that the phrasing in that &commat;should tag is a bit unclear. Actually it refers to the filtering and not ordering. Just like in the deprecated getEncounters(...) method there are "&commat;should get encounters by location" and "&commat;should get encounters on or after date".

https://issues.openmrs.org/browse/TRUNK-4737
Please review

@macorrales before doing your changes, did you start by pulling from upstream master?

@spereverziev this pull request seems to contain more than it should. Did you pull the latest changes from upstream before creating it?

Closing this such that we create a new and clean one.

@jasper-vandemalle this has merge conflicts. Did you remember to pull the latest changes from upstream master? http://go.openmrs.org/pull-request-tips

@macorrales what do you think is the performance implication of this change, in reference to the original?

I think it is going to perform  worse as new instances of SimpleDateFormat will be created every time those methods are used. I don't think it will perform so bad as to be noticed though. Do you have ideas about how to measure that?  Also,  sonar bug is about avoiding static use of DateFormat, not sure what other alternatives are there. Any ideas are welcome.

@macorrales thinking about this again, since these static fields are assigned values once and never changed, do you think the ticket is valid about the multithread safety?

I guess not, if code is kept that way. I understand that Sonar rule is about potential risks, the reference could be assigned a different value by another developer later on and there you could have the issue. 

@macorrales since the value assignment is on declaration, how about if we just declare them as constants to prevent being assigned a different value by another developer?

@dkayiwa only the reference to the object will be constant. The object itself can change, ie following code will compile:

```
private static final DateFormat dateFormatter = new SimpleDateFormat(DATE_TIME_FORMAT);
```

...

```
dateFormatter.setCalendar(Calendar.getInstance());
```

@macorrales you are right! :)

@SandeepRaparthi1 do you notice that your pull request has merge conflicts? Did you pull the latest changes from upstream?

@SandeepRaparthi1 did you also create a ticket with details as to why we need this pull request?

@dkayiwa I do not intend to merge this PR as of now.I will keep trying to intercept the method i made changes to in this PR from my module and try best to avoid core changes.
This PR was just to get the ball rolling if i am not successful in intercepting the method.Apologies for not informing in prior.Shall i close this ?  

Yes close it for now!

On Wed, Jul 29, 2015 at 5:34 AM, Sandeep Raparthi notifications@github.com
wrote:

> @dkayiwa https://github.com/dkayiwa I do not intend to merge this PR as
> of now.I will keep trying to intercept the method i made changes to in this
> PR from my module and try best to avoid core changes.
> This PR was just to get the ball rolling if i am not successful in
> intercepting the method.Apologies for not informing in prior.Shall i close
> this ?
> 
> —
> Reply to this email directly or view it on GitHub
> https://github.com/openmrs/openmrs-core/pull/1531#issuecomment-125814197
> .

## 

If we keep uppermost in our minds the unkind and unjust acts of others, we
shall find it impossible to love them as Christ has loved us; but if our
thoughts dwell upon the wondrous love and pity of Christ for us, the same
spirit will flow out to others.

@dkayiwa Okay

@spereverziev this pull request shows more than it should. Did you pull the latest changes from upstream master before creating it?

Have cleaned commit history and opened another PR

@foolchan2556 do you mind squashing these commits into one?

@spereverziev am closing this such that you can create a clean one.

invalid

created a new one

@michaelhofer this pull request seems to have more than it should. Did you pull the latest changes from upstream before creating it?
You would also need to squash your commits into one as advised at http://go.openmrs.org/pull-request-tips

@dkayiwa i have noticed that this request contains more commits than it should, but there is only one file in the changeset. I will fix the pull request tomorrow, if you can't merge it. 

I'll close this request since it did not match the guidelines. I'll create a new one shortly.

The NameSupportTest doesn't fail on my system.

Thanks @ojQj  :)

@dkayiwa I have now added the unit test as requested and squashed the commits into one.

@dkayiwa thanks for your comment, I have now added the @should annotations. the test passes on my system.

@michaelhofer i still do not see the @should annotation on the service.

@dkayiwa sorry for that, seems like my latest commit was not included earlier. I hope everything is now ok, sorry for the trouble.

@SandeepRaparthi1 can you always include the ticket number in your commit and pull request messages as advised at? http://go.openmrs.org/pull-request-tips

Do you have any reason why you did not do this on the master branch as per our convention?

@dkayiwa sorry i have included the ticket number now.Once we previously discussed the Rest compatibility with master branch (like creating a patient was not working fine) so we thought let us support 1.11.x as of now 

Are you trying to change the default location of module files when "owa.started" is true? If yes, i do not recommend this approach. I think your OWA implementation should be able to look at the default module location instead of changing the core platform to extract modules in different places. Besides, the core platform should not be dependent on any module specifics. Does this make sense?

@dkayiwa i do not intent to extract any of the modules code into a different location except for the Open web app code which will have a manifest.webapp(a json) folder in it.i just want to take that part code and store it at a different place.     

@SandeepRaparthi1 why don't you do that within your module? Besides, core should not be aware of any specific module.

@dkayiwa I tried that from my module but was not successful so went this approach of making changes to core which is the direct way of doing it. 

@SandeepRaparthi1 did you ask your mentor for advice regarding how to do it from your module?
Or did you even try asking for advice from the developer community regarding the same?
Am sure there has to be a solution that does not require you to start making core dependent (aware of) your module.

@dkayiwa i have discussed this with my mentor after their approval i have created the ticket.if this is not acceptable then i shall get back and try again doing that from my module. 

@SandeepRaparthi1 feel free to engage the wider developer community on talk.

@dkayiwa Okay :)

Because of the comments above, am closing this.

@smv-recommind does it still work in Firefox? :)

@dkayiwa please review, added the missing @should annotation, tanks for the notice 

Local build of openmrs-core works without any failure. NameSupportTest passes in Eclipse as well as with Maven build.

@MatthiasZerau we encourage squashing commits into one as per http://go.openmrs.org/pull-request-tips

Yes something must be wrong with our testing framework that makes this fail only on travis. Or it could be exposing a bug in our code some where, that is only exposed by travis. :)

Yes, of course it works in Firefox. Checked.

Did you actually test this out by running the web application and see these changesets get executed successfully?

What I did to test the changes:
- start web app using Jetty and access "http://localhost:8080/openmrs/initialsetup". It stated that the newly added changesets would be applied. I proceeded and successfully logged in afterwards. Verified with MySQL Workbench that the indexes have actually been created.
- successfully run "mvn clean install"

Squashed my 2 commits into one, renamed the helper method in the test.

@MatthiasZerau will this fix it for all cases affected by TRUNK-4539? :)

@dkayiwa No only for the User domain objects, but better than nothing IMHO :)

@MatthiasZerau i agree! :)

Do you mind squashing these commits into one?

Why close this -- you can just commit and squash and then push up to your fork and it will appear here...

Closing because it was picked up by someone else who created a new pull request.

Closing because the author was not able to continue with it.

Closing because the author is no longer assigned to the ticket.

@ivange94 when done with the above, remember to add some unit tests.

Yes, i though the same thing.

@dkayiwa i already had a custom exception on standby, all that is left is the unit test. will make my final commit soon

Good thinking! :)

Test both the service layer change and the controller.

ok

@jasper-vandemalle i can reopen if you resume working on this. :)

For the FormServiceImpTest, i know i have to pass an image file to the form resource, so that i can i can simulate what happens when an invalid file is passed to the resource. But the documentation of the org.openmrs.FormResource does not tell which field holds files. Also Since this error is thrown when saving in the database, am i suppose to create a test database?

Before committing, did you do an mvn clean install to ensure that the formatting is as per our convention? http://go.openmrs.org/pull-request-tips

@maany can you change in all pom.xml files? e.g api/pom.xml, web/pom.xml, etc

@shiangree which ticket number is this pull request for? http://go.openmrs.org/pull-request-tips

Thanks, the issue is ERR-916
On Mon, Sep 14, 2015 at 1:03 PM, dkayiwa notifications@github.com wrote:

> @shiangree
> https://urldefense.proofpoint.com/v2/url?u=https-3A__github.com_shiangree&d=AwMCaQ&c=8hUWFZcy2Z-Za5rBPlktOQ&r=N50WbB-1Xlv-RxfsurMDH-6oo655K_BMf9SaoNCLj-o&m=rkREXbCuUfqjS0THM8GcCAKkoarLobW9B8cP4qIgJu4&s=ESeii4tA1cWyMCfCZvksY8Fq9or5VaTJ9YfXzzqKvP8&e=
> which ticket number is this pull request for?
> http://go.openmrs.org/pull-request-tips
> https://urldefense.proofpoint.com/v2/url?u=http-3A__go.openmrs.org_pull-2Drequest-2Dtips&d=AwMCaQ&c=8hUWFZcy2Z-Za5rBPlktOQ&r=N50WbB-1Xlv-RxfsurMDH-6oo655K_BMf9SaoNCLj-o&m=rkREXbCuUfqjS0THM8GcCAKkoarLobW9B8cP4qIgJu4&s=T9FydYNCi3CbjKEjl1CdQbuqkhTZTk4JhhRbzyDHMog&e=
> 
> —
> Reply to this email directly or view it on GitHub
> https://urldefense.proofpoint.com/v2/url?u=https-3A__github.com_openmrs_openmrs-2Dcore_pull_1564-23issuecomment-2D140161721&d=AwMCaQ&c=8hUWFZcy2Z-Za5rBPlktOQ&r=N50WbB-1Xlv-RxfsurMDH-6oo655K_BMf9SaoNCLj-o&m=rkREXbCuUfqjS0THM8GcCAKkoarLobW9B8cP4qIgJu4&s=PIXeCpYN7mLW8aq-EVuYrz3DzPT9KAJ84PEXPA9_YlQ&e=
> .

1. the '.' is not automatically generated between the file name and the suffix
2. existing code expects a '.' (see for example line 1075)
3. allows tools to recognize the file type

Then how come it was working well before your change?
I want to make sure the new changes do not break things.
The method you mentioned is not related to this in any way. :)

I have done manual validation for new password using OpenmrsUtil.validatePassword() as you requested for that particular deprecated method. Is it ok that way?

@preethi29 can you create a ticket for it such that you can have some detailed description as to why we need this? Since c:out was intentionally put to prevent xss attacks.

@dkayiwa the issue that I created: https://issues.openmrs.org/browse/TRUNK-4762

Hi @mogoodrich , thanks for reviewing this ticket again!

This time it worked!  :)

Hi @mogoodrich , it looks like I do not have write access to this branch. Can you please merge this for me? Thanks.

Sorry @mogoodrich for all those identical repeatable requests. Thanks!

Thanks @mogoodrich !

@jdegraft can you squash these commits into one?

@preethi29 though this fixes the reported problem, it exposes us to XSS attacks. Can you think of something else?

@geoff-wasilwa this does not look like it should. Did you pull the latest changes from upstream?

@dkayiwa looking into it now, had the same thought when I created the pull request.

@dkayiwa had used `git pull upstream master` instead of `git rebase upstream/master`. This should be okay now.

dkayiwa: hang on, I did not actually push the squashed commit and now I have conflicts. I will update when the new commit is ready for review.

dkayiwa: I have two commits, one on Oct 1 (yesterday) which was the changes, and one today which fixes conflicts. This commits have have all the changes squahed into one commit.

dkayiwa: last commit broke CI build, let me fix, hang on!

dkayiwa: here are the changes with no conflicts.

@jdegraft you need to squash the commits into one as advised at http://go.openmrs.org/pull-request-tips

dkayiwa: Only the last commit is relevant and it is already squashed.

@jdegraft squashing reduces them to one. Looks like you have not been lucky with squashing. So am closing such that you just create a new pull request.

@dkayiwa not accidentally. The documentation says system property (including env variable) take precedence over runtime property. So the system property (-Dvar passed) is first, env var second and then runtime property third and fallback lastly.

After having looked at the code again, the only use of the environmental variable is in getting the location of the runtime properties file "OpenmrsUtil.getRuntimePropertiesFilePathName". And the name of this environmental variable is not fixed. It depends on the webapp name. As for "OpenmrsUtil.getApplicationDataDirectory", it uses the "OPENMRS_APPLICATION_DATA_DIRECTORY" system property and "application_data_directory" runtime property". That is as far as the code and javadoc comments are.
So could we be looking at different documentation? :)

@ivange94 can you squash the commits into one?

@ivange94 what do you mean by it does not work as expected?

When i click, Stop All, nothing happens, the page reloads but the modules are still running

Add another call for WebModuleUtil.stopModule() just as it is done in ModuleListController for stopping one module.

@ivange94 also ensure that you refresh the context only once for all modules instead of separately for each module. :)

@jdegraft did you just forget to copy over the unit tests from the allergies api module?

@rkorytkowski what do you think about this?

@dlahn are you still working on this?

@dkayiwa Yes.

I have not yet deeply looked into this. But i suspect that this could be hiding the actual cause of failure. :)
That being put aside, have you taken a look at? https://wiki.openmrs.org/display/docs/How+to+Modify+a+Bad+Changeset

Actually the changesets work fine. The problem is that the changes being implemented by the changesets have already occurred (not sure how or why since its a migration) so running the changesets fails. 

Do you already have a ticket for this pull request where this discussion can happen?
http://go.openmrs.org/pull-request-tips

Apologies was not sure of the process have created a ticket here https://issues.openmrs.org/browse/TRUNK-4774.

However I have only made the change on 1.11.x branch and not on master - do I still have to go ahead and move the change to the master branch which will mean deleting this PR? 

 @sravanthi17 the ticket description was updated, do you mind making sure your code addresses everything

@seekme94 the changes should be in the jsp or somewhere other than in the location editor because the convention of our editors is to accept numbers that are not formatted.

Interesting. But the stack trace doesn't say much on this. I'll dig into the JSP files now.

Could be some javascript also ... 

Nice catch @wluyima. Committed at https://github.com/openmrs/openmrs-core/commit/d1d193f2b4a7d8d628c94dc7abc57fde993ae8a0

Github wasn't able to display all the entire PR's diff, so i was unable to review all the changes

I noticed that too. Are you aware of any way of making it display more?

Closing because i created a new one with one commit at https://github.com/openmrs/openmrs-core/pull/1600

this pull request has commits that are not mine. i don't really know how they got there, so i will just close this one and create another

@wluyima I checked with @sravanthi17 and she said she has made all the required changes. Please could you review and give us your feedback? 

Thanks @lluismf :)

@dkayiwa I opened a PR to try and fix this, when I tried to change Patient.setIdentifiers and Form.formFields the api tests would fail so these were all the instances of setter functions taking in sets that I could find and fix that didn't break the api tests, could you take a look at them?

@wluyima .. Made the changes you suggested.. Please review it and give us your feedback 

I couldn't find your comments on the pull request to find the exact pieces of code where you added them, so i can't really respond to them

@wluyima .. Added comments .. please review the commit and let us know your feedback...
https://github.com/sravanthi17/openmrs-core/commit/8d527a25012a5832411088536d957b8a5b6e2e10
https://github.com/sravanthi17/openmrs-core/commit/43c5c43aed77fab1aefa7ddff3bc4992bff04bf3

@aj-jaswanth this has merge conflicts. You need to first pull the latest changes from upstream.

Currently I have this commit in a branch. Shall I merge this with master and then create a pull request from master?

Pull the latest changes from master into that branch.

On Wed, Oct 28, 2015 at 3:12 PM, Venkata Jaswanth notifications@github.com
wrote:

> Currently I have this commit in a branch. Shall I merge this with master
> and then create a pull request from master?
> 
> —
> Reply to this email directly or view it on GitHub
> https://github.com/openmrs/openmrs-core/pull/1605#issuecomment-151825885
> .

## 

If we keep uppermost in our minds the unkind and unjust acts of others, we
shall find it impossible to love them as Christ has loved us; but if our
thoughts dwell upon the wondrous love and pity of Christ for us, the same
spirit will flow out to others.

@dkayiwa Fixed merge conflict.

@lluismf looks like you need to pull the latest upstream changes to fix the merge conflicts in this pull request.

Done, it seems that DrugHandler was removed while I was doing changes. 

Something is wrong, I used a class DbUtil to close JDBC resources that apparently is not present in the CI jars. How can that be? It's a Maven dependency (databene-commons-0.4.9)

Merged

@lluismf did i just take long to see this until it got out of date? :)

@chenjr95 can you squash these commits into one? http://go.openmrs.org/pull-request-tips

I messed up with a new commit. I need to figure out how to fix it.

What is the use case for this method?

Without asynchronous search index update, it takes significant time to startup openmrs in development or in deployment if the system has a lot of concepts. 

Any long process is a potential candidate for asynchronous execution. But there is already a task executor available right? 

Yeah. But that will create a dependency on Spring. Moreover, MassIndexer has the async method. So, it would be good to provide a method, that uses MassIndexer's method behind the scenes.

Thanks SwathiVarkala

@aj-jaswanth, ok, let's add that, but please fix the javadoc.

@rkorytkowski Fixed the javadoc. But, I have two commits now. Should I squash them and force commit?

Peeking at the code, it seems good. This needs to also be forward-ported to the 1.12.x and master branches.

Thanks @chenjr95 :)

@chenjr95 can you squash the commits into one?

Closing because this was only for demonstration purposes.

Closing because of the above comments.

Closing because these pieces are now moved to the legacyui module.

Closing because these parts were moved to the legacyui module.

Closing because of merge conflicts.

@aj-jaswanth yes go ahead and squash them into one.

@dkayiwa  Squashed commits into one.

@chenjr95 can you squash the commits into one?

typo, there was suppose to be 'are' before the 'seeing' will correct it. Please address my comment on jira before i can do another push.

@ivange94 i have commented on the ticket.

@dkayiwa Well, I made few changes to the approach. Committed them now. As the final result (side effect) of the updateSearchIndexAsync method call is out of its scope, moreover, the method will be called as an API rather than, being called as a side effect on UI, therefore it is nice to leave the clean up to the callee. Most of the cases, there is no need to reset any global variables, because it is direct API call.

@dkayiwa Could you please back port the commit to 1.12 branch also? Thank you.

@aj-jaswanth i tried to automatically cherry-pick it into 1.12 but got merge conflicts. So do you mind just creating a pull request on the 1.12 branch?

@jdegraft my atlas module compiles fine without this change to the platform. So which other modules should i test with? And what are the steps?

@ivange94 did you see Wyclif's response at? https://github.com/openmrs/openmrs-core/commit/99e6f48ed332de05f2caf0a7654df19ee107ff02#commitcomment-14768438

@dkayiwa 
http://stackoverflow.com/questions/10013288/another-unnamed-cachemanager-already-exists-in-the-same-vm-ehcache-2-5

you only see this error when you upgrade spring and hibernate to the versions used in platform 2.0, because the spring/hibernate implementations have changed semantics allowing multiple unnamed caches.

I guess we have to wait for the discussions as to how to build modules for platform 2.0 in a backwards compatible manner.
If we are going for the same java vm 1.8, spring and hibernate versions then this change is needed for the tests to run.

Note, as far as my effort are concerned, java 1.6 and java 1.8 are build incompatible, and java 1.7 and java 1.8 are reflection incompatible. In other words, you can't build a module with java 1.6 against platform 2.0, and you can't build a module with java 1.7 with platform 2.0 and get reflection code to build.

@dkayiwa following what @wluyima said in that commit <a href="https://github.com/openmrs/openmrs-core/commit/99e6f48ed332de05f2caf0a7654df19ee107ff02#commitcomment-14768438" class="commit-link"><tt>99e6f48</tt>#commitcomment-14768438</a>, i have just ignored it since he said that is a jetty problem. However i tried testing to confirm what he said. I deployed the openmrs.war 
into tomcat and i was only getting plank pages (no output on the browser, not even errors like 404, i don't know if am doing something wrong). :-)

EDIT: i get blank page when trying running the webapp from eclipse on tomcat8.0.29. 
Instead when i deploy as i said above, i get connection was reset. 

@ivange94 i have merged this. Are you going to create the wiki page?

@dkayiwa I followed the instructions on here: https://wiki.openmrs.org/display/docs/Pull+Request+Tips to squash the commits and this was what resulted

Please squash these all into 1 commit.

LGTM. :+1:  Approved as part of [GCI 2015](https://codein.withgoogle.com/dashboard/task-instances/5527706158497792/)

Hi, edit your commit message to state what issues you are fixing. 

LGTM - Approved as part of [GCI 2015](https://codein.withgoogle.com/dashboard/task-instances/6487604572717056/)

@Breta01 do you mind fixing the formatting of your changes? Take a look at it from line 339 at https://github.com/Breta01/openmrs-core/blob/ba740fb39c145a04672395546e9d920ec30c6dd5/api/src/main/java/org/openmrs/util/OpenmrsUtil.java#L339

LGTM -- Approved as part of [GCI 2015](https://codein.withgoogle.com/dashboard/task-instances/5087982960771072/) 

I'm not a core committer either. @wluyima @dkayiwa can you take a look? 

am we directly merging GCI code into core this time round! or we shall have to wait until the contest is done as we did last time or even still wire the PRs to a separate branch!

@kaweesi i would vote for merging immediately once reviewed and found fine. This would save us from the pain of merge conflicts that usually happen when pull requests stay for long. In summary, the only reason why a pull request should stay open is when it is waiting for more changes or reviews. I hope others agree. :)

@dkayiwa Now it should be correct (by the way my editor somehow delete spaces from blank lines)

@Breta01 what changes did you make in OpenmrsUtil?
It shows 277 additions and 276 deletions.

![snimek obrazovky 30](https://cloud.githubusercontent.com/assets/10288864/11788330/b47a0ef8-a290-11e5-8a31-9a841ab3e152.png)
@dkayiwa I said that the code editor deleted all spaces from blank lines (it doesn't change the code) but I am not sure how reverse it...

@Breta01 just create a new pull request and ensure that you do not include this file when committing.

@dkayiwa I updated this pull request and hopefully now it is correct

@dkayiwa squashed

This is incorrect. DrugIngredient is already exposed as a property of Drug, so this is not needed.

(And if we were adding it anywhere it would be in ConceptService, alongside the getDrug methods, not in OrderService.)

@djazayeri Is this approach okay?

@chenjr95 i thought the todos are to remind us about getting these test created and hence should be removed only when this is done. If we change to shoulds, then we cannot easily tell the missing tests. Did i just get this wrong? :)

I would agree with Daniel :+1: 

@aj-jaswanth shouldn't this fix be applicable to 1.12 branch as well?

@angshu Yes. I am improving the code. Will raise a pull request on 1.12.x.

@dkayiwa What about now? It should be correct.

@djazayeri https://github.com/openmrs/openmrs-core/pull/1635 Raised another PR.

@Breta01 perfect! Thanks :)

@chenjr95 it would be good to use a commit message describing the changes instead of just "squashed commits into one"

@dkayiwa I first thought that, it is already OrderService so, save() would be sufficient. But, yeah saveOrder() is more consistent with other method names.

LGTM despite the CI failure -- it doesn't seem to be anything related to his code -- I can see no reason why this change would cause any tests to fail and should be merged :D 

@dkayiwa, @bmamlin  :grinning: 

It does:

isUserNameAsEmailValid_shouldReturnFalseIfEmailInvalid(org.openmrs.validator.UserValidatorTest)  Time elapsed: 0.007 sec  <<< FAILURE!
java.lang.AssertionError: null
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertFalse(Assert.java:64)
    at org.junit.Assert.assertFalse(Assert.java:74)
    at org.openmrs.validator.UserValidatorTest.isUserNameAsEmailValid_shouldReturnFalseIfEmailInvalid(UserValidatorTest.java:203)

The point of this was to make the email regex simpler, to later add email verification. This causes some checks to be valid. I'll refactor the tests.

@Breta01, in the future use topic branches -- because now any changes you make to this branch will be also made here. 

I was about to suggest one but it gets interesting to write a regexp, there's a saying that regex is almost never the answer(it introduces lil bugs that we never looked at before, I think e-mail confirmations are the answer here -- barring that maybe using Apache Commons, where they did the hard work for us!) -- n regex pattern to validate an email address...is insane -- consider that I own a `.ninja` domain name and some validators reject that TLD in email addresses!

I see lots of formatting changes. Do you mind separating the formatting from the rest of the actual changes?

@dkayiwa If I don't throw an exception there, I get the exception to commit to the database. The stack trace is here as posted earlier. https://issues.openmrs.org/browse/TRUNK-4469?focusedCommentId=223596&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-223596

@aj-jaswanth do you have a unit test to reproduce this?

@dkayiwa No. I wrote the unit test only for the ConceptValidator class.

It is throwing exception exactly here. https://github.com/openmrs/openmrs-core/blob/1.12.x/web/src/main/java/org/openmrs/web/controller/ConceptFormController.java#L391. It is invoking an advice to insert the data.

@dkayiwa It solves error message when you run command "mvn package" log: http://pastebin.com/sgcxDusc And I already tested my solution.

@Breta01 that does not look like the correct solution. Do you see any other line in that validator which is throwing an exception when validation fails?

:+1: <3 <3 <3 <3 Great work :100: :tada: (Can't merge -- jus like it)

@ChamaraPhilipsuom do you mind squashing the commits into one? :)
https://wiki.openmrs.org/display/docs/Pull+Request+Tips

@dkayiwa  I will squash the commits into one and send the PR again. @ChamaraPhilipsuom is the user of this laptop. Hence the commit name has came by his name. Shall I send the PR again or just commit here again?

@ThisuraThejith whatever you find convenient. As long as the pull request ends up with one commit. :)

@dkayiwa Closed this PR and sent https://github.com/openmrs/openmrs-core/pull/1643 Sorry for the inconvenience caused lad. :+1: 

@robbyoconnor Thank you very much lad. This PR is moved to #1643

:heart: 

In the future -- you don't need to close PRs -- if you push changes to a branch which has an open PR, changes will be reflected there... 

This error would have been caught if you all ran your code prior to making a PR -- **ALWAYS** test your code...

ok robby. Nice to learn these things. Will do next time. :+1: 

See above comments, for all cases where you are saying the collection is not empty, instead use `CollectionUtils.isNotEmpty()` 

Squash your commit together 

Also you need to edit 7 more files. 

LGTM. Approved as part of [GCI 2015](https://codein.withgoogle.com/dashboard/task-instances/5297562055606272/).

Hi Sir@robbyoconnor, these files are the only ones having this issue. I will work on another issue. and make another PR.

So find more issues and make PRs on those. If you need to find more issues to satisfy the requirement, so be it. 

Also you need to squash the commits on this PR into one commit. 

You messed up actually. 

When you open a PR, it shows you what commits will be included. In addition to this, PRs are being done against `gci-2015` -- **NOT** master. Close this, also close your other one. 

Sir, @robbyoconnor  These changes are coming from the update I made to my master. I am fixing it now.

Also this is against the wrong branch -- so close it and do it again in a feature branch against `gci-2015` like you were told. Follow directions please. 

Do this against `gci-2015` please.

Hello Sir @robbyoconnor , It cannot go against gci-2015, it seems that branch has not been updated. My master branch is up to date. If I make this PR the other commits will be appear.

That's how we're doing it. Do it against `gci-2015` -- that branch contains the work from GCI. Don't argue. 

Alright Sir, Let me do it.

The way we're doing it -- we will merge it later on after the program is over. 

Use feature branches next time -- we may not get to this right away

@dkayiwa 

Also @collinsgeek, did you run and test your code? 

@robbyoconnor, Yes Sir, it works perfectly. I made sure I tested the code before I made a PR.

Okay, I'm going to wait for someone else to review this -- on first glance it looks okay...but I don't work on this code 

Alright @robbyoconnor , I guess I will have to wait for the review before I move on to another task?

#1644 is required to make the build pass @dkayiwa 

@dkayiwa -- this needs to be merged -- the branch is currently broken

I'm going to approve your task **BUT** if any issues pop up that I missed -- fix them. 

Ok Sir, I will fix any issues @dkayiwa  may have here :-)

Approved as part of [GCI 2015](https://codein.withgoogle.com/dashboard/task-instances/6455408935829504/?sp-page=1)

Hi @robbyoconnor, @ch3ck 

Could you please review this?

@collinsgeek  I think you should do that on the codein site first.

@collinsgeek can you squash the commits into one?

Hello @rkorytkowski, Sir I will like to know if there are any further issues with the updated commit.

@UlissesFerreira  Squash all these commits into one commit; before we can proceed.

Do you want me to make a new pull request? those commits were dumb I must admit but I though there was no problem when merging...

@UlissesFerreira  Look at this: http://gitready.com/advanced/2009/02/10/squashing-commits-with-rebase.html. Squashing the commits into one makes it easier to review. I have not even looked at the PR yet. Just do as I've recommended so we can help you better :+1: 

Also make the PR against the gci-2015 branch.

Can you tell me where is the branch? It's just I'm on the Github site, not using command line, and I can't find it... And by the way, about squashing commits, when you check the "Files changed" isn't it the same as squashing the commits? Because in there all the changes are just represented as one, the final one

And forget the GCI branch, I found it!

Hi Sir @Ch3ck , I tried that but it doesn't work since localized.values() returns a collection of PresentationMessageMap() while allMessage.addAll() is expecting a collection of PresentationMessage. I tried making the former to work for over 3 hours and still no avail. This was the best solution in this case. At least I discard the keySet use case here.

Ok @collinsgeek  I see, but that's odd though since PresentationMessageMap implements PresentationMessage. It's supposed to return a PresentationMessage collection. Any ways good work with this.

@dkayiwa  @rkorytkowski  @robbyoconnor Any thoughts on this?

LGTM

I'm not familiar with the codebase

Please close this and do it against `gci-2015`

http://gitready.com/advanced/2009/02/10/squashing-commits-with-rebase.html

Please do `git commit --amend -m "some message here"`

Add a more descriptive commit message please.

@dkayiwa @rkorytkowski 

@dkayiwa  That was a mistake not using latest version. I have updated the PR. Is there any recommended way in OpenMRS for declaring the latest version. Like [1.1.1,). What is recommended?

Alright, any ways thanks for sticking with this @collinsgeek. But  If @dkayiwa  or @rkorytkowski  have any issues with this; you will have to fix it.

Hi Sir, @Ch3ck @dkayiwa 

I will make the changes and submit.

Ok Sir @dkayiwa, what should fix? Am I to revert the changes to compareTo and only leave the useless imports?

Nice work @collinsgeek  @dkayiwa I think you could merge this now. Let me go and approve this!

Is there a way you can make sonar happy without removing DefaultComparator?

Ok Sir. Let me try

Sir @dkayiwa,  Here is the updated commit, 
the Sonar issue with the method override for compareTo() and equals() methods; is a false postive. So I've reverted the changes in these methods.
See this: https://sonar.spring.io/issue/show/e433a566-4217-40b4-bb4b-cc49ab82a1f9?modal=true

Is there a way to suppress some sonar issues? 

Sir @robbyoconnor  I don't know

What's the problem implementing equals?

@chenjr95 ping.

@Vincentes are you still working on this?

@vishnuraom can you squash these commits into one? https://wiki.openmrs.org/display/docs/Pull+Request+Tips

@dkayiwa Yeah,just squashed them :)
Please review the PR

@dkayiwa Sorry for the formatting,Will modify it if required.

@dkayiwa Yeah,I ran mvn clean install and the build was successful

@vishnuraom yes please do. Running mvn clean install is supposed to automatically do the expected formatting.

@vishnuraom you need to run it before committing such that it does the correct formatting before you commit and push.

@dkayiwa I will add another PR with modifications soon :) 

@vishnuraom why not the same pull request?

@dkayiwa Ok,will modify the same PR.

@vishnuraom can you squash the commits into one?

Have you guys seen my comment on the ticket, how are you removing description, you can only blank it out and that works for me

I think you should have waited to merge this, i think all work going into 1.12.x needs to be merged at once into master. And the workflow is such that you don't have to create a pull request for forward and back ports, the dev who merges the original PR is responsible for cherry-picking the commit(s) and apply them to the necessary branches

The formatting does not look correct. Did you run mvn clean install before committing? Can you do so now? Then make a followup commit which will have formatting changes. Finally squash the commits into one.

sorry for the wrong format, i will modify it 

Can you please make sure you don't have the auto format changes? You probably want to setup the [OpeMRS formatter](https://wiki.openmrs.org/x/MxEz) if you haven't yet

@dkayiwa I guess this would be the solution? I really don't know what to do besides this.

@wluyima I am generating a user friendly error message
(1)when a user tries to clear the description(as you said) from an existing concept and save it and
(2)when a user tries to save a new concept with empty description.

@vishnuraom can you squash the commits into one?

Closing because it has lots of unnecessary formatting and merge conflicts

@dkayiwa Added the test copyModuleMessagesIntoWebapp_shouldNotPrefixMessagesWithModuleId. 

@dkayiwa Squashed the commits :)

You will also need to squash your commits into one.

@dkayiwa please look into this, i did the squashing 

@puevigreven did you run the web application to test this changeset?

@dkayiwa  yes. i Ran the web application. First i was started in maintenance mode and asked to confirm updates. After confirmation openmrs was not able to start. But then i restarted it. Then it worked properly.

@lluismf yes, that is not standard command but I found it suitable to use it here. Am i suppose to change it? Will it cause any problem?

@dkayiwa  i have not added uuid to the "View Visits" and "View Encounter Provider" in privilege table , i didn't know what to put there. please guide me to fix it. :)

This is not the right place to make this PR -- Please close this. Instead, this should be placed in its own repository, hosted by you. 

I agree with you @lluismf :)

Can you change the capitalization of the verifies text such that it is the same as in Rafal's original pull request?

@jdegraft are you still convinced that we need this? :)

Well, without it, any module which uses DirtiesContext will fail tests in OpenMRS 2.0. Howevre it is not the best fix.

We need a method called reloadDatabase() really which modules can call if they use DirtiesContext.
As it is, only modules which use DirtiesContext and call authenticate() will be ok.

So we need reloadDatabase() which we can call in authenticate() as a final solution.
Also we need a test, which attempts to authenticate as a way of knowing that the database has been cleared before reloadDatabase() is called as it is an expensive operation and slows down tests, eg testCanAuthenticate(), needDatabaseReload().

The code speaks for it self and can be validated logically.
Also this code is only for testing and does not affect core platform functionality so is quite a safe change.

However the changes for appframework RA-968 has to have a new approach based on Darius's comments.

@dkayiwa  have i got the indentation correct? 

@puevigreven the indention is correct! :)
I thought you would do a separate changeset for each privilege.

@dkayiwa while working with git , i deleted the old PR for this trunk by mistake. (Still learning git). 
what refining does this code wants? 
:)

@puevigreven can you do a separate changeset for each privilege?

@dkayiwa i made the separate changeset for each. :) 

@dkayiwa  changed the capitalization of the verifies text same as in the rafal's original pull request, could you please review this.

One last thing, can you put these changesets at the end of the file, as we usually do?

@vishnuraom this has merge conflicts. Can you pull the latest upstream changes and resolve the conflicts?

@dkayiwa one record. i.e. Get Encounter Provider. 
Since Get Visits is already in privilege table and it cannot be removed from the table. 

@dkayiwa Closing the PR as I have made another PR without any merge conflicts.

@ShekharReddy4 can you do a pull request that does not have formatting changes?

@dkayiwa the code which i have revised inserts only one record! 

I confirmed that this fixes my issue, thanks @dkayiwa 

@MNSOWMYA can you squash these commits into one?

@ivange94 within this pull request, can you change the deprecated methods to call the expected methods? For instance, replace "return dead" with "return getDead()"

@vishnuraom can you pull the latest upstream changes and look into the merge conflicts?

@aj-jaswanth can you pull the latest upstream changes and resolve the conflicts?

@dkayiwa  changed the formatting as per your comments on the previous commit.
The previous commit link:https://github.com/ShekharReddy4/openmrs-core/commit/fa79c284be8d07b3a2ab437edc508808cbffe436#commitcomment-15645614 

@dkayiwa i have addressed your comment and updated the pull request

Boolean.valueOf(false) will actually return Boolean.FALSE.

return preferred == null ? Boolean.valueOf(false) : Boolean.valueOf(preferred);

return preferred == null ? Boolean.FALSE : preferred;

comparing the two statements i thought, it would be more obvious that i am returning a boolean value preferred when preferred is not equal to null and false when it is equal to null. I was aiming for readability. I was actually avoiding using the constructor Boolean(preferred), that i saw in the code.  

The constructor is obviously bad. :)
preferred is already known to be a boolean.

is it ok now?

@dkayiwa Pulled the latest upstream changes and there are no merge conflicts

@dkayiwa  hi, https://issues.openmrs.org/browse/TRUNK-3844?focusedCommentId=193356&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-193356    in the above comment , it is mentioned that objects with same uuid are resulting in wrong behaviour of equals method. :)

@dkayiwa  Please let me know in detail about what is the isuue with the Uuids used in my PR. :)

Can you respond separately to each of my comments. Do you see the add a
line note button?

On Wed, Jan 27, 2016 at 12:32 AM, Shekhar Reddy notifications@github.com
wrote:

> @dkayiwa https://github.com/dkayiwa Please let me know in detail about
> what is the isuue with the Uuids used in my PR. :)
> 
> —
> Reply to this email directly or view it on GitHub
> https://github.com/openmrs/openmrs-core/pull/1655#issuecomment-175240711
> .

## 

If we keep uppermost in our minds the unkind and unjust acts of others, we
shall find it impossible to love them as Christ has loved us; but if our
thoughts dwell upon the wondrous love and pity of Christ for us, the same
spirit will flow out to others.

@ShekharReddy4 can you squash these commits into one?

@dkayiwa  squashed the commits :)

Closing this because its messed up.

@dkayiwa Test comment only - please ignore. thanks!

Can you check why the travis build is failing? See the link to the travis build above

Same here, i believe the issue is the same why the travis build is failing

@nehashri are you looking into these merge conflicts?

What was the reason behind the branch closing? Am I missing something? Let's patch this issue up asap since LUI-60 is done and all that remains is backporting it. :)

@dkayiwa  thank u for your patience and help..A good community around me :)) Sorry for all my faults.

@ShekharReddy4 i would not call them faults. Just call it learning process! :)
Thanks again for your great efforts and patience! :+1: 

Missing a unit test :-)

@djazayeri aah them famed unit tests :) Currently typing out this comment in bed. I'll have it ready by tomorrow hopefully :)

See my comments on the ticket about the 2 PRs?

@bholagabbar you don't need to close and create a new PR every time you make changes for the same ticket. You just commit and push to the original branch for the ticket you're working on and github will automatically update the PR. In theory, it's supposed be one PR per ticket/branch

@wluyima And of course rebase and squash your commits if necessary  (usually is)

@bholagabbar :point_up:

@jdegraft should't this be closed?

Umm ok there's been some misunderstanding. I didn't close the PR. It was Darius who did it I think. I am aware of the procedure of squashing commits and issuing 1 PR for a request. It's what I did for LUI-60 :)

@robbyoconnor, @wluyima, @djazayeri if you open up the PR, I'll continue pushing my commits here. Else, I'll create a new PR no issues. Asking since Wyclif said each issue should ideally have 1 PR

@bholagabbar Don't open up a new one...just push to the branch

Use the other PR @bholagabbar 

@bholagabbar push here. 

@robbyoconnor yeah I'll continue pushing commits for this issue here. You've mentioned 'use other PR' on my PR 1689. Do you mean I push commits for both issues (TRUNK 4817 and 4818) here or I issue a new PR for that one since that PR was closed off? Sorry for the confusion

@bholagabbar Well if it's the same issue, yes otherwise one PR per issue

Yup they're different. So I'll create a new PR with unit tests (that was why it was closed in the first place).

Thanks @robbyoconnor! Sorry for the confusion again. I'm sure you've got more important stuff than my comments and emails bothering you :)

@bholagabbar It's okay, OpenMRS is very welcoming <3

Oh you bet. First hand experience here: :D

@djazayeri I have tried to make the unit test as verbose as possible. Put in a line comment if you need some clarification/explanation from my side :)

@dkayiwa  the file changed doesn't have a Test class file in the core , So i did not write the test cases for the changes i have made. :)

Updated. Seems fine?

Looks great!

It seems that my base fork always turns out to be master. I redirect it to the correct branch and make the PR. After that, the travis build fails. I've got git issues I'm guessing. I'll clean up stuff and make a fresh PR

@wluyima : Error log says 'buffer overflow detected, Exiting. It fails on open-jdk-6 but passes on oracle-jdk-7. Check the link [here](https://travis-ci.org/openmrs/openmrs-core/jobs/105800629)

@ShekharReddy4 did you run mvn clean install before committing this? The formatting does not look correct.

@dkayiwa  Updated the PR as per your comments. :)

this includes several other commits, did you intensionally re-include these @MNSOWMYA ?

@kaweesi no no it was accidentally done i am sorry

@kaweesi i am really sorry for my mistake i apologise

@dkayiwa  updated as per your comments :)

You can use the same PR as long as it not yet closed or merged. You can reopen a closed PR if you still wish to use it

Great! Finally done. I'll try and reproduce this on 1.10.x and 1.9.x. I'm currently working on a sprint ticket so hope this can wait. Dropping the DB and setting it up again is a real pain :P

@dkayiwa Since it isn't a visible bug I have  written the required testcases(In the new file MessageSourceServiceImplTest.java ). :)

For some reason i can't find the design page for order sets and groups for reference, can you please share it here?

@wluyima @dkayiwa   Updated the PR as per the above comments.Renamed the Test class file and moved it to corresponding directory.  :)

@ivange94 did you run the platform and test this out to confirm that the module messages are seen? If yes, can you attach a screen shot on the ticket?

There is failing tests as reported by the travis build

This is the design page you asked for:
https://wiki.openmrs.org/pages/viewpage.action?pageId=34146504

Thanks!

On Wed, Feb 3, 2016 at 7:34 AM, ys-achinta notifications@github.com wrote:

> This is the design page you asked for:
> https://wiki.openmrs.org/pages/viewpage.action?pageId=34146504
> 
> —
> Reply to this email directly or view it on GitHub
> https://github.com/openmrs/openmrs-core/pull/1700#issuecomment-179199806
> .

## 

Wyclif Luyima
Regenstrief Institute Inc.

Confidentiality Notice: The contents of this message and any files
transmitted with it may contain confidential and/or privileged information
and are intended solely for the use of the named addressee(s).
Additionally, the information contained herein may have been disclosed to
you from medical records with confidentiality protected by federal and
state laws. Federal regulations and State laws prohibit you from making
further disclosure of such information without the specific written consent
of the person to whom the information pertains or as otherwise permitted by
such regulations. A general authorization for the release of medical or
other information is not sufficient for this purpose.

If you have received this message in error, please notify the sender by
return e-mail and delete the original message. Any retention, disclosure,
copying, distribution or use of this information by anyone other than the
intended recipient is strictly prohibited.

@wluyima Most of what we have followed is in the following design page. https://wiki.openmrs.org/pages/viewpage.action?pageId=34146504

@djazayeri  I have made the changes as per your comments on previous PR 

Closing this as i intend to create a new one with few more changes 

Closing because it was reimplemented differently

@dkayiwa  please review this :) 

@dkayiwa  this pr is for TRUNK-3422, as per your comment on talk.  
please look into this. :) 

@wluyima  please look into this. :) 

@mnsowmya can you put space between "as" and "(" ?

I have made the latest feedback changes and checked in. Can you please review and let me know if things are fine

There are too many privileges here.

E.g. the first one doesn't make conceptual sense

```
'Patient Overview - Get Concepts', 'Able to view the concept entries portlet on the patient overview tab'
```

@dkayiwa changed it  as per the comment

@djazayeri 
In the latest commit i have kept following privileges.
Please guide me to refine the list. 

---------ADDING------------
- Patient Overview - Get Encounters
- Patient Overview - Get Encounter Types
- Patient Overview - Get Locations
- Patient Overview - Get Observations
- Patient Overview - Get Patient Identifiers
- Patient Overview - Get Orders
- Patient Overview - Get Visits
- Patient Overview - Get Providers

@djazayeri  thank you for your concern. :) 

@lluismf  i got the motivation to solve the problem in this way from @wluyima's comment https://issues.openmrs.org/browse/TRUNK-4539 at 2016-01-13 22:22:00 GMT+0550 

I agree with Wyclif, but I still don't see why the validators use ValidateUtil.validateFieldLengths and we are providing a new method to do the same (apparently). 

I think pretty much most of the code looks great now, i think there is a few comments we are waiting for your response

@lluismf after going through the method ,  i managed to solve the problem using ValidateUtils.validateFieldLengths(). 
i have code ready for the same, please give me a nod to create a pr for that. 
Thank You :)

I have made the changes related to all the comments that were made. Only response to the comments are missing I will add them.

If things are good it is ok to get it merged to OpenMRS 1.12.x because we need this feature as a priority for our latest release

Wrong PR (250+ commits).

@lluismf @wluyima i have tried using `ValidateUtils.validateFieldLengths()` but we have certain test which fails. 
For example  `ConceptServiceTest.purgeConcept_shouldFailIfAnyOfTheConceptNamesOfTheConceptIsBeingUsedByAnObs` test fails.
I have investigated the problem, the problem is in ValidateUtils.validateFieldLengths()'s `Object value = errors.getFieldValue(field);
`
it gives an error when it take the parameter like `Obs.formNamespaceAndPath`
I guess that ValidateUtils.validateFieldLengths() was written to check fields which are taken as input from user. 
But since we are validating every item that is being saved to the DB through the service layer, we have to take extra care.
I propose the previous approach which i followed to solve this issue, here is the commit : https://github.com/puevigreven/openmrs-core/commit/b463f5f85e40ae59d0337344d6c690ac9409166b
I would also love to discuss this issue on wednesday's design call. 

Maybe it fails because formNamespaceAndPath has no setter/getter ?

2016-02-16 13:46 GMT+01:00 pralay notifications@github.com:

> @lluismf https://github.com/lluismf @wluyima
> https://github.com/wluyima i have tried using
> ValidateUtils.validateFieldLengths() but we have certain test which
> fails.
> For example
> ConceptServiceTest.purgeConcept_shouldFailIfAnyOfTheConceptNamesOfTheConceptIsBeingUsedByAnObs
> test fails.
> I have investigated the problem, the problem is in
> ValidateUtils.validateFieldLengths()'s Object value =
> errors.getFieldValue(field);
> 
> it gives an error when it take the parameter like Obs.formNamespaceAndPath
> I guess that ValidateUtils.validateFieldLengths() was written to check
> fields which are taken as input from user.
> But since we are validating every item that is being saved to the DB
> through the service layer, we have to take extra care.
> I propose the previous approach which i followed to solve this issue, here
> is the commit : puevigreven@b463f5f
> https://github.com/puevigreven/openmrs-core/commit/b463f5f85e40ae59d0337344d6c690ac9409166b
> I would also love to discuss this issue on wednesday's design call.
> 
> —
> Reply to this email directly or view it on GitHub
> https://github.com/openmrs/openmrs-core/pull/1709#issuecomment-184668109
> .

@lluismf yes i think the same, there are few other fields like this. 
 formNamespaceAndPath getter and setter won't be used in any place other than this. 

Then the problem lies in Obs, not in the test or the validation algorithm.
If it's a property it needs a getter and setter.

2016-02-16 17:56 GMT+01:00 pralay notifications@github.com:

> @lluismf https://github.com/lluismf yes i think the same, there are few
> other fields like this.
> formNamespaceAndPath getter and setter won't be used in any place other
> than this.
> 
> —
> Reply to this email directly or view it on GitHub
> https://github.com/openmrs/openmrs-core/pull/1709#issuecomment-184768396
> .

The reason you're having issues with Obs.formNamespaceAndPath is because it has no getters, you might want to update the code in ValidateUtil.validateFieldLengths to use reflection if no getter exists, i.e if it's throwing a specific exception catch it when it is thrown in case no getter exists and then default to reflection just for that field

I added 2 comments but it's almost done

And why not just add the getter for Obs.formNamespaceAndPath? Is there a
good reason to not have it?

2016-02-17 4:03 GMT+01:00 Wyclif Luyima notifications@github.com:

> The reason you're having issues with Obs.formNamespaceAndPath is because
> it has no getters, you might want to update the code in
> ValidateUtil.validateFieldLengths to use use reflection, i.e if it's
> throwing a sepcific exception catch it when it is thrown in case no getter
> exists, i then default to reflection just for that field
> 
> —
> Reply to this email directly or view it on GitHub
> https://github.com/openmrs/openmrs-core/pull/1709#issuecomment-184990966
> .

@wluyima I have made the changes, the ordering of orders in orderGroup is resolved. Can you check and update me. This requirement is urgent, so I would like to get done will all feedbacks, and it would be good to merge it.

From the an API consumer's point of view formNamespaceAndPath is meaningless that is why we don't expose property accessors for it, there is other methods on Obs that return meaningful values that use the field though. In any case this isn't the only domain object where we do this, we won't keep adding the accessors for all because even them there are reasons behind the decisions, that is why we need to solve this in a generic way for fields with no accessors

ok

2016-02-17 16:42 GMT+01:00 Wyclif Luyima notifications@github.com:

> From the an API consumer's point of view formNamespaceAndPath is
> meaningless that is why we don't expose property accessors for it, there is
> other methods on Obs that return meaningful values that use the field
> though. In any case this isn't only the only domain object where we do
> this, we won't keep adding the accessors for all because even them there
> are reasons behind the decisions, that is why we need to solve this in a
> generic way for fields with no accessors
> 
> —
> Reply to this email directly or view it on GitHub
> https://github.com/openmrs/openmrs-core/pull/1709#issuecomment-185261963
> .

We had a discussion about this on the Wednesday design call and below are the suggested changes:

1- Rename Order.sequenceNumber to sortWeight just like it is in OrderSetMember

2- sortWeight fields should be of type double instead of integer.

3- Order should not implement Comparable but instead, the comparator should be in a separate class and use an instance of it in OrderGroup.getOrders() and OrderSet.setOrderSetMembers(), probably OrderGroup.orders should be sorted by sortWeight too in the hibernate mapping file.

4- OrderSet.setMembers should also be a SortedSet, OrderSet.setOrderSetMembers should return members sorted by sortWeight, the way the current code is, in the hibernate mapping file you order the members by sortWeight but in memory the ordering gets messed up if you add a new member to the set since it's not a SortedSet.

We're really sorry that this is getting dragged, we do realize that we seem to be going in circles for some of the things based on previous design calls and the one we had on Wednesday, if you guys want to chat about these changes let us know and we will be available to do so, we know you wish to get this incorporated as soon possible, we just don't want to shoot ourselves in the foot by not getting it designed well.

I am very sorry if I am trying to push you guys for getting this merged, but this is  a priority for us.

All I was saying is if we could get all the feedbacks quickly it would have been better, so I could have made the relevant changes in a single shot, and the work would have progressed quickly.

As a part of point 1. of your latest comment you are saying me to rename Order.sequenceNumber to sortWeight as in OrderSetMeber. But just a few hours before you had added a comment to change the sortWeight field in OrderSetMember to sequenceNumber.

What exactly should I be doing.

@ys-achinta, we feel bad for running you in circles. In last week's Monday design call, we had noticed that OrderGroup.sortWeight was an integer. I was suggesting sortWeight needed to be a double to follow our [existing conventions](http://resources.openmrs.org/datamodel/openmrs-data-model-1.11.html#.sort_weight) for sequencing. That conversation ended with the suggestion to use a different name (sequenceNumber) if we're using an integer. Wyclif was going through the pull request with me today and we noted the same problem exists in OrderSet as well (i.e., orderSet.sortWeight is an integer instead of a double). I brought it up with Darius on today's design call to try to get this cleared up asap for you all. Darius agreed that we were better off sticking with the conventions of sortWeight as double, since:
1. The goal is to have reliable sequencing of order set members and order group members.
2. The mechanism for sorting should be business inside the API and not a concern for clients of the API – i.e., clients should get orders in a reliable sequence, but should be working with ordered lists and not worrying about the API's sort weight.
3. While we should be ensuring the sequence of members is reliable (if you define an order set as A, B, then C, it should remain in this order; when you order A, B, C as a group, we should be able to reproduce the group members in that same sequence), we shouldn't be making any guarantees of an index (sequence) number, since the numbering can change or be complex. For example, one of the orders in a group might be discontinued, future decision support rules might inject additional orders into an order set during the ordering process, and order set (and order group) can be nested.

So, we apologize for the confusion, but we want to go with the original design: sortWeight as a double used to ensure members of order set & order groups can be returned as reliably ordered lists (e.g., Hibernate can use this field as an index field). This means, as @wluyima listed above, retracting the renaming of sortWeight &rarr; sequenceNumber and instead changing sortWeight from integer to double in both OrderSet and OrderGroup members. The idea is that clients of the API should not be concerned with these sort values; rather, just working with ordered lists of members and leave the sort weight assignments to the API (or Hibernate). If you guys have a reason that you must have an integer sequence (index) number (i.e., you can't infer these from an ordered list), then we'll need to talk again to clarify.

So my understanding is that.

We create an orderset, with some order set members.
The client sets this choice of sort-weight for each of the members.

The API takes care of grouping the members according to their sort-weight and saves the orderset

When the orderGroup is created for this orderSet, the API takes care of assigning the sort-weight of orders, Groups the orders according to the sort-weight and saves them.

Also when the returning the saved orders to the client the are grouped by the API according to the sort-weight.

Can you validate if my understanding is correct?

> The client sets this choice of sort-weight for each of the members.

The client should be working with an ordered list and leave the sort weight for the API to manage.

> The API takes care of grouping the members according to their sort-weight and saves the orderset

Sort weight is used by the API to guarantee the ordered list of members in an order set or order group are reliably returned in the same order. If the client changes the order of entries in the list, then the API should be updating the sort weight accordingly.

> Also when the returning the saved orders to the client the are grouped by the API according to the sort-weight.

Sort weight is _not_ used to form groups. Sort weight is used (by the API) to persist the sequence of members of an order set or order group. Sort weight only has meaning within the specific group (i.e., the sort weight on an order is only relevant within its order group and the sort weight on an order set member is only relevant within its parent order set; comparing sort weights of orders in different groups or order set members in different order sets is as meaningless as comparing the index of entries in different arrays).

> Can you validate if my understanding is correct?

From you comments, I don't think we had communicated the design well enough. Hopefully, my comments above will help. Basically, both OrderSet and OrderGroup have members in an **ordered list**. In both cases, sort weight is the mechanism used _internally_ by the API to persist the sequence of the ordered list. Ideally, control of sort weight values is left to the API and generally ignored by clients. We prefer a double so we leave open the possibility of inserting members in the middle of a list with a single insert into the database.

Thanks,  
This clarifies things.

Right now, the design is in this fashion:

We are allowing a choice to user/doctor to set a sequence number for each orderSetMember.
And then we are grouping these orderSetMembers based on this sequence number given by the user.
This parameter we used to call OrderSetMemberSequenceNumber for each OrderSetMeber which is 
right now named as sortWeight.

Then, when the actual ordering takes place, orders are also arranged in the same manner as the orderSetMembers. While arranging these orders we use the OrderSetMemberSequenceNumber to 
arrange them. We have a similar field in orders called a sequenceNumber which will copy the value from the OrderSetMemberSequenceNumber, for that order.

What I understood from your reply, is that we do not need this parameter of OrderSetMemberSequenceNumber to be set by the client for each orderSetMember. They should just send OrderSetMembers in the order in which they want them to be. And then to maintain them in that consistency, we have a sort weight which is internal to the API, who does that job. That both for the setMembers and the real orders.

I think there was a difference in the understanding of the usage of sort_weight. We used the sort_weight something like a sequence_number that has to be set by the client. But you expected sort_weight to be something internal to the API.

Can you validate if I got this correct. 

If yes, then I will change the existing design. 
Just sending and ordered list from the client makes more sense.

Thanks for clarifying.

I think OrderSetMember still needs to have sortWeight (what you're callings sequenceNumber) and that can be set by the user still, the sortWeights for the OrderSetMembers are used by the API as the sortWeight for the orders in the OrderGroup created from the OrderSet when saving the orders.

What do you guys mean by the sortWeight of the OrderSetMembers determines the order in which the order set members get saved? Since hibernate automatically cascades the save operation to a child collection when the parent is saved, does it save them in the order in which they are ordered in the collection? I think the order in which they get saved to the DB doesn't matter, what matters is the order in which they get returned.

Burke in your comments i think you sometimes say OrderSet when you actually mean Order when referencing sequenceNumber/sortWeight. Order and OrderSetMember are the ones with the sortWeight field and not OrderSet. 

**1.) What do you guys mean by the sortWeight of the OrderSetMembers determines the order in which the order set members get saved?** 

_Ans:_
Yes I actually communicated it wrongly. 
It is exactly as you said.
I meant the arrangement in which the setMembers get returned is determined by this sort weight, as you rightly said. 

**2.)The sortWeights for the OrderSetMembers are used by the API as the sortWeight for the orders in the OrderGroup created from the OrderSet when saving the orders.**

Isn't this already happening right now.

What Burke meant as I understood was not to sent any sortWeight for the setMembers, but to send them as an orderedList and then API internally sets the sortWeight for them.

This is what Burke replied.
_**In both cases, sort weight is the mechanism used internally by the API to persist the sequence of the ordered list. Ideally, control of sort weight values is left to the API and generally ignored by clients**_

Can you clarify. I find what you are saying and what Burke is expecting a bit different.

Thanks

@wluyima @lluismf please look at the new commit.I tried to address all your comments. Please look into this. 

> What I understood from your reply, is that we do not need this parameter of OrderSetMemberSequenceNumber to be set by the client for each orderSetMember. They should just send OrderSetMembers in the order in which they want them to be. And then to maintain them in that consistency, we have a sort weight which is internal to the API, who does that job. That both for the setMembers and the real orders.
> 
> I think there was a difference in the understanding of the usage of sort_weight. We used the sort_weight something like a sequence_number that has to be set by the client. But you expected sort_weight to be something internal to the API.
> 
> Can you validate if I got this correct.

Yes! This is correct.

This is what I'm getting from what you're both saying, we drop the sortWeight field from OrderSetMember. Then OrderSet.orderSetMembers gets changed to a list instead of a Set, when the order group created from the set is saved, the API calculates and assigns the sortWeights of the group members based on the order of the members of the OrderSet it was created from. And we're assuming we can tell hibernate to save the order set members to the DB in the same order as they were in the list and will always return them in the same order

The field sortWeight for the orderSetMembers can still be there.
Only thing is that this field is handled internally.
The client just sends a list of setMembers in some arrangement. 
Depending on that arrangement this field for sortWeight is set and then saved.

The sortWeights for the actual orders can be taken from this field in orderSetMembers

I see, does this mean we won't expose a public setter for OrderSetMember.sortWeight?

> I see, does this mean we won't expose a public setter for OrderSetMember.sortWeight?

That would help communicate that it's not the client's business to manage this. In fact, it might be worth doing the same for both getter & setter for OrderSetMember.sortWeight and Order.sortWeight – i.e., give clients an ordered `List` (from `OrderSet.getMembers()` and `OrderGroup.getMembers()`) and let them manage sort order by moving thing around within the list. It's simpler for clients and allows the API to follow our conventions of using a `sort_weight (double)` under the hood to manage sort order.

@ys-achinta does that make sense? It means OrderSet.orderSetMembers and OrderGroup.orders should be Lists instead, @djazayeri do you agree too?

I don't know if it is really possible to hide the public setters for Order.sortWeight, so I wouldn't focus on this.

Taking a step back:
1. if we are saying that **OrderSet.members is a List** (and not a Set), then I think we should model this in the database with an integer sequence_number, and use Hibernate's mechanism to automatically do this with list-index. (And thus we wouldn't have to calculate sort-weight, but we'd just let hibernate assign it upon writing to the DB.)
2. Orders are different, because (a) they _may_ be in a group, but they may also be outside of a group (or a grouped order can be viewed in some other context, where the in-group ordering isn't relevant), and (b) they are immutable, so we shouldn't be modifying their sortWeight if we need to insert another element in the middle of a list in some scenario.
   - so Order should have a double sort_weight column (possibly even called sort_weight_in_group)
   - Any API (Java or REST) that lets you create a group of orders in one call, by passing in a List should automatically calculate and set the sort weights of all members.
   - If any API allows you to save a single new order, but add it to an existing group, it needs to allow you to specify where this new order sorts relative to the rest of the group. (I would suggest a public setter for  Order.sortWeight, but if the caller leaves this blank the API sets it to 1 + the sort weight of the last existing group member.)
   - If any API allows you to do something like `getOrderGroup(); group.addOrderAtIndex(o, 3); saveOrderGroup();` then this should automatically calculate a sort weight for that one new item without reordering the rest of the items. 

I don't know how much of this is exactly relevant, because I haven't looked at the current code as closely as Wyclif.

@djazayeri are you saying that if one adds a new order to an order group the API shouldn't reassign the sortWeight since Orders are immutable? This actually justifies more why we shouldn't make have Order.sortWeight public

@wluyima if I am allowed to do this as an API consumer, I need to be able to assign the sort weight myself:

```
Order o = new Order()
o.setSortWeight(0.5)
o.setOrderGroup(existingGroup);
// set more properties
service.saveOrder(o);
```

And I presume that will be supported. Even if I'm only allowed to do this:

```
Order o = new Order()
// set more properties
existingOrderGroup.addOrderAtIndex(order, 3);
service.saveOrderGroup(existingOrderGroup);
```

...then the OrderGroup class still needs to be able to set o.sortWeight.

Not having a public setter for sort weight will make some part of the openmrs-core code uglier, and it only provides marginal benefit (if any), so I don't think we should waste time on it.

@wluyima please look into this commit https://github.com/puevigreven/openmrs-core/commit/ba56e375f52d60497e3793d497c625db68028871 , i have refined my previous approach and didn't use ValidateUtil
Please look into this. Thank You for your comments. I am learning a lot from this. :)

closing because of some error.

@wluyima Test cases included :)

> Not having a public setter for sort weight will make some part of the openmrs-core code uglier, and it only provides marginal benefit (if any), so I don't think we should waste time on it.

I understand we shouldn't waste time on it, but all we're talking about is removing the word "public" in front of the methods.

_This_ is ugly and we should discourage clients from doing it:

``` java
Order o = orderService.getOrder(...);
o.setSortWeight(0.5);
o.setOrderGroup(existingGroup);
// set more properties
service.saveOrder(o);
```

@djazayeri, you said this yourself "we shouldn't be modifying their sortWeight if we need to insert another element in the middle of a list in some scenario." That is business logic that the API should be following and we shouldn't expect clients to know and implement the API's business logic.

Clients can use:

``` java
existingOrderGroup.addOrderAtIndex(order, 3);
```

while `org.openmrs.OrderGroup` and `org.openmrs.OrderSet` get & set order weights on `org.openmrsOrder` and `org.openmrs.OrderSetMember`, respectively, without any ugly code through protected methods.

I understand it this way.

When doctor tries to create an OrderSet. Let us say an OrderSet for a chronic disease, like Cancer.
Then he will add OrderSetMembers which are relevant for the Cancer OrderSet.

Let us assume he added some five OrderSetMembers [A,B,C,D,E] to this Cancer OrderSet. And he arranged the OrderSetMembers in this fashion [A,B,C,D,E].

The API saves this OrderSet and assigns a sortWeight for each of the members so that, the doctor's choice of order is maintained.

Now when the actual ordering takes place, He selects this Cancer OrderSet for ordering but selects members [A,C,D]. These members get converted to an OrderGroup, while themselves being actual orders.

So here there is one point to note: 

**The existence of an OrderGroup is dependant on the existence of the OrderSet
Beacuse the drugs are grouped together based on a clinical decision of the doctor. In this case Cancer treatment.**

So this point what is there in the previous comments

_Order o = orderService.getOrder(...);
o.setSortWeight(0.5);
o.setOrderGroup(existingGroup);
// set more properties
service.saveOrder(o);
 if we need to insert another element in the middle of a list in some scenario__

This doesn't make much sense. It should not be allowed. You cannot just add any other random Order to the OrderGroup. Lets us say we can't add X to [A,C,D]. Because that would violate the clinical decision of the doctor. X is not relevant to Cancer treatment.
So we will make the API restrict this action.

But yet adding B or E to the OrderGroup is allowed because they are relevant to the Cancer OrderSet.

So basically if X is added to [A,C,D] the API should stop that action.
But adding of B and E can be allowed.

Now the second case of sortWeight. 
If the doctor adds a sortWeight to B and E which are Orders now. Ideally he should not add the sortWeights on Orders. Because he has already done that while arranging them and putting in the OrderSet. But if he does (we thought let the API provide that flexibility)
Then we preferred to override this sortWeight by the sortWeight which is present in the OrderSetMembers B and E.

If the doctor really wants to edit the arrangement the he has to change that in the OrderSet itself, not in the stage of ordering them.

@bharatak Can you add on your thoughts too.

Oops! I was supposed to cancel my previous comment but instead closed, I've reopened it anyways

My understanding is that the way we want things to work in the OpenMRS API for the long run is that OrderSet _generally_ defines what is allowed/expected in an OrderSet, but that this is not _strict_. E.g. as a client of the API I _should_ be allowed to create an OrderGroup that has A, B, C, and X in it. (Or even to to create an OrderGroup that is not backed by any OrderSet.) I also think that if the client code wants to it should be allowed to create an OrderGroup whose members are in a different order than that implied by the OrderSet. @bmamlin needs to answer whether this is actually the long-term vision, or if I have misunderstood.

About the specific issue of whether sortWeight is public or not, I'm saying that this can be a decision made by the devs working on it based on their needs writing the code (with a weak preference for not having it public). For example if we support adding a single order to the middle of an existing OrderGroup via a REST call like this:

```
POST .../order { "orderGroup": "existing-uuid", "sortWeight": 2.5, /* and other fields */ }
```

...then I presume this setter needs to be public, from a code standpoint. If things can be done with a package-private setter, that's fine, but I don't think we should spend time writing more complicated (REST or Java) API code to hide this setter.

I think the discussion to make the sortWeight public or private came from the thought that, orders present in the orderGroup are immutable. 
That means X cannot be added on top of (A,B,C) because that would change their initial arrangement.

But @djazayeri as you say if we allow the API to modify the arrangement of the orders in an orderGroup
then I do not see much value in hiding the sortWeight.

To be clear, when I say that orders are immutable, I mean that you should not change an existing order's sortWeight, but it _is_ okay to add a new order whose sortWeight puts it between two existing orders. So going from (A,B,C) to (A,B,X,C) does not imply that you have changed A, B, or C. 

One of the benefits of having a double sortWeight instead of an integer sequenceNumber is that you can insert something between two existing elements in the set by doing `sortWeight = (a.sortWeight + b.sortWeight)/2`. (That's why I am using values like `2.5` in my example code snippets.)

@djazayeri 

Cuurently as part of the domain model design. We save an OrderSet inside an OrderGroup.

<img width="458" alt="screen shot 2016-02-19 at 10 22 59 pm" src="https://cloud.githubusercontent.com/assets/10450478/13182326/2e9a5f58-d757-11e5-9f23-ebe1a6049c95.png">

If you are suggesting this to be a possibility

**as a client of the API I should be allowed to create
(Or even to to create an OrderGroup that is not backed by any OrderSet.)**

Then I think this OrderSet parameter can be even empty sometimes.

But I thought a part of the domain discussion this parameter was discussed to be made not-nullable. 

> @ys-achinta: "The existence of an OrderGroup is dependant on the existence of the OrderSet"

Order sets are one way in which orders may be grouped, but not the only way. Other examples for order grouping outside of order sets:
- When a provider orders drug A, a decision support rule suggests drug B and test C be ordered as well and, if approved, orders B & C as a group.
- A mobile application provides easy one-button for common groups of orders (drugs/tests/referrals/etc.) and records these as a group.
- A module is designed to automatically add orders for drug X and test Y whenever a trigger condition is met and orders these in a group for auditing purposes.

We currently allow an order group to be optionally linked to an order set to indicate that it was generated from the order set, but there may be other sources for grouping such as these examples. In fact, in the future, we may want to provide optionally linking to other potential sources for a grouping (e.g., link an order group to a decision support rule that generated the group).

> @ys-achinta: "So basically if X is added to [A,C,D] the API should stop that action. But adding of B and E can be allowed."

In the common use case, order groups would be immutable once stored in an encounter. The exception would be a system that allowed retrospective editing of encounters (changing the past).

> @djazayeri: "if we support adding a single order to the middle of an existing OrderGroup"

I would prefer that clients see order set members and order group members as lists. Having clients manipulate a property (especially a property the API is using under the hood to apply its business rules) to manage sorting within a list seems more complicated & more problematic, IMHO. If we want to support insertion into a list (makes much more sense for `OrderSet` than an immutable `OrderGroup`), then I would much rather see something like [this example](http://stackoverflow.com/a/9851230):

```
# Insert order set member into position 3rd position
POST .../orderset/{uuid}/3 { /* clean order set member without parent uuid or sort weight  */ }
```

> But I thought a part of the domain discussion this parameter was discussed to be made not-nullable.
> ...
> Order sets are one way in which orders may be grouped, but not the only way.

The implication here is that order_group.order_set should be nullable. (That said, if time is critical now, I think we could live with the initial implementation having it be not-null, and relax this constraint in the next release.)

@ys-achinta seems like we are both online now, if you want to talk (and I can try to find burke also, but don't know if he's available)

Current Design action:

OrderSet --> OrderSetMembers

OrderSetMembers can have a Concept. 

While saving an OrderSet, we do a validation that the OrderSetMembers should have unique concepts.

The client has the flexibilty to send/not-send the sortWeight for each OrderSetMember.

If he sends the sortWeight for all the OrderSetMembers then we maintain that sortWeight.

If he doesn't set sortWeight for any of the OrderSetMembers / partially sets the sortWeight for some OrderSetMembers,
Then the API takes all those OrderSetMember and assigns it's own logic and sets the sortWeight for each, overriding the client's given value.

The OrderSetMembers in the OrderSet are a Set<OrderSetMembers>  

The API has the flexibilty to edit the OrderSet.

When the API returns the OrderSet.getOrderSetMembers(), the members are returned in a sorted manner which is decided by their individual sortWeights.

While Saving The Orders:

On saving of the orders we see that whether an order has an OrderGroup associated with it.

If it has an OrderGroup, we set the encounter for that OrderGroup, the OrderSet for that OrderGroup.
Here we check that the encounter in the order should match with that of the orderGroup.

If order.concept = orderGroup.orderSet.orderSetMember.concept
Then we copy the sortWeight from the orderSetMember and set it for the order.
order.sortWeight = orderGroup.orderSet.orderSetMember.sortWeight

The updated orderGroup is added to the order and then it is saved.

orderGroup.getOrders groups orders based on sortWeight and send back.

Currently there is no restriction from the side of the API for order.setOrderGroup, order.setSortWeight

@djazayeri @bmamlin 

Is this the expected design?

> While saving an OrderSet, we do a validation that the OrderSetMembers should have unique concepts.

I don't know if this is right, but don't worry about it, as we could always relax this in a later release.

> If he doesn't set sortWeight for any of the OrderSetMembers / partially sets the sortWeight for some OrderSetMembers,
> Then the API takes all those OrderSetMember and assigns it's own logic and sets the sortWeight for each, overriding the client's given value.

My expected behavior is that the API computes the sort weight for members where the client did not specify it (and only for those). I.e. if I specify the sort weight for 3 of 4, then the API should only compute a sort weight for the 4th. (However this is a corner case that I don't really care about.)

> The OrderSetMembers in the OrderSet are a Set

(My personal opinion is that they should be a List, but I'm not asking you to change this.) Can it be a SortedSet?

> If order.concept = orderGroup.orderSet.orderSetMember.concept
> Then we copy the sortWeight from the orderSetMember and set it for the order.
> order.sortWeight = orderGroup.orderSet.orderSetMember.sortWeight

I was presuming that the (REST?) API call gives you an OrderGroup or list of orders that implies a particular sort order of the members, so you would set the sortWeights to be 1.0, 2.0, 3.0, etc, based on the order the client passed in. (And it would be up to the client to maintain the suggested ordering from the OrderSet if they want to.)

That said, I think we could probably live with your implementation as in the initial implementation.

However you should _not_ write any Bahmni code that expects "order.sortWeight == orderSet.orderSetMember.sortWeight" to be a meaningful and reliable comparison.

> The updated orderGroup is added to the order and then it is saved.

My preference is for the code that a bunch of the code you've described lives in the OrderGroup class rather than the Order class. But that's not a priority right now.

> While saving an OrderSet, we do a validation that the OrderSetMembers should have unique concepts.

This will not be true in all cases. We plan to eventually allow order set members to be filtered based on criteria. A test or drug may be ordered one way for women and another way for men or might be ordered differently based on the age of the patient. An order set author could enter the same concept multiple times with varying instructions and mutually exclusive criteria.

> The OrderSetMembers in the OrderSet are a Set

If we're not returning OrderSet and OrderGroup members as a `List`, then they should at least be an `OrderedSet`, right? We are saying that the sort order of members should be meaningful & reliable, so that API should say this as well. To this end, we should include methods on `OrderSet` and `OrderGroup` that allow clients to affect ordering (e.g., insert members at a position) in a way that doesn't depend on manipulating the API's internal data.

> If he sends the sortWeight for all the OrderSetMembers then we maintain that sortWeight.

The API should make no guarantee of preserving sort weight values. Sort weight belongs to the API and it is a mistake (IMHO) to expose this business to clients of the API. If we are exposing sort weight, then the Javadoc should make this clear (client can set the values, but the API may change them as needed to meet its business rules). Any client code that manipulates sort weights and expects them to be unchanged by the API may fail and its authors shouldn't be surprised when it fails (because our Javadocs warned them).

> If it has an OrderGroup, we set the encounter for that OrderGroup, the OrderSet for that OrderGroup.

Ideally, we'd have a method to create an order group from an order set.
-  It would automatically keep the information that the group came from the order set. Otherwise, the client must set the order group's order set (the API cannot infer it).
- The resulting order group would inherit the sort order from the order set automatically by this method. Otherwise, the client is responsible for creating the group with the same sort order of members.

> Here we check that the encounter in the order should match with that of the orderGroup.

Correct. Order groups should not be allowed to span encounters.

> If order.concept = orderGroup.orderSet.orderSetMember.concept
> Then we copy the sortWeight from the orderSetMember and set it for the order.
> order.sortWeight = orderGroup.orderSet.orderSetMember.sortWeight

I'm not sure this logic will work, since order set definitions may have duplicated concepts (as mentioned above) and we can have nested sets.

After an internal discussion:
We came up with this solution;

We are going with @bmamlin , @wluyima  initial idea of not letting the clinet handle the
sortWeight at all.

The client just sends an list in the arrangement in which he wants the orderSetMebers / orders.

The API internally handles them, by setting a sortWeight for these.

When the client gets back, we will internally sort it by the sortWeight and give him a SortedSet 

In case the client wants to modify the arrangement, he just moves things around within a list.
The API internally handles this by updating the sortWeights.

Giving client the flexibility of adding a sortWeight, adds a lot of complex scenario's. Whereas in actual sense he just needs to arrange the lists in a way he wants it.

 @bharatak @rnjn @vikashgupta2000 @preethi29
Can you validate your thoughts as well.

I agree about OrderSet members, but I'm not sure about Orders in groups
(since the sort weights of orders shouldn't be reshuffled, as orders are
immutable).

Doesn't the Java API allow you to create a new order, set an existing
OrderGroup on it, and call UserService.saveOrder on the one new order?

What will happen with sort weight in that case? (I would assume the caller
should be able to set it manually, e.g. if they want to add a new order in
the middle of an order group.)

I don't think this is a very _important_ use case, but it exists in the API
so we should ensure it behaves correctly.

-Darius (by phone)
On Feb 23, 2016 3:57 AM, "ys-achinta" notifications@github.com wrote:

> After an internal discussion:
> We came up with this solution;
> 
> We are going with @bmamlin https://github.com/bmamlin , @wluyima
> https://github.com/wluyima initial idea of not letting the clinet
> handle the
> sortWeight at all.
> 
> The client just sends an list in the arrangement in which he wants the
> orderSetMebers / orders.
> 
> The API internally handles them, by setting a sortWeight for these.
> 
> In case the client wants to modify the arrangement, he just moves things
> around within a list.
> The API internally handles this by updating the sortWeights.
> 
> Giving client the flexibility of adding a sortWeight, adds a lot of
> complex scenario's. Whereas in actual sense he just needs to arrange the
> lists in a way he wants it.
> 
> @bharatak https://github.com/bharatak @rnjn https://github.com/rnjn
> @vikashgupta2000 https://github.com/vikashgupta2000 @preethi29
> https://github.com/preethi29
> Can you validate your thoughts as well.
> 
> —
> Reply to this email directly or view it on GitHub
> https://github.com/openmrs/openmrs-core/pull/1700#issuecomment-187606864
> .

1.) The idea that you had initially to use List instead of a Set for OrderSetMembers seems a 
better option now.
We tried with SortedSet, but there are complexities:
 a.) If we allow the client to set sortWeight then there are multiple scenarios
 b.) If we do not allow the client to set sortWeight then we have to use a separate method to return
      the orderSetMembers back to the client. (OrderSet.getSortedSetMembers)

So the idea of a List seems a cleaner option.

2.) Now about the orderGroups.
     We are going with burke's idea of immutable OrderGroup as well

```
 i.e  G1 = [A, B]
 If I add C to G1, then it will create
     G2 = [A, B, C] / [A, C, B]
 Since the orders A, B now cannot be updated, in this scenario they will be revised to have newer sortWeights.
```

The API will handle all this.

So, even for orders inside an orderGroup we will be using List instead of SortedSet.

@djazayeri when the API consumer revises an order that belongs to an order group, i would assume they just need to position the order in the correct position in the list without setting the sortWeight and the API will take care of setting the sortWeight for the revision and keeping the weights of the existing orders in the group. I still believe the API shouldn't reassign the sortWeight because orders are immutable 

@ys-achinta in your example of A,B and the user attempts to add C in the middle of A and B, the API shouldn't update the sortWeights for A and B because orders are immutable, instead the API would calculate the weight of C based on that of A and B so that it gets in the middle, one way to do it would be to assign C the sortWeight value that would be the median which is technically the average of the sortWeights of A and B, which is why @djazayeri wants it to be a double and not Integer because of such calculations

@wluyima I understand that 
[A, B] A=1.0, B=2.0. (Initially it is like this)

[A, C, B]  A=1.0, C=1.5, B=2.0 (On adding C to it, it becomes like this)

What I am saying is that [A, B] = G1 (part of one orderGroup)
When we add C then [A, C, B] = G2 (they become a different OrderGroup). 

So basically I am saying we are not editing an OrderGroup, they are immutable also just like the Orders are. Even when you just revise and existing order {A/B} of G1, still a new OrderGroup will be created with the revised Orders. This is what @bmamlin was suggesting.

And I think it is having a better use case to handle it this way.

Are you saying that adding an order to an existing group would actually
require revising all the orders in the group to put them on a new group?
(That doesn't sound better to me.)

-Darius (by phone)
On Feb 24, 2016 3:19 AM, "ys-achinta" notifications@github.com wrote:

> @wluyima https://github.com/wluyima I understand that
> [A, B] A=1.0, B=2.0. (Initially it is like this)
> 
> [A, C, B] A=1.0, C=1.5, B=2.0 (On adding C to it, it becomes like this)
> 
> What I am saying is that [A, B] = G1 (part of one orderGroup)
> When we add C then [A, C, B] = G2 (they become a different OrderGroup).
> 
> So basically I am saying we are not editing an OrderGroup, they are
> immutable also just like the Orders are. Even when you just revise and
> existing order {A/B} of G1, still a new OrderGroup will be created with the
> revised Orders. This is what @bmamlin https://github.com/bmamlin was
> suggesting.
> 
> And I think it is having a better use case to handle it this way.
> 
> —
> Reply to this email directly or view it on GitHub
> https://github.com/openmrs/openmrs-core/pull/1700#issuecomment-188040616
> .

Yes, I meant that. But then how else can an OrderGroup be immutable ?

I thought this was what @bmamlin meant.

I'm not sure if we want to make OrderGoup immutable too and i want to agree with @djazayeri on this, if we want to make OrderGroups immutable it has a lot of implications in the code e,g having a previous field etc so that they original order group doesn't seem to 'disappear' from the original creator. 

Unless there is a clinical reason of making order groups immutable just like for orders

This actually makes things more interesting, when you create an OrderGroup, can one change the patient, encounter and orderSet fields? If not which i guess is the case then we might as well make OrderGroup immutable too. Otherwise my assumption would be that an OrderGroup by itself is nothing since it carries no meaningful clinical data specific to it but merely a grouping of orders, as long we keep orders in it immutable it would be pointless to make it immutable too UNLESS patient, encounter and orderSet fields can't be changed

Why will we change encounter, patient inside and orderGroup.

It is a transactional data related to particular patient and encounter.

If we change the patient and encounter, then it essentially means a different orderGroup

I don't know what is the future thought behind this. @bmamlin can better answer this.

It thought this to be patient driven. So if patient is changing then it is a different orderGroup is what I 
understood.

I'm not sure that changing the patient or encounter would change the OrderGroup, am basing this on other domain objects e.g you can change a visit or patient of an encounter etc. Order was special because changing one has clinical implications that could be dangerous to a patient's health

So you mean that an Encounter which has Patient1, can be changed to have Patient2. But that wont create a new Encounter.

I thought Encounter was patient specific. In that case OrderGroup can behave the same way then. But then someone needs to validate if this is correct. 

Yes you can change Encounter.patient and literally any other field and that won't lead to a new encounter getting created and this is true pretty much for all domain objects with very few exceptions, what you're saying is a different beast and a topic for another day where all domain objects are immutable in the API

Ok, then unless Burke has any different way of thinking when he meant immutable, I will use it the same way as other domain objects for now.

And yes you're correct as long as there is validation logic that ensures that OrderGroup.patient and OrderGroup.encounter.patient are always the same. Personally I'm actually against this type of redundant duplication of fields where you have patient on both OrderGroup and the Encounter but that's something for another day too

As @wluyima suggests, we didn't make explicitly immutable versions of our domain objects (they're used both for creation and for retrieval), so there are many places where once technically can mutate things that ideally should not be mutated.

I'm not so concerned about _sequence_ of an order group being immutable, but in general it's probably better to err on the side of immutability – i.e., treating re-sequencing of orders in an order group as revisions to those orders probably isn't a bad thing.

In theory if you want to re-sequence orders in an order group even it's just one out of 2 or more, you'd have to revise all of them and call saveOrder(List Orders) in the new preferred ordering

I'm having trouble following this whole thread, but I will suggest again
that the _easiest_ approach is to leave Order.sortWeight as a
publicly-accesible property (though we can javadoc that you shouldn't
usually need to set it manually), and support:
- saveOrders(List) -> will automatically set order.sortWeight as needed to
  get the in-group ordering to match the order passed in via the list
- saveOrder(Order) -> caller can pass in a sortWeight if they want to put
  this order in the middle of an existing group, otherwise if order.group
  exists but order.sortWeight is null, the API will auto-calculate sortWeight
  as max(order.group.existingOrders)+1

It's not clear to me why we are making things more complicated than this.

On Wed, Feb 24, 2016 at 3:05 PM, Wyclif Luyima notifications@github.com
wrote:

> In theory if you want to re-sequence orders in an order group even it's
> just one out 2 or more, you'd have to revise all of them and call
> saveOrder(List Orders) in the new preferred ordering
> 
> —
> Reply to this email directly or view it on GitHub
> https://github.com/openmrs/openmrs-core/pull/1700#issuecomment-188502905
> .

@djazayeri a user can still insert an order in the middle of an existing group by just putting it at the correct index in the list without having to call a public setSortWeight method

@wluyima can u please explain your thought a bit more. I did not get that clearly.

If we do what you are suggesting doesn't that violate the natural immutability of the orders itself.

@ys-achinta, I believe what Wyclif is saying is that the API should support
this:

```
OrderGroup existing = orderService.getOrderGroup(...); // assume this
```

has 2 orders in it, with sortWeights 1 and 2
    Order o = new Order();
    // set fields on o
    existing.insertAtIndex(o, 1); // this will set o.sortWeight to be
(existing[0].sortWeight + existing[1].sortWeight)/2
    // ASSERT o.sortWeight == 1.5, i.e. it was possible to put this in
between the two existing orders without mutating them

The other thing I am trying to point out is that as a developer, I can
write this code:

```
OrderGroup existing = orderService.getOrderGroup(...);
Order o = new Order();
// set fields on o
o.setOrderGroup(existing);
orderService.saveOrder(o);
```

I think the reasonable behavior here is for the API to set o.sortWeight to
be 1 + the max sortWeight of any existing order in the group.

On Thu, Feb 25, 2016 at 8:19 AM, ys-achinta notifications@github.com
wrote:

> @wluyima https://github.com/wluyima can u please explain your thought a
> bit more. I did not get that clearly.
> 
> If we do what you are suggesting doesn't that violate the natural
> immutability of the orders itself.
> 
> —
> Reply to this email directly or view it on GitHub
> https://github.com/openmrs/openmrs-core/pull/1700#issuecomment-188860710
> .

@djazayeri The examples that you mentioned. Both of them are supported by the API now.

My question was @wluyima was saying we do not need a getSortWeight method. I did not get that part.

Are you suggesting by your example that:

(existing[0].sortWeight + existing[1].sortWeight)/2 is possible

and not this:

(existing[0].getSortWeight() + existing[1].getSortWeight())/2

What I understood from @wluyima 's last comment was that he did not want a sortWeight at all. Just a list with an index in the database which maintains the ordering. I thought that was wrong.

I dont know, maybe i understood wrongly. But what you explained is supported by API.

@ys-achinta, @djazayeri just nailed exactly what i was saying with an example, i said we don't need Order.setSortWeight and in general we don't need to expose the getter and setter for sortWeight because setting of the sortWeight is already handled by the API.
By the way, the current code in this PR doesn't yet handle inserting of new orders into an order group

@wluyima yes you are right the current code doesn't handle that. But will be adding the changes soon

So it sounds like we've almost reached a consensus

@djazayeri @wluyima @bmamlin 

I have made the changes incorporating the feedbacks and discussions.
Please have a look and let us know.

@ys-achinta I thought we said we should get rid of the getter and setter of Order.sortWeight

@wluyima I thought @djazayeri , @bmamlin wanted to let the getter and setter be there, but instead add appropriate java docs for the same

Incorporated all the feedbacks and checked-in the changes.
Please let me know if things are good.

Checked-Id the changes to use 0 based counting

@wluyima please look into latest commit https://github.com/puevigreven/openmrs-core/commit/ebbeae4e8c26cf1c6d58d517833e932fce31d422
i have made an effort to rectify the mistakes

I was just looking at the code again and there's something important I think is missing. Right now, OrderSetMember has:
- OrderType orderType
- String orderTemplate

We have never defined a single common format for orderTemplate, and I don't think we want to. Instead of doing this we should _also_ add another String called templateFormat or templateType. This will allow different distros/implementations to evolve different template formats at their own pace (and/or even have multiple kinds).

@puevigreven this has merge conflicts. Or did you just redo a new one?

Good find, @djazayeri.

`orderType` would define the type of orderable. We have started with drug & lab test orders, but this will expand to include many other types of tests, procedures, nursing, referral, activities, diet, etc.

`orderTemplateType` would define the schema of the order template. While it's possible an order type may have one type of template, we know there will be cases where we have multiple different types of templates for a single type of order (e.g., drug orders template type may vary based on the type of dosing instructions). It's also possible that a single template type may serve the needs for multiple order types (e.g., a single type of template may be sufficient for referrals, activities, and diet orders).

Presumably handlers would be registered to manage different types of templates. We may store the class name for the handler in the orderTemplateType, but this hasn't been decided. Making this (`orderset_member.order_template_type`) a `varchar 1024` should suffice.

I have pushed the code with the modifications discussed in the design call

Merged at 698c690825488bc29e97f12dad73fe26e8cbfdeb

@mnsowmya i have reverted this because if will make upgrades fail. Can you fix it with the instructions at ?https://wiki.openmrs.org/display/docs/How+to+Modify+a+Bad+Changeset

closing because of merge conflicts and main repo was deleted.

@dkayiwa i have removed the merge conflicts, 
please look into this :) 

@wluyima . It looks like there are no more feedback, on the current implementation.
I was hoping this would be merged yesterday since we all came to a common understanding.
Could you please have a look at this pull request and merge it?

You guys(Bahmni) actually do have the privileges to merge the code in to 2.0.x branch when you feel it's ready

@djazayeri we had a discussion on this [design call](http://notes.openmrs.org/2016-02-29-Design-Forum) that is related to OrderSets, does this PR satisfy the discussion? 

\o/

Congrats on closing the most epic pull request ever.

Can you include a ticket number please?

What is the ticket associated to this pull request?

Closing because the ticket was closed as a wont fix.

@dkayiwa I was wrong. Thanks for correcting. I thought the plugin run sequence was also affecting the parseVersion variables. But, it is fine.

The confusion came when I was running the test in IDE.

@dkayiwa  the tests fail without my code

@puevigreven i have just run that test without your changes and it passes.

@dkayiwa  i have changed the code just before commenting, please get the recent changes and try. 

@wluyima have a look

@dkayiwa yes i will fix it

@wluyima I've added a controller for this page but control is not being transferred to it. I suspect I need to mention that this is the controller for the login page in a file somewhere but not sure where. Could you help me out?

Am closing this because it looks messed up. You will need to first pull the latest upstream changes.

@aj-jaswanth i did you make any changes other than simply capitalizing L and moving some few lines around? :)

@dkayiwa The main change is to change the asserts. Capitalizing L is for readability :)

Thank you! I did mess up. ;)

On Tue, Mar 8, 2016, 11:50 AM dkayiwa notifications@github.com wrote:

> Closed #1738 https://github.com/openmrs/openmrs-core/pull/1738.
> 
> —
> Reply to this email directly or view it on GitHub
> https://github.com/openmrs/openmrs-core/pull/1738#event-582088689.

@ivange94 did you actually test this out by running the webapp? If yes, with what specific modules?

@micgn do you mind pointing me to the exact place where these are redundantly declared?

@dkayiwa i have not actually been able to test this on webapp. I tried to test from webapp. But the only module i could figure out with dependencies was the reporting module. But when i install the reporting module and its dependencies, the legacyui module stops working. The user interface disappears. The dependencies for reporting could not work well on 2.0.

@ivange94 if you are trying this out on platform 2.0, then you need to compile the latest snapshot versions of these modules. Can you try that again? It is important to manually test this out in the running webapp because it touches a critical part of the system.

only short distance below in the commited file you can see the component-scan, going for all Validators

@dkayiwa i was actually testing with latest version of these modules. But since it has been a long time since i ran the tests, i will try it again with the latest changes.

@ivange94 yes you need to try again because of recent i have made a number of random commits to make reference application modules run on platform 2.0

Shouldn't the order of calling willStop be module3, module2, module1?

I didn't actually mean that you add the controller though it might be okay. The @Controller annotation is all you need to map it to the URL

What i asked was that in the doGet method you would check if the privilege fail session attribute exists

I've already added the annotation at the top. Still doesn't work..do I add it elsewhere? I believe @RequestMapping takes care of the stuff when it lands on the page. That's done too. 

No. Actually it first calls willStop() on module1 and recursively calls it on its dependent modules. So, the order will be module1, module2, module3.
https://github.com/openmrs/openmrs-core/blob/master/api/src/main/java/org/openmrs/module/ModuleFactory.java#L1091

@dkayiwa Fixed formatting. The problem was that, by default the code uses 'tabs' for spacing. My IDE converted 'tabs' to equivalent number of spaces.

@dkayiwa In the link they mentioned to add both new check sum as well the previous old one

@mnsowmya shouldn't  you be adding only for the previous one?

@dkayiwa will there be any problem if i mention both can you tell me what would be the problem.i think i should add both.i am not sure about this

@mnsowmya we generally do not include those that are not yet released. Does this make sense?

@dkayiwa  ok .That error is because of the   'ONLY_FULL_GROUP_BY' mode how would i change that mode in openmrs can you give me some lead on this .Instead modifying that query would be a tedious job.can i reset the mode directly in liquibase-update-to-latest.xml

@wluyima : Functional code ready :)

You're not using the parameters anymore...

@robbyoconnor Could you explain a little bit more what you mean, please?

@YheCoder Look at your PR — you're no longer using the parameter passed into the setter...

@robbyoconnor  Thank you. Do you mean the setIdentifiers function in Patient.java or all the others also?

@YheCoder In _ALL_ of them. You're taking in but not using the parameter... It'd be better to just initialize this and not even provide the setters at all.

Also you broke the tests. 

the constant was already in CORE_GLOBAL_PROEPRTIES() so I just redirected the constant to it.
see below, is this not right?

```
/**
 * Global property name of other non coded allergen, stored in allergen coded allergen
 * when other non coded allergen is represented
 */
public static final String GP_ALLERGEN_OTHER_NON_CODED_UUID = "allergy.concept.otherNonCoded";
```

CORE_GLOBAL_PROPERTIES()

...  
        props.add(new GlobalProperty("allergy.concept.allergen.environment", "162554AAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
                "UUID for the environment allergens concept"));

```
    props.add(new GlobalProperty("allergy.concept.reactions", "162555AAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
            "UUID for the allergy reactions concept"));

    props.add(new GlobalProperty("allergy.concept.otherNonCoded", "5622AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
            "UUID for the allergy other non coded concept"));

    props.add(new GlobalProperty("allergy.concept.unknown", "1067AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
            "UUID for the allergy unknown concept"));

    props
            .add(new GlobalProperty(GP_DRUG_ORDER_DRUG_OTHER, "", "Specifies the uuid of the concept which represents drug other non coded"));
    for (GlobalProperty gp : ModuleFactory.getGlobalProperties()) {
        props.add(gp);
    }
```

Can you use the constant in the same place too?

On Mon, Mar 14, 2016 at 2:42 PM, James deGraft-Johnson <
notifications@github.com> wrote:

> the constant was already in CORE_GLOBAL_PROEPRTIES() so I just redirected
> the constant to it.
> see below, is this not right?
> 
> /**
> - Global property name of other non coded allergen, stored in allergen coded allergen
> - when other non coded allergen is represented
>   */
>   public static final String GP_ALLERGEN_OTHER_NON_CODED_UUID = "allergy.concept.otherNonCoded";
> 
> CORE_GLOBAL_PROPERTIES()
> 
> ...
> 
> props.add(new GlobalProperty("allergy.concept.allergen.environment",
> "162554AAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
> "UUID for the environment allergens concept"));
> 
> ```
> props.add(new GlobalProperty("allergy.concept.reactions", "162555AAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
>         "UUID for the allergy reactions concept"));
> 
> props.add(new GlobalProperty("allergy.concept.otherNonCoded", "5622AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
>         "UUID for the allergy other non coded concept"));
> 
> props.add(new GlobalProperty("allergy.concept.unknown", "1067AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
>         "UUID for the allergy unknown concept"));
> 
> props
>         .add(new GlobalProperty(GP_DRUG_ORDER_DRUG_OTHER, "", "Specifies the uuid of the concept which represents drug other non coded"));
> for (GlobalProperty gp : ModuleFactory.getGlobalProperties()) {
>     props.add(gp);
> }
> ```
> 
> —
> Reply to this email directly or view it on GitHub
> https://github.com/openmrs/openmrs-core/pull/1711#issuecomment-196274907
> .

## 

If we keep uppermost in our minds the unkind and unjust acts of others, we
shall find it impossible to love them as Christ has loved us; but if our
thoughts dwell upon the wondrous love and pity of Christ for us, the same
spirit will flow out to others.

updated pull request

Ha! Easy ticket to fix :1234: :)

Is the arden package being moved to a separate module???  We're currently using this in Production.

@sjmckee  No, it is not moved to a module yet, I'll try doing that  :smile: 

Can you squash these commits into one?

@YheCoder  Am closing this because of failing tests.

@ivange94 did you get a chance to try this out again?

Not yet. I have been a little occupied. I will look at it friday. If this is a blocker, i should be unassigned.

Could you squash these into one commit? :)

@vinayvenu do you mind squashing these into one? :)

@dkayiwa Done. 

@tobivogel why do you think that the validator is not the right place? I somehow feel that the pattern of silently changing user data without notifying them can be confusing. But i could be wrong depending on what your thoughts are. :)

Close this because it looks like a duplicate of https://github.com/openmrs/openmrs-core/pull/1743

Imho the best approach to do it is with an hibernate user type. But it should be a project level decision not in just one entity. 

See last answer:
http://stackoverflow.com/questions/6668315/stripping-trailing-whitespace-from-char-fields-in-a-legacy-database-with-grails

This was a forward port of the changes to 2.1.0.

@jdegraft oh i see! Just reopened it.
Did you see my comment in the hibernate mapping file?

just pushed change to use old code. had to run tests first.

@dkayiwa, how do I re-run the build?

@dkayiwa, because of this code https://gist.github.com/jdegraft/26e12d5327676e6565ed we either have to allow null for codedAllergen or to change this code to set codedAllergen uuid to otherNonCodedConceptUuid

@dkayiwa i finally found some time to test these. I used the latest version of reporting from master. Well i can't still get all its dependencies even the updated versions to start in 2.0. But calculation has worked(it is also one of the dependencies for reporting). When i stop calculation then try to start reporting from the UI, calculation will be start automatically even though reporting will still fail to start because its other dependencies are not yet started. Am still working on the other dependencies, just wanted to let you know my progress so far.

@dkayiwa I made a small 2min video demonstrating that, this actually works. https://www.youtube.com/watch?v=07vS8qVzxDE&feature=youtu.be

@dkayiwa i uploaded a new video. The previous video had some parts strip out during the upload. https://www.youtube.com/watch?v=wv4mMgKTb2M&feature=youtu.be

@jdegraft that code needs to be changed because codedAllergen should never be null. Even when an allergen is not coded, it will still have a value for the other non coded concept uuid.
After you change that, we shall merge.

yes, I changed the code.
in the rest services changes, the change means that to setNonCoded, you have to set nonCoded string, then otherNonCodedConcept, but it works. see webservices change tests, there is a comment highlighting this.
so we can merge.

I will, i think i got the fixes to the failures

I will once i push the fix to the failing tests, worked on it on the plane and just got internet in UG 

This looks fine, thanks @vishnuraom 

Am closing this because of conflicts.

@xiaohe27 i can reopen this after you have created a ticket for it and followed our guidelines for these kinds of tests as written at https://wiki.openmrs.org/display/docs/Unit+Testing+With+at-should+Annotation

@laurayuwen i will reopen this after you have created a ticket and responded to the inline review comments

@puevigreven did you see the rest of the patient dashboard privileges in https://github.com/openmrs/openmrs-core/blob/1.11.x/webapp/src/main/webapp/WEB-INF/view/patientDashboardForm.jsp

Let us have the validator just reject names with leading or trailing white spaces instead of silently trimming user data.

@puevigreven did we remove "Get Encounter Provider"? I do not seem to see it anywhere.

Closing this as wont fix. See details on the ticket.

I will resolve all issues on this pull request over the weekend. :)

By analyzing the blame information on this pull request, we identified @bmamlin and @suniala to be potential reviewers

By analyzing the blame information on this pull request, we identified @wluyima, @rkorytkowski and @mblanchette to be potential reviewers

Thanks @jart  👍 

Very welcome!

By analyzing the blame information on this pull request, we identified @bmamlin to be a potential reviewer

What problems did you encounter trying to squash them? 

After squashing, it would either undo all my changes, or it would not allow me to push without pulling first.  In both cases, all of the commits were not squashed into one, they still appeared as multiple commits on the branch. 

I used the "git reset --soft HEAD~x" command from the wiki page.

@ern2 you have to force-push after you squash your commits

@ern2 The reason is that you are re-writing the git history

@ern2  you do not need to do anything -- your changes will automatically be reflected here 

Closing this because of conflicts.

@winglam according to the ticket, you said that the normalize method throws an exception. But your unit tests show that it does not throw this exception even without any fix.

@winglam did you take a look at this? https://wiki.openmrs.org/display/docs/Unit+Testing+With+at-should+Annotation

This looks messed up. Can you create a new one? 
Am also assuming you saw this: https://wiki.openmrs.org/display/docs/Pull+Request+Tips

You will need to force-push whenever you squash commits -- just for future knowledge.
On 04/11/2016 09:18 AM, dkayiwa wrote:

> Closed #1761 https://github.com/openmrs/openmrs-core/pull/1761.
> 
> —
> You are receiving this because you commented.
> Reply to this email directly or view it on GitHub
> https://github.com/openmrs/openmrs-core/pull/1761#event-622434433

Okay.  I am going to try squashing again with a force push.  I will link to a new pull request when it looks clean.  Thank you.

Here is the new pull request: https://github.com/openmrs/openmrs-core/pull/1762

I was able to squash into one commit without losing my changes.  Thanks for the help.

Are these new tests or you just moved them over from some class?

These are new tests.

Did you just forget to put the @should annotations on the class methods being tested? https://wiki.openmrs.org/display/docs/Unit+Testing+With+at-should+Annotation

I was referencing the style used in [ModuleFileParserTest.java](https://github.com/openmrs/openmrs-core/blob/master/api/src/test/java/org/openmrs/module/ModuleFileParserTest.java) when writing these tests.  I guess that class used an older method?

Would you like me to edit these tests in a new pull request so they follow the rules in the wiki page you linked?

@dkayiwa The normalize method throws an exception before we applied our fix. This fix was missing before and has now been added. The unit tests should now pass. 

@dkayiwa Thanks for pointing out the @should annotation. I have added that, other documentation, null checks to org.openmrs.util.Format and changed the tests in org.openmrs.util.FormatTest to respect the documentation.

Can you squash these commits into one? https://wiki.openmrs.org/display/docs/Pull+Request+Tips

I have squashed the commits.

@dkayiwa, If you don't mind me asking, if I were to use the should annotations with these tests, would I just have to add should statements to the parse() method in UpdateFileParser.java, and then modify my test names and verify statements to match?  Then also add see statements to my tests?  

If that is all that is needed, I can make a new pull request with those changes.

By analyzing the blame information on this pull request, we identified @bmamlin, @suniala and @dkayiwa to be potential reviewers

After re-reading the pull request tips again, I committed these changes here instead of in a new pull request.  Is this how the annotations should be? 

@ern2 can you squash the commits into one?

Sorry, I'll do that now.

By analyzing the blame information on this pull request, we identified @bmamlin, @Fernando-Jack and @suniala to be potential reviewers

@hirschf2 did you take a look at? https://wiki.openmrs.org/display/docs/Pull+Request+Tips

@ivange94 did you notice that ModuleFactoryTest fails?

@tjtunnell this pull request looks messed up. Can you take a look at? https://wiki.openmrs.org/display/docs/Pull+Request+Tips

Yeah, I messed this up.  I'll get this fixed up soon.  I'll reply back once I get it.

I have fixed the issues from earlier.

@ern2 can you just spy on expandExtensionNames() being called?
Here are some examples:
https://github.com/openmrs/openmrs-module-owa/commit/fdf1d06e2f19e591e2377650feb388cb1eb4d2f7
https://github.com/openmrs/openmrs-module-webservices.rest/commit/21d868e9f435f649cb2681661fa08b68790a574e

By analyzing the blame information on this pull request, we identified @bmamlin, @dkayiwa and @suniala to be potential reviewers

Closed because I didn't follow naming branch name conventions.

@winglam why would anyone pass "_" for locale?

The same argument can be made for why anyone would pass in empty strings or whitespaces only. But more importantly, this method was never meant to throw a NullPointerException for any input and yet "_" was one that would. 

Thanks for pointing out those examples.  I will get back to you with those changes.

I updated this branch with master before this most recent commit and it now shows the file changes from the update.  Was that the wrong thing to do?  

Otherwise, I have added Powermock to my tests to spy on expandExtensionNames.

@ern2 this does not look correct because it includes more than your changes. Which commands did you use? By the way, have you ever seen this? https://wiki.openmrs.org/display/docs/Using+Git

@hirschf2 can you squash these commits into one?

@dkayiwa, I was fetching the upstream then merging instead of using rebase as is done in the wiki page you just linked.  I have re-done it now and have run mvn clean package.  I am about to push again.  Hopefully this will fix the issue.  

@dkayiwa I have only made it worse.  Would it be easier at this point to delete this branch, re-branch from master, and then add my changes back in? 

@dkayiwa, deleting the branch and starting over is what finally worked.  Sorry for making such a mess.  Only my changes are showing now.  

@winglam if you check again on the above wiki page, you will notice that the should annotation matches the test method name.

Sorry, I seem to have overlooked that from before. I have now changed the method names to match the should annotation.

@winglam hopefully you are aware of this plugin which should automatically generate test methods from the should annotations: https://wiki.openmrs.org/display/docs/Generate+Test+Case+Plugin

By analyzing the blame information on this pull request, we identified @bmamlin and @dkayiwa to be potential reviewers

By analyzing the blame information on this pull request, we identified @bmamlin and @suniala to be potential reviewers

By analyzing the blame information on this pull request, we identified @bmamlin, @chethandeshpande and @suniala to be potential reviewers

By analyzing the blame information on this pull request, we identified @bmamlin and @suniala to be potential reviewers

Sorry I forgot to create the branch.

By analyzing the blame information on this pull request, we identified @bmamlin, @suniala and @ShekharReddy4 to be potential reviewers

By analyzing the blame information on this pull request, we identified @bmamlin and @dkayiwa to be potential reviewers

By analyzing the blame information on this pull request, we identified @bmamlin, @suniala and @dkayiwa to be potential reviewers

@dkayiwa, I will not concentrate on null value tests so much in the future.  Thank you for the advice.  Would you like me to take them out of these tests or leave them in since they are already written?

@ern2 just leave them since they are already written anyway! :)
By the way, have you looked at our community priority tickets?

@dkayiwa, I haven't looked at the priority tickets very closely.  I wanted to focus on testing the Module package since I (and others I am working with) have experienced the most issues when trying to install and use modules with the core.  I will make sure to look at priority tickets from now on, too.

@winglam can you include the pull request url on the ticket?
https://wiki.openmrs.org/display/docs/Pull+Request+Tips

@winglam can you include the pull request url on the ticket? Hopefully you saw this: https://wiki.openmrs.org/display/docs/Pull+Request+Tips

@hank205 did you add the corresponding should annotations for the methods being tested as at? https://wiki.openmrs.org/display/docs/Unit+Testing+With+at-should+Annotation

@hank205 can you include the pull request url on the ticket?

@astorga2 can you add the corresponding should annotations for the methods being tested as at? https://wiki.openmrs.org/display/docs/Unit+Testing+With+at-should+Annotation

I thought I did! The url for the ticket:
https://issues.openmrs.org/browse/APPTEST-55

@dkayiwa hi, I'm the teammate of @hank205. 
We forgot to add the @should javadoc annotations. Sorry for that and we will fix this very soon.
One issue is that for those test cases that already exists, it seems that their annotations are also missing, should we fix them as well?

By analyzing the blame information on this pull request, we identified @bmamlin, @vishnuraom and @suniala to be potential reviewers

@DrRacket just do not spend your time adding for existing ones. :)

@jdpark2 can you squash these commits into one?

@hank205 i do not see the pull request url on the ticket. Did you take a look at? https://wiki.openmrs.org/display/docs/Pull+Request+Tips

@ssabada can you add the corresponding should annotations on the methods being tested as at? https://wiki.openmrs.org/display/docs/Unit+Testing+With+at-should+Annotation

@ivange94 did that weekend happen? :)

@dkayiwa actually no. I have been occupied with some school projects. Am sorry for the delay on this, i will work on it now and update my pull request in a few hours. :)

@hirschf2 are you still working on this?

@astorga2 can you have not more than one should in your test method name and also include a should annotation on the method being tested, as per https://wiki.openmrs.org/display/docs/Unit+Testing+With+at-should+Annotation

What is MP4?
Is this related to an active OpenMRS issue at https://issues.openmrs.org/?

No I apologize, the pull request was an accident I made prematurely in the week. 

@dkayiwa hi, the annotations are added.

@DrRacket @hank205 can you squash these commits into one? https://wiki.openmrs.org/display/docs/Pull+Request+Tips

@dkayiwa I pasted the url for this page to the end of description at: https://issues.openmrs.org/browse/APPTEST-55
Is it what I supposed to do?

By analyzing the blame information on this pull request, we identified @bmamlin, @suniala and @dkayiwa to be potential reviewers

@dkayiwa after messing up the branch, I created another pull request. https://github.com/openmrs/openmrs-core/pull/1779
Please close this one. Sorry for the inconvenience.

I have included the pull request URL on the ticket. Thanks.

I have included the pull request URL on the ticket. Thanks.

@winglam so do you now want to fix the ticket? Or did you just want to create a test reproducing it? :)

@DrRacket this pull request has lots of unnecessary formatting changes. Can you look into that?

I just wanted to create tests to reproduce the bug since it wasn't clear from the ticket whether this was still a problem. I will look into fixing this soon :)

@hank205 that is correct. Do you now want to go ahead and fix the ticket? Or did you just want to create tests reproducing the reported problem? If you only wanted to create tests, in order to merge your changes, can you put ignore annotations on the tests and comment on the ticket that these will need to be removed once the ticket is fixed?

If you only wanted to create tests, in order to merge your changes, you can put ignore annotations on the tests and comment on the ticket that these will need to be removed once the ticket is fixed.

@puevigreven did you see the comment above?

@dkayiwa Cleaned up. Sorry for that.

@dkayiwa The commented assertion at the end of this test case will fail because in the HibernatePatientSetDAO, the method getObservations(Cohort patients, Concept concept, Date fromDate, Date toDate) actually didn't include the fromDate and toDate in the query conditions. The method ignores the date range so for this test case, the method will return 2 observations for patient 8 although 1 observation is  not in the date range.

@DrRacket do you think it makes sense to put that explanation in the test? :)

@dkayiwa I can do that. Is this bug going to be fixed since getObservations(Cohort patients, Concept concept, Date fromDate, Date toDate) has no difference with getObservations(Cohort patients, Concept concept) now. 

@DrRacket it will be great to have someone look into it. 👍 

@dkayiwa The explanation is added.

@dkayiwa sorry I accidentally deleted the branch. I have restored the branch, and added the ignore annotations. Could you open it again?
Or should I create a new pull request?

@hank205 i cannot reopen because the branch was either force pushed or recreated.

By analyzing the blame information on this pull request, we identified @bmamlin, @suniala and @ShekharReddy4 to be potential reviewers

@dkayiwa Appreciate for your patience, here's my new pull request #1780 

URL for the JIRA ticket:
https://issues.openmrs.org/browse/APPTEST-55

Does it include the new pull request url?

@dkayiwa Yes, I have updated.

@hank205 can you put some text in the ignore annotation? Her is an example: https://github.com/openmrs/openmrs-core/blob/2.0.x/api/src/test/java/org/openmrs/module/ModuleActivatorTest.java#L23

@dkayiwa Sure! updated now with description for ignore annotations.

@hank205 in the ticket description, can you mention that you have written some tests to reproduce this?

@dkayiwa made changes to ticket description.

@winglam can you do the same as for? https://github.com/openmrs/openmrs-core/pull/1780

@hank205 the correct ticket should have been RA-543
Can you do it there?

@dkayiwa  Sure. Updated description at RA-543.

made some changes but not tested yet. Am still working on it but i have class now. I have not had a lot of responds on talk so am still waiting but i have already started implementing @lluismf proposal, it makes sense to me and is closer to what i was thinking. 

I have ensured that this pull request is consistent with #1780 and updated the ticket with information about this pull request.

I have ensured that this pull request is consistent with #1780 and updated the ticket with information about this pull request.

I have added the should annotations and squashed commits as well. 

I have added should annotation, updated the name of unit test and squashed commits. 

I have the should annotations for the methods tested.

I have updated the name of unit test to  contain one "should"

@astorga2 did you also add the corresponding should annotation on the method being tested?

Am closing because i tried a path with spaces and it worked well.

Yes, I have added the corresponding should annotation. 

@astorga2 am closing this because that failure was not caused by having spaces in the path. Just try remove space in your change and you will still get the same failure. It is simply caused by a non existing file. If the file exists, even if the path has spaces, it works

@astorga2 i have merged this for today. But next time include more than mere null argument check tests. :)

@ssabada can you look at the formatting in all places and also the empty should annotation?

@winglam am closing because the failure of this test (org.openmrs.api.ValidationException: 'Patient#null' failed to validate with reason: Select a preferred identifier) is not caused by the reported problem.

Thanks. Will do so.

I have fixed all the formatting and reviewed the should annotations. I also ran mvn clean install FYI.

By analyzing the blame information on this pull request, we identified @bmamlin, @suniala and @vishnuraom to be potential reviewers

This is fine. 
In any case, if I try   home/astorga2 home/openmrs-core  and run mvn test from the openmrs-core directory, I still get the error (with or without the file).
I'll see if I can debug this further and update. 

@astorga2 when you create a ticket, can you wait for it to be assessed before you can work on it? We would like to prioritise tests on real business logic instead of simple setters, getters, remove, add item properties. Do you agree? :)

@jdpark2 are you still working on this? :)

@dkayiwa yes I am! sorry for the delay. I have been busy this week, I will get to it soon!

By analyzing the blame information on this pull request, we identified @jdegraft, @bmamlin and @rkorytkowski to be potential reviewers

Closing the pull request for reasons explained above. 

By analyzing the blame information on this pull request, we identified @bmamlin and @bholagabbar to be potential reviewers

Me? LOL xD

This is fair. I see the interesting logic in openmrs needs to be tested with an in-memory database. Please see here for what I would like to do before proceeding.
https://talk.openmrs.org/t/on-writing-mock-test-for-openmrs/5935

By analyzing the blame information on this pull request, we identified @rkorytkowski and @dkayiwa to be potential reviewers

By analyzing the blame information on this pull request, we identified @bwolfe, @rkorytkowski and @kishoreyekkanti to be potential reviewers

@lluismf or @dkayiwa I have seen this travis CI error for jdk6 in the radiology module as well

see https://github.com/travis-ci/travis-ci/issues/5227

I added following workaround in .travis.yml

``` yaml
before_install:
  - cat /etc/hosts # optionally check the content *before*
  - sudo hostname "$(hostname | cut -c1-63)"
  - sed -e "s/^\\(127\\.0\\.0\\.1.*\\)/\\1 $(hostname | cut -c1-63)/" /etc/hosts | sudo tee /etc/hosts
  - cat /etc/hosts # optionally check the content *after*
```

also I had to change running travis CI in containerized version since I hit their 3GB RAM limit (I guess due to component tests). Here is my PR on the radiology module https://github.com/openmrs/openmrs-module-radiology/pull/247/files

By analyzing the blame information on this pull request, we identified @bmamlin, @DrRacket and @suniala to be potential reviewers

By analyzing the blame information on this pull request, we identified @bmamlin, @Fernando-Jack and @suniala to be potential reviewers

Why did Travis fail? 

By analyzing the blame information on this pull request, we identified @bmamlin, @suniala and @dkayiwa to be potential reviewers

By analyzing the blame information on this pull request, we identified @bmamlin, @DrRacket and @suniala to be potential reviewers

By analyzing the blame information on this pull request, we identified @umupfumu to be a potential reviewer

1.7.x reached end of life, can you reproduce this in master with the latest build of legacy UI module

I have made a pull request in the legacy UI module for this. 
https://github.com/openmrs/openmrs-core/pull/1792
Closing this now.

By analyzing the blame information on this pull request, we identified @bmamlin, @dkayiwa and @suniala to be potential reviewers

@wluyima Sorry for the delay,I have updated the PR with required changes.

I'm unfamiliar with Travis, but the test worked fine on my build. Any ideas?

did you run tests. Travis CI is just for running tests. If it fails, it means something is wrong.

Yes, when I run "mvn test" locally, I get a build success. I have also individually tested the class I modified and still returned a success. Could it be a specific version of my maven that is causing a failure?

If you click Close and then click reopen on your PR -- you'll trigger travis to rebuild -- it likely stalled based on what I can see from the logs 

OK it's passing now...sometimes Travis CI hangs

I think all of this should be up to date!

By analyzing the blame information on this pull request, we identified @bmamlin, @chethandeshpande and @suniala to be potential reviewers

This test should fail until the bug is patched, hence the API exception. 

By analyzing the blame information on this pull request, we identified @bmamlin, @dkayiwa and @suniala to be potential reviewers

By analyzing the blame information on this pull request, we identified @bmamlin, @dkayiwa and @suniala to be potential reviewers

By analyzing the blame information on this pull request, we identified @bmamlin to be a potential reviewer

By analyzing the blame information on this pull request, we identified @bmamlin to be a potential reviewer

By analyzing the blame information on this pull request, we identified @bmamlin, @dkayiwa and @suniala to be potential reviewers

By analyzing the blame information on this pull request, we identified @bmamlin to be a potential reviewer

By analyzing the blame information on this pull request, we identified @bmamlin, @dkayiwa and @ivange94 to be potential reviewers

This PR has been open for 94 days. What is its current status? 📅 🕚 

This PR has been open 75 days. What is its current status? 📅 🕚 

@hirschf2 you should include the fix in this PR for validating death date here - https://github.com/openmrs/openmrs-core/blob/master/api/src/main/java/org/openmrs/validator/PersonValidator.java

By analyzing the blame information on this pull request, we identified @bmamlin, @suniala and @rkorytkowski to be potential reviewers

Closing because the ticket was closed with a cannot reproduce resolution.

@Lemun am closing this because of the comments i have put on the ticket.

@JailyRancher we do not encourage working on tickets before they are made ready for work. https://wiki.openmrs.org/display/docs/Pull+Request+Tips

@JailyRancher will these tests run on windows?

@hirschf2 did you see the comment from @sunbiz?

@hirschf2 can you squash these commits into one? https://wiki.openmrs.org/display/docs/Pull+Request+Tips

So @bholagabbar are you done with the review? :)

@dkayiwa: On a quick look, it looks fine! No hard coded messages, exceptions taken care of. Don't think we need a test 

Closing because of no response from @winglam 

@jdpark2 can you squash these commits into one?

Next time, before working on a ticket, first ensure that it is ready for work as advised at https://wiki.openmrs.org/display/docs/Pull+Request+Tips

@jdpark2 can you create a new pull request that does not have formatting changes? https://wiki.openmrs.org/display/docs/Pull+Request+Tips

@hirschf2 did you see my comment above?

@hirschf2 i can reopen if anyone commits a fix that makes this test pass.

@JailyRancher i can reopen if you still have some time to make these tests windows friendly. :)

@JailyRancher i can reopen this pull request if you have some time to respond to the above comments and make it windows friendly too. :)

@AdamGrzybkowski did you see the above comment/question? :)

Closing because it has merge conflicts and misses a few more privileges as per my comment above.

Closing because it has merge conflicts and needs to address the two comments above.

@AdamGrzybkowski i can reopen this when you are done with adding some tests. :)

@hirschf2 i will reopen this after you have responded to the comments above. :)

You haven't modified any code, which is run in production... just tests, thus only liquibase-update-to-latest.xml is still used. In production if you have unrun changesets they are applied on server restart. I think you will need to modify some logic in https://github.com/openmrs/openmrs-core/blob/master/web/src/main/java/org/openmrs/web/filter/update/UpdateFilter.java to run liquibase-master.xml

@rasient am closing this because it results into validation errors. Did you get a chance to look at this? https://wiki.openmrs.org/display/docs/How+to+Modify+a+Bad+Changeset

@rasient can you squash these commits into one as advised at? https://wiki.openmrs.org/display/docs/Pull+Request+Tips

By analyzing the blame information on this pull request, we identified @bholagabbar and @mseaton to be potential reviewers

By analyzing the blame information on this pull request, we identified @bmamlin, @suniala and @dkayiwa to be potential reviewers

@blavigne13 can you create some unit tests for this?

@dkayiwa Will do. 

After giving it some thought, my plan is to put together a few tests to ensure that substring matches are only returned for names, and not identifiers. So far that's the only thing I've noticed that the existing tests don't cover. They could also be used for similar queries, e.g.: find patient, find provider, but I'm not sure if adding those same tests to methods unrelated to this ticket would be appropriate...

@blavigne13 the pull request requires squashing commits into one. Did you get a chance to look at this? https://wiki.openmrs.org/display/docs/Pull+Request+Tips

@dkayiwa I did the steps written down there, can you please check recheck it?

@rasient on this page i still see three commits that need to be squashed into one.

@dkayiwa now the last commit is ok?

@rasient just take a look at this page and you will see that it has multiple commits/merges, etc

@blavigne13 if you find it hard rectifying this, feel free to ask for help on the IRC channel. https://wiki.openmrs.org/display/IRC/Home

@rasient if you find it hard to resolve this, feel free to ask for help on IRC https://wiki.openmrs.org/display/IRC/Home

By analyzing the blame information on this pull request, we identified @wluyima, @rkorytkowski and @mblanchette to be potential reviewers

Do we really need this dependency? 

@lluismf don't know, dependency was there before, broke the build because of the version that's why I updated it.

@lluismf it is used in https://github.com/openmrs/openmrs-core/blob/2.0.x/api/src/main/java/org/openmrs/util/Reflect.java

so its needed by the api project

@teleivo could this be related to? https://talk.openmrs.org/t/module-releases-missing-from-maven-repo/6980

@dkayiwa thanks, it was related! problem solved

By analyzing the blame information on this pull request, we identified @bmamlin and @djazayeri to be potential reviewers

@geoff-wasilwa shouldn't the fix be in the data access layer?

@dkayiwa the `DWRConceptService` actually calls the data layer twice (see line [144](https://github.com/geoff-wasilwa/openmrs-core/blob/feb47d3570f0e9a46420bda9d649419bf179ed6a/web/src/main/java/org/openmrs/web/dwr/DWRConceptService.java#L144) and [199](https://github.com/geoff-wasilwa/openmrs-core/blob/feb47d3570f0e9a46420bda9d649419bf179ed6a/web/src/main/java/org/openmrs/web/dwr/DWRConceptService.java#L199)) and the results of both calls are added to the collection.

By analyzing the blame information on this pull request, we identified @bmamlin, @rkorytkowski and @suniala to be potential reviewers

@geoff-wasilwa so in that case, shouldn't the fix be to simply remove the extra redundant call?

By analyzing the blame information on this pull request, we identified @kishoreyekkanti and @wluyima to be potential reviewers

By analyzing the blame information on this pull request, we identified @kishoreyekkanti and @wluyima to be potential reviewers

@dkayiwa I wouldn't say it's redundant, the first call tries to find the concept by id (if the search phrase contains digits), while the next call tries to find any concept name matching the phrase. So that, when searching for `1000` and you have a concept with id `1000` and a concept name with the string `1000` you get both as results.

@rasient can you create a separate pull request for each ticket? Am assuming you saw this: https://wiki.openmrs.org/display/docs/Pull+Request+Tips

Thanks @MarcusViniciusCavalcanti for catching this! 👍 
Do you wanna do it even for the other language message properties files?

@blavigne13 am closing this so that you create a new one.

@blavigne13 the tests that you have added pass even without your changes. Generally, you need to start with tests that fail. Then make changes to make the tests pass.

The PR seems to have a lot of auto format changes, did you set the openmrs formatter in your IDE?

If you can't set up the openmrs formatter, you can make 2 commits in your PR where one contains the auto format changes while the other only has your changes otherwise it is hard for a reviewer to know what your code changes are. You can always squash them before merging the code

Are you going to address the auto format changes?

@wluyima I am using the formatter of this repo in eclipse. and I just ran mvn clean package, formatter didnt change a thing. look at the OrderService on how it was formatted before, its such a pain in the neck!

Can you instead make 2 commits? This is what you would need to do, create a new branch off the 2.0.x branch, format the classes you've touched in this PR and commit, then merge or cherry pick this PR's commit into that the new branch and commit, the diff for the last commit will only contain your changes  excluding auto format changes in the first, then create a new pull request for the new branch

@wluyima done.

@teleivo, thanks for your PR! By analyzing the annotation information on this pull request, we identified @bmamlin, @ys-achinta and @suniala to be potential reviewers

@dkayiwa I wrote about the deletion in the commit message. what do you suggest?
should I update the message to
"remove unused hibernate criteria in getNextOrderNumberSeedSequenceValue"

Looks much better! thanks!

@dkayiwa please be specific in what you want me to do and I will :)

@dkayiwa anything I should do to get this merged ?

@teleivo thanks for the reminder. :)

@blavigne13 do you mind squashing the commits into one?

Merged at c35550b6dde0ecc2ad40be7b3e2d2b0fb4fd83dc and db99602df4e9b0e99ed426676186506467d2a423

@AdamGrzybkowski, thanks for your PR! By analyzing the annotation information on this pull request, we identified @bmamlin, @bholagabbar and @berchmas to be potential reviewers

@wluyima should I close it? since its merged

I am a beginner for open source projects and I would like to work on this bug.
I have build the openmrs core project successfully. The ConceptValidatorTest class is not included in the project and I found the relevant class in the folder structure.
Can you give any guidance to start fixing this bug?

@mayuri328 thank you so much for working on this.
Did you see this? https://issues.openmrs.org/browse/TRUNK-4860
Have you also looked at this? https://wiki.openmrs.org/display/docs/Pull+Request+Tips

@WolfSchlegel thanks for working on this! 👍 
Do you plan to have any more cycles on this in the near future? :)

@blavigne13 how is this going? Do you have any blockers where you may need help?

@WolfSchlegel this branch has conflicts. Did you forget to pull the latest upstream changes? :)

Why does this PR contain changes to do with BinaryDataHandler?

I also don't see a test that tests that a patient can be found where the search text matches their identifier when it contains no digit, technically this test should be failing before your fix

@teleivo, thanks for your PR! By analyzing the annotation information on this pull request, we identified @bmamlin, @dkayiwa and @ys-achinta to be potential reviewers

If it was not for requiring to add new un used columns to the orders table, i would be merging this. :)

@dkayiwa I know, its sad :(
but maybe a discussion about this is needed. this issue + https://talk.openmrs.org/t/order-datechanged-changedby-causing-exception-in-immutableorderinterceptor/7559/5 feels fishy.
https://talk.openmrs.org/t/trunk-4730-complete-list-of-domain-objects-missing-changed-by-or-date-changed/3419/17 

@dkayiwa that's not the only concern by the way, what happens to existing modules that extend the orders table via XML? The problematic annotations happen to be in a superclass, there is other inherent issues with having annotations on super classes in openmrs which is something against which I've had a bias and in general I don't want us ending up with non standard JPA annotations in the API, this is something that we should possibly discuss on the design call, it has several implications and I personally think to truly use JPA annotations in the API first we should break up the Auditable interface so that creator and createdBy setters/getters belong to their own interface while dateChanged and changedBy also belong to a separate one that way a domain object can implement just one of the interfaces without the baggage of unused columns from the other interface like in the case of Orders. I think this splitting up of the interface was best suited to be done in 2.0 when we had major changes, there is great value in doing it going forward.

Ok. Then in that regard, am closing this for now until when we have agreed on the way forward.

@wluyima I totally agree with you that the dateChanged, changedBy should go to another interface since obviously they are not needed in Order.

on the other hand you are wrong in that this PR shows only imports of javax.persistence which I assume is JPA and not hibernate.

+
I tested this change deploying it and on top of it a module with a class (configured via xml mappings) which extends TestOrder, without issue.

so please also keep that in mind in your argumentation since I already have pointed those things out in lenght.

I do agree with you that the two members/columns if not wanted should not be inherited by Order. And I also agree that it seems that we need a design call for this :+1: 

Thank you guys!!

@teleivo I'm not saying that you used the non standard annotations, It was something I mentioned as a by the way as a potential pitfall when using annotations in general somewhere else. If modules extending the orders table still work fine, that's great!

@lluismf Thanks for the hint, I'll change that tomorrow morning and check the failed unit tests.

@AdamGrzybkowski, thanks for your PR! By analyzing the annotation information on this pull request, we identified @bmamlin, @bholagabbar and @berchmas to be potential reviewers

@sheikhhameed am closing this because it has lots of merge conflicts. Did you take a look at this? https://wiki.openmrs.org/display/docs/Pull+Request+Tips

@MitchellBot, thanks for your PR! By analyzing the annotation information on this pull request, we identified @bmamlin, @k-joseph and @rkorytkowski to be potential reviewers

@Micherman, thanks for your PR! By analyzing the annotation information on this pull request, we identified @bmamlin, @teleivo and @ys-achinta to be potential reviewers

@MitchellBot in addition to the ticket number, we also recommend adding some text as stated at https://wiki.openmrs.org/display/docs/Pull+Request+Tips

@blavigne13 do you still have interest in finishing this? :)

@dkayiwa Sorry. I have updated the comment on the jira ticket (I think that's what you meant, right?)

@wluyima what can we do to get this merged?

@blavigne13 this pull request has more commits than it should. Do you mind creating a new one as you take advantage of these tips? https://wiki.openmrs.org/display/docs/Pull+Request+Tips

@teleivo, thanks for your PR! By analyzing the annotation information on this pull request, we identified @bmamlin, @chethandeshpande and @suniala to be potential reviewers

@dkayiwa I've made the changes and pushed a new commit to this branch. Isn't the pull request supposed to update automatically? Is there something else I'm supposed to do to update this pull?

Thanks,
James

@MitchellBot did you get a chance to read this? https://wiki.openmrs.org/display/docs/Pull+Request+Tips

@dkayiwa yes, and as stated in the end of the document:

Avoid multiple pull requests for the same ticket. In most cases you don't need to create more than one pull request for the same ticket unless there is something wrong you did while creating it that you can't change. But if you are just making code changes to the original pull request you submitted, all you have to do is commit to the same branch linked to the pull request, once you push the code to your remote branch, github will automatically pick up the new changes and update the pull request. The only time you don't have to continue with the same pull request is when it has been merged or closed.

But I'm not seeing the "automatically pick up the new changes".

Am I overlooking something else in the document?

Which git commands did you use?

@dkayiwa I made my changes and tested, git commit --ammend, git push origin trunk-4918

@MitchellBot are you using command line to push? Or an IDE? Can i look at your log after pushing?

@MichalSlawin, thanks for your PR! By analyzing the annotation information on this pull request, we identified @ivange94, @tomaszmueller and @bmamlin to be potential reviewers

@MichalSlawin uuid comes from https://github.com/openmrs/openmrs-core/blob/master/api/src/main/java/org/openmrs/BaseOpenmrsObject.java#L29

It's a little bit of a mess, I had to reset to head a few times to get a clean slate to amend with. 

[trunk-4918.txt](https://github.com/openmrs/openmrs-core/files/468633/trunk-4918.txt)

Sorry about the mistake with branch name

@MitchellBot so are you going to just create a new pull request or fix this? :)

@dkayiwa I can't tell what I did wrong or how to fix it. 
I was avoiding creating a new request as per our documentation we should just update the original.

Do you know what I need to do to fix it or should I just close and re-open?

Though we do not recommend it, if all fails just close and create a new one?

@MitchellBot, thanks for your PR! By analyzing the annotation information on this pull request, we identified @bmamlin, @mogoodrich and @suniala to be potential reviewers

This is a redo of https://github.com/openmrs/openmrs-core/pull/1826 due to some technical difficulties. 

@vshl, thanks for your PR! By analyzing the annotation information on this pull request, we identified @bmamlin, @dkayiwa and @aj-jaswanth to be potential reviewers

@MitchellBot, thanks for your PR! By analyzing the annotation information on this pull request, we identified @bmamlin and @chethandeshpande to be potential reviewers

@preethi29, thanks for your PR! By analyzing the annotation information on this pull request, we identified @bmamlin, @suniala and @dkayiwa to be potential reviewers

@MichalSlawin, thanks for your PR! By analyzing the annotation information on this pull request, we identified @bmamlin, @jdegraft and @suniala to be potential reviewers

@preethi29 does mvn clean install work fine your side?

@dkayiwa fixed the issues

@preethi29, thanks for your PR! By analyzing the annotation information on this pull request, we identified @dkayiwa, @bmamlin and @tobivogel to be potential reviewers

@teleivo, thanks for your PR! By analyzing the annotation information on this pull request, we identified @bmamlin, @dkayiwa and @suniala to be potential reviewers

@bharatak, thanks for your PR! By analyzing the annotation information on this pull request, we identified @wluyima, @bmamlin and @suniala to be potential reviewers

@MichalSlawin since these are used only in the legacyui, let us entirely remove them, and just document about them.

@dkayiwa  Should I also remove concept.true and concept.false? And where to document about the properties I will remove?

@MichalSlawin those two are still in use by the core platform. So instead of removing them, just do not give them default values.

@teleivo, thanks for your PR! By analyzing the annotation information on this pull request, we identified @suniala, @bmamlin and @dkayiwa to be potential reviewers

I will rephrase it

Done

@wluyima thanks!

Fixed all the comments @wluyima 

@pradeepgandham am closing this pull request because it does not look correct. Did you get a chance to look at this? https://wiki.openmrs.org/display/docs/Pull+Request+Tips

@preethi29, thanks for your PR! By analyzing the annotation information on this pull request, we identified @bmamlin, @suniala and @rkorytkowski to be potential reviewers

@WolfSchlegel, thanks for your PR! By analyzing the annotation information on this pull request, we identified @bmamlin, @wluyima and @suniala to be potential reviewers

@WolfSchlegel since you opened this new pull request, should we close the other one? https://github.com/openmrs/openmrs-core/pull/1804

@PawelGutkowski after these changes, did you try test a fresh openmrs setup on mysql version 5.7?

@dkayiwa yes, I've compiled core and tested it with MySQL 5.7 and MySQL 5.6. Worked without problems.

Closing this because of the alternative from Namrata Nahete.

Yes, this pull request supersedes #1804.

Closing in favour of https://github.com/openmrs/openmrs-core/pull/1841

@preethi29 did you notice the above travis failure? :)

@vshl does mvn clean install succeed on your computer with these changes?

@dkayiwa can I retrigger it? It was failing last week because openmrs mavne repo was slow

Oh i see! Then no problem. :)

@dkayiwa The compilation succeeds but I have problem with 5 of the tests that conflict with what @wluyima mentioned regarding the getMembers() and setMembers() methods. 

I have mentioned it here: https://talk.openmrs.org/t/review-of-extending-cohort-member-table-with-new-columns/7760/13?u=vshankar

Beyond this, it seems to be functioning as expected.

Thanks.

@WolfSchlegel because all the 2.1 changes, so far, are also in 2.0, you are correct to say that for now, liquibase-update-2.1.xml will be empty. So yes none is moving out of liquibase-update-to-latest.xml
Therefore, create  liquibase-master.xml and in it, reference these two files.
Is this enough for you to finish this up? :)

I also somehow think that we need to do something about liquibase-schema-only.xml along the same lines as we are doing for liquibase-update-to-latest.xml

I think it would have been great to do the other non-related refactorings in a separate commit because it was hard for me to figure out what changes were addressing the actual bug mentioned by the ticket.

It would also be nice to add a unit test that demonstrates the fix.

@wluyima This is the first PR which does the refactoring of obsService.saveObs.  The subsequent PR will provide a fix for this issue.  Can you please let me know if this PR can be merged as part of this issue? Or should I be creating a new issue, now that the issue is already reviewed.  From next time, I'll ensure that a ticket is created separately for refactoring.

@karrtikiyer-tw, thanks for your PR! By analyzing the annotation information on this pull request, we identified @bmamlin, @WolfSchlegel and @dkayiwa to be potential reviewers

@karrtikiyer-tw thank you so much for working on this! :)
Do you mind squashing these commits into one as advised at? https://wiki.openmrs.org/display/docs/Pull+Request+Tips

@dkayiwa : Thanks for the inputs, have squashed the commits.

I see, thanks!

In theory you don't have to create a ticket for refactoring, next time you can use the same PR but use different commits and wait to squash them

Merged at https://git.io/vPJCd

@wluyima pushed a commit with changes you asked for

@teleivo, thanks for your PR! By analyzing the annotation information on this pull request, we identified @bmamlin, @chethandeshpande and @lluismf to be potential reviewers

@dkayiwa done, please review again :)
thank you!!

@teleivo, thanks for your PR! By analyzing the history of the files in this pull request, we identified @bmamlin, @ys-achinta and @jdegraft to be potential reviewers.

@teleivo, thanks for your PR! By analyzing the history of the files in this pull request, we identified @bmamlin to be a potential reviewer.

These changes are definitely going to break implementations

The build seems to be broken due to some failing tests

@wluyima how can these changes break implementations?

These are DB constraints!

@wluyima or do you mean that ConceptSource.description should be allowed empty strings?

thats the table on 2.0

``` sql
concept_reference_source | CREATE TABLE `concept_reference_source` (
  `concept_source_id` int(11) NOT NULL AUTO_INCREMENT,
  `name` varchar(50) NOT NULL DEFAULT '',
  `description` text NOT NULL,
```

It appears like description is not nullable so I guess it's fine to add the constraint in the validator and hbm file

@wluyima build is fine now :+1: 

@teleivo, thanks for your PR! By analyzing the history of the files in this pull request, we identified @bmamlin, @ys-achinta and @jdegraft to be potential reviewers.

@bharatak, thanks for your PR! By analyzing the history of the files in this pull request, we identified @wluyima, @bmamlin and @dkayiwa to be potential reviewers.

Thanks for the PR @bharatak I think we all agreed that removing or adding a member from or to a obs group should make it dirty. I also think you're mixing up obs in an encounter with obs in an obs group. TRUNK-4944 is purely about obs in obs group and we should address just that as part of this ticket.

@preethi29, thanks for your PR! By analyzing the history of the files in this pull request, we identified @bmamlin, @dkayiwa and @bharatak to be potential reviewers.

@wluyima I have updated the PR with your comments.  Can I request you to please have a look once? Also, if possible, if you can give all the comments at once, it will work better.  We are nearing a deadline and we appreciate your efforts regarding this PR merge.  Thank you.

@teleivo, thanks for your PR! By analyzing the history of the files in this pull request, we identified @rkorytkowski, @mblanchette and @dkayiwa to be potential reviewers.

@teleivo, thanks for your PR! By analyzing the history of the files in this pull request, we identified @bmamlin and @ddworken to be potential reviewers.

[![Coverage Status](https://coveralls.io/builds/8257125/badge)](https://coveralls.io/builds/8257125)

Coverage increased (+0.1%) to 55.425% when pulling **33f939fed74f68a37c8628a051250c4acc89af61 on teleivo:TRUNK-1916** into **0819868e2163b17472abef2090b5fbf7525caff7 on openmrs:master**.

@dkayiwa and @wluyima : Wanted to check if there is any update on the code review initiated for this item?

@karrtikiyer-tw it is a shame that we did not have any unit tests for this method. I tried your new tests and found them to fail with the existing code (before your changes). Looking into why.

@karrtikiyer-tw do you also mind giving a summary regarding what you had to change in order to improve the performance?

@dkayiwa : I think I know why the new test cases that I have written are failing on the old code, this is because the SQL query formed requires the field present in order by clause to be present in select clause, and in the old code this is not happening, the select clause in old code only contains select \* from patient, and not fields from identifier and person name table which are added to the order by clause. I agree that we should have ideally had some test cases for the earlier code, if so, these SQL query formation issues would have been caught by now leaving aside the performance issue.

@dkayiwa : I have tried providing the summary in the description of the pull request, can you go through it once and let me know if you need more details? Basically now the query is split in two parts instead of a single query: 1> First fetch the duplicate patient ID's using native SQL, 2> Fetch all the patients based on the patient ID's retrieved from step 1. So the self joins and <> checks which were present earlier are removed, which improves the performance.

@MichalSlawin are you still responding to the review comments? :)

@dkayiwa I don' t really know much about using datasets yet and I am keep making other tests fail. So I think it might be better if I unassign myself for now so someone else can take this ticket.

@drbobrinkman, thanks for your PR! By analyzing the history of the files in this pull request, we identified @bmamlin, @dkayiwa and @tomaszmueller to be potential reviewers.

[![Coverage Status](https://coveralls.io/builds/8270182/badge)](https://coveralls.io/builds/8270182)

Coverage increased (+0.007%) to 55.416% when pulling **f767793b6ed4e1f1871ff86a1e75e7d771891ac5 on drbobrinkman:TRUNK-2877** into **fcae7dd3df36dc30d0ffed131663f4f4f8de9edc on openmrs:master**.

[![Coverage Status](https://coveralls.io/builds/8276755/badge)](https://coveralls.io/builds/8276755)

Changes Unknown when pulling **1f9710d9f40530412d576a4452ad5b99b06cc849 on vshl:TRUNK-4906-Expanded-Cohort-Details** into *\* on openmrs:master**.

@drbobrinkman thanks for working on this! 👍 
Did you actually test it out in the web interface to confirm that all is working as expected?

@MichalSlawin thanks for the feedback. In that case, let me close this pull request.

@wluyima Thank you.

Sort of. I thoroughly tested the "simple" route. With the "advanced" route
I tested it, and I _think_ I was thorough, but there were some options that
I may not have understood.

With the "testing" route it is untested. I don't know proper values to put
in the web form for that version. Of course I don't think the previous test
suite tested that option either.

On Tue, Oct 11, 2016 at 7:29 AM, dkayiwa notifications@github.com wrote:

> @drbobrinkman https://github.com/drbobrinkman thanks for working on
> this! 👍
> Did you actually test it out in the web interface to confirm that all is
> working as expected?
> 
> —
> You are receiving this because you were mentioned.
> Reply to this email directly, view it on GitHub
> https://github.com/openmrs/openmrs-core/pull/1854#issuecomment-252892175,
> or mute the thread
> https://github.com/notifications/unsubscribe-auth/AAkGECBdrlGZYsN30Ltp0PcZgLFrNuE6ks5qy3MvgaJpZM4KS-Oi
> .

[![Coverage Status](https://coveralls.io/builds/8289167/badge)](https://coveralls.io/builds/8289167)

Coverage decreased (-0.1%) to 55.13% when pulling **29882a5a48b9f2820a40c064dc11ac0a55a852e0 on WolfSchlegel:TRUNK-3638-B** into **1f3727b33ff28aafad52c4c5223056c311182539 on openmrs:master**.

Regarding liquibase-schema-only.xml, please let me know your requirements. Would it be the same exercise, i.e. introduce a master file that includes multiple files? 

@teleivo thank you very much for doing this code review. Please keep up the great spirit!!! 👍 👍 👍 

@22Sandu, thanks for your PR! By analyzing the history of the files in this pull request, we identified @k-joseph, @wluyima and @rkorytkowski to be potential reviewers.

@preethi29, thanks for your PR! By analyzing the history of the files in this pull request, we identified @bharatak, @bmamlin and @rkorytkowski to be potential reviewers.

[![Coverage Status](https://coveralls.io/builds/8318910/badge)](https://coveralls.io/builds/8318910)

Coverage increased (+0.007%) to 55.378% when pulling **82ade5010cca6d9a1a831d1ce3c0b88cc69a7ccf on preethi29:TRUNK-4963** into **4fba6363dc5e3865dcf166331a129c3b9066193b on openmrs:master**.

[![Coverage Status](https://coveralls.io/builds/8319097/badge)](https://coveralls.io/builds/8319097)

Coverage increased (+0.02%) to 55.388% when pulling **0261ce0533712065d41ddbde78962c3207cc747a on 22Sandu:TRUNK-4781** into **4fba6363dc5e3865dcf166331a129c3b9066193b on openmrs:master**.

[![Coverage Status](https://coveralls.io/builds/8324343/badge)](https://coveralls.io/builds/8324343)

Coverage decreased (-0.01%) to 55.358% when pulling **3c1ecc42814f04cf1a63dec6aa4f85704ef643f7 on preethi29:TRUNK-4963** into **4fba6363dc5e3865dcf166331a129c3b9066193b on openmrs:master**.

@22Sandu it is great to always include the ticket number in the commit message. Hopefully you got  a chance to look at https://wiki.openmrs.org/display/docs/Pull+Request+Tips

@22Sandu i have also just modified my second last comment on the JIRA ticket regarding unit testing.

@samshuster, thanks for your PR! By analyzing the history of the files in this pull request, we identified @bmamlin and @suniala to be potential reviewers.

[![Coverage Status](https://coveralls.io/builds/8349347/badge)](https://coveralls.io/builds/8349347)

Coverage increased (+0.01%) to 55.265% when pulling **7ac06edca29a40793402290f0fe1a49c95de8355 on samshuster:TRUNK-4869** into **6e98a8cf477171eeb085d72d72f058418a0968ba on openmrs:master**.

[![Coverage Status](https://coveralls.io/builds/8349429/badge)](https://coveralls.io/builds/8349429)

Coverage increased (+0.1%) to 55.396% when pulling **8a25aa03776d9bfee5bcb961acb5f840f18b0afe on samshuster:TRUNK-4869** into **6e98a8cf477171eeb085d72d72f058418a0968ba on openmrs:master**.

first pull request for this project. I think i followed all directions!

@jdegraft, thanks for your PR! By analyzing the history of the files in this pull request, we identified @bmamlin, @yousefhamza and @dkayiwa to be potential reviewers.

[![Coverage Status](https://coveralls.io/builds/8351394/badge)](https://coveralls.io/builds/8351394)

Coverage increased (+0.03%) to 55.279% when pulling **151c48e26e789547dfe83b4b8ae8bf2b11f3375b on jdegraft:TRUNK-4883** into **6e98a8cf477171eeb085d72d72f058418a0968ba on openmrs:master**.

@jdegraft would this work for the initial setup?

@dkayiwa, this runs after the update filter which is part of the initial setup. The update filter runs the liquidate updates.

@jdegraft if am doing an initial setup (installation for the first time), would this run?

[![Coverage Status](https://coveralls.io/builds/8359728/badge)](https://coveralls.io/builds/8359728)

Coverage increased (+0.005%) to 55.256% when pulling **2ffdf76a1b856bb5b7a99961ba672c65595595ae on samshuster:TRUNK-4869** into **6e98a8cf477171eeb085d72d72f058418a0968ba on openmrs:master**.

I see thanks for your patience @dkayiwa. I removed the formatting change that was introduced by accident.

I made sure the project builds with a mvn clean install.

Yes, doesn't the initial setup go through the update filter. Besides it is the update filter which starts up openmrs and the call to update the indexes happens after this call to start up openmrs.

@jdegraft did you actually test it out by trying to setup a brand new OpenMRS instance and confirm that this line is executed?

@dkayiwa, I will do some more tests overnight.

[![Coverage Status](https://coveralls.io/builds/8405441/badge)](https://coveralls.io/builds/8405441)

Changes Unknown when pulling **43ded0f3bcc7861812ba69d6ec3d4349084a08ad on karrtikiyer-tw:TRUNK-4949** into *\* on openmrs:master**.

[![Coverage Status](https://coveralls.io/builds/8405604/badge)](https://coveralls.io/builds/8405604)

Coverage increased (+0.3%) to 55.618% when pulling **79952f5bbcc24eee78b2394da14f6e6300cd75f4 on karrtikiyer-tw:TRUNK-4949** into **c907036a92ed1fdb50baced672f7910cf1520d14 on openmrs:master**.

Can you please add tests for the validator, all the new service and Cohort methods?

@samshuster, thanks for your PR! By analyzing the history of the files in this pull request, we identified @bmamlin, @suniala and @dkayiwa to be potential reviewers.

[![Coverage Status](https://coveralls.io/builds/8462049/badge)](https://coveralls.io/builds/8462049)

Coverage increased (+0.05%) to 55.539% when pulling **d54fe880b156089554da77e105ec226aabd2b3cb on samshuster:TRUNK-4720** into **9446f7c2f1143b9d163ebe2130972f768468dd53 on openmrs:master**.

@samshuster thank you so much for working on this! 👍 
My recommendation is that you separate this in two pull requests. One for actually fixing the reported problem. And the second for extracting the code in the two new methods that you have introduced. That way, it will be easier to tell which actual changes are for fixing the problem and which ones are for refactoring.

[![Coverage Status](https://coveralls.io/builds/8465108/badge)](https://coveralls.io/builds/8465108)

Coverage increased (+0.02%) to 55.515% when pulling **199d2ca736dd05678a43be7f19c118ce94810231 on jdegraft:TRUNK-4883** into **9446f7c2f1143b9d163ebe2130972f768468dd53 on openmrs:master**.

ok sure sounds good!

[![Coverage Status](https://coveralls.io/builds/8465164/badge)](https://coveralls.io/builds/8465164)

Coverage increased (+0.1%) to 55.616% when pulling **cd5ad7a319511f133902bf511b150e790a907f51 on jdegraft:TRUNK-4883** into **9446f7c2f1143b9d163ebe2130972f768468dd53 on openmrs:master**.

[![Coverage Status](https://coveralls.io/builds/8465375/badge)](https://coveralls.io/builds/8465375)

Coverage increased (+0.1%) to 55.614% when pulling **1398f41fcb7f69d4a03781a4635b33af9ac78615 on samshuster:TRUNK-4720** into **9446f7c2f1143b9d163ebe2130972f768468dd53 on openmrs:master**.

@dkayiwa this pull request now contains no refactoring. Only test addition and then the exact lines that needed to be changed.

@dkayiwa how would I make the other pull request? Do I need to have an issue created first? Or can I just create a separate branch for this issue? Will hold off on creating one until I know what to do.

@samshuster just create a new branch

@samshuster, thanks for your PR! By analyzing the history of the files in this pull request, we identified @bmamlin, @wluyima and @teleivo to be potential reviewers.

[![Coverage Status](https://coveralls.io/builds/8469289/badge)](https://coveralls.io/builds/8469289)

Coverage decreased (-0.1%) to 55.542% when pulling **f7b79fd49f9004a93f01e117deeeed0ca2ceaafb on samshuster:TRUNK-4696** into **f5ef7a77e80bc821895529dd245f8b2bd4be5a04 on openmrs:master**.

@bhanu011 this does not look right. Did you get a chance to look at https://wiki.openmrs.org/display/docs/Pull+Request+Tips

@preethi29, thanks for your PR! By analyzing the history of the files in this pull request, we identified @bmamlin, @bharatak and @ys-achinta to be potential reviewers.

[![Coverage Status](https://coveralls.io/builds/8492526/badge)](https://coveralls.io/builds/8492526)

Coverage decreased (-0.02%) to 55.614% when pulling **8d4163926b2d64ba31fa62b1eefbf22bbc23880d on preethi29:TRUNK-4965** into **f5ef7a77e80bc821895529dd245f8b2bd4be5a04 on openmrs:master**.

@dkayiwa updated the pull request

[![Coverage Status](https://coveralls.io/builds/8493851/badge)](https://coveralls.io/builds/8493851)

Coverage decreased (-0.1%) to 55.539% when pulling **b4fa170f7136b3f0b0678cd275f81ab0a3cfe202 on preethi29:TRUNK-4965** into **f5ef7a77e80bc821895529dd245f8b2bd4be5a04 on openmrs:master**.

@22Sandu are you still working on this?

Did you see my comment on the ticket? I don't think we need to add this column, I think they can implement this with a global property

[![Coverage Status](https://coveralls.io/builds/8510809/badge)](https://coveralls.io/builds/8510809)

Coverage increased (+0.1%) to 55.669% when pulling **977cf97485ed0f8906faec8639345ae9d8ff0c37 on samshuster:TRUNK-4696** into **c016290d754469d8abe1219551e09cc7fc6ad461 on openmrs:master**.

[![Coverage Status](https://coveralls.io/builds/8511138/badge)](https://coveralls.io/builds/8511138)

Coverage increased (+2.0e-05%) to 55.535% when pulling **b33cae6e570d0b0195c9df751068dbaeed087694 on samshuster:TRUNK-4696** into **c016290d754469d8abe1219551e09cc7fc6ad461 on openmrs:master**.

[![Coverage Status](https://coveralls.io/builds/8511165/badge)](https://coveralls.io/builds/8511165)

Coverage increased (+0.1%) to 55.669% when pulling **b33cae6e570d0b0195c9df751068dbaeed087694 on samshuster:TRUNK-4696** into **c016290d754469d8abe1219551e09cc7fc6ad461 on openmrs:master**.

[![Coverage Status](https://coveralls.io/builds/8515289/badge)](https://coveralls.io/builds/8515289)

Coverage decreased (-0.01%) to 55.655% when pulling **1b9165e1032f7f776eb1b5484a324a1e31af94e8 on jdegraft:TRUNK-4883** into **692ff644d67d90b6e973fa4cd523f4d16ef9515b on openmrs:master**.

I guess this is 

[![Coverage Status](https://coveralls.io/builds/8540115/badge)](https://coveralls.io/builds/8540115)

Coverage decreased (-0.02%) to 55.649% when pulling **1b9165e1032f7f776eb1b5484a324a1e31af94e8 on jdegraft:TRUNK-4883** into **692ff644d67d90b6e973fa4cd523f4d16ef9515b on openmrs:master**.

[![Coverage Status](https://coveralls.io/builds/8552718/badge)](https://coveralls.io/builds/8552718)

Coverage increased (+0.1%) to 55.407% when pulling **111d8a70424ac7d3ff7e9501b0531dbb8b46c09a on WolfSchlegel:TRUNK-3638-B** into **1f3727b33ff28aafad52c4c5223056c311182539 on openmrs:master**.

@WolfSchlegel did you pull the latest upstream changes before making another commit for this? :)

@PawelGutkowski, thanks for your PR! By analyzing the history of the files in this pull request, we identified @bmamlin, @suniala and @jdegraft to be potential reviewers.

[![Coverage Status](https://coveralls.io/builds/8585682/badge)](https://coveralls.io/builds/8585682)

Coverage decreased (-0.03%) to 55.633% when pulling **2db9b51b4f48b8629c902c2c0d32ee4b403d0cea on PawelGutkowski:TRUNK-3675** into **b196a68ad9ce3da8ac00c46e350398eb2adad530 on openmrs:master**.

[![Coverage Status](https://coveralls.io/builds/8585729/badge)](https://coveralls.io/builds/8585729)

Coverage decreased (-0.004%) to 55.654% when pulling **2db9b51b4f48b8629c902c2c0d32ee4b403d0cea on PawelGutkowski:TRUNK-3675** into **b196a68ad9ce3da8ac00c46e350398eb2adad530 on openmrs:master**.

@ssmusoke, thanks for your PR! By analyzing the history of the files in this pull request, we identified @bmamlin and @rkorytkowski to be potential reviewers.

I do not see you assigned this ticket. You may have a look at https://wiki.openmrs.org/display/docs/Pull+Request+Tips :)

@dkayiwa Claimed. Your attention to detail on PRs is much appreciated 

@ssmusoke lol. Are you still doing any more work on this, as per the ticket status? :)

@lkukielka, thanks for your PR! By analyzing the history of the files in this pull request, we identified @bmamlin, @dkayiwa and @suniala to be potential reviewers.

[![Coverage Status](https://coveralls.io/builds/8643604/badge)](https://coveralls.io/builds/8643604)

Coverage increased (+0.02%) to 55.673% when pulling **8669f1d3169130d2da7d65a050e62856b54f5d67 on lkukielka:master** into **6cf946646ef8357fccffd3d15ebed957a4639521 on openmrs:master**.

Closing this because the reporter decided to do it differently as per the ticket comments.

@mjanuchowski, thanks for your PR! By analyzing the history of the files in this pull request, we identified @bmamlin, @teleivo and @dkayiwa to be potential reviewers.

[![Coverage Status](https://coveralls.io/builds/8672607/badge)](https://coveralls.io/builds/8672607)

Coverage increased (+0.01%) to 55.722% when pulling **2803f67e29ad590b1fe35d2553e86281bf1349be on mjanuchowski:TRUNK-4870** into **ef0d944ed7862c671808d2311d660097323d1f06 on openmrs:master**.

@preethi29, thanks for your PR! By analyzing the history of the files in this pull request, we identified @bmamlin, @suniala and @ys-achinta to be potential reviewers.

[![Coverage Status](https://coveralls.io/builds/8679134/badge)](https://coveralls.io/builds/8679134)

Coverage increased (+0.03%) to 55.737% when pulling **590efe9475c3945828e897787cc57682950a2236 on preethi29:TRUNK-4970** into **ef0d944ed7862c671808d2311d660097323d1f06 on openmrs:master**.

@aonomike, thanks for your PR! By analyzing the history of the files in this pull request, we identified @bharatak, @bmamlin and @dkayiwa to be potential reviewers.

@aonomike am closing this pull request because it does not look right. Did you get a chance to look at this? https://wiki.openmrs.org/display/docs/Pull+Request+Tips

[![Coverage Status](https://coveralls.io/builds/8703519/badge)](https://coveralls.io/builds/8703519)

Coverage increased (+0.02%) to 55.632% when pulling **5b039efd45ebead32470a12e01d76f81c2237871 on mjanuchowski:TRUNK-4870** into **17c22ce8bd13e7db312ad3af3a5dd163e5db5ac7 on openmrs:master**.

@mjanuchowski thanks for the making the changes :+1: 

- The files containing change sets have been renamed
-  liquibase-update-to-2.0.xml contains the bulk of the changes that were previously in liquibase-update-to-latest.xml
- liquibase-update-to-2.1.xml contains a single changeset

[![Coverage Status](https://coveralls.io/builds/8710938/badge)](https://coveralls.io/builds/8710938)

Coverage increased (+0.02%) to 55.635% when pulling **a34a020f0acb2480a9656d6d0d0f2e0bb519999d on WolfSchlegel:TRUNK-3638-B** into **17c22ce8bd13e7db312ad3af3a5dd163e5db5ac7 on openmrs:master**.

[![Coverage Status](https://coveralls.io/builds/8713754/badge)](https://coveralls.io/builds/8713754)

Coverage increased (+0.01%) to 55.623% when pulling **3ae01a7f54fcbefa46636931b44366bc8c33d7ba on mjanuchowski:TRUNK-4870** into **17c22ce8bd13e7db312ad3af3a5dd163e5db5ac7 on openmrs:master**.

[![Coverage Status](https://coveralls.io/builds/8722143/badge)](https://coveralls.io/builds/8722143)

Changes Unknown when pulling **3c6be0322a3d0ccbdf8740d70b53e5a67663d726 on SharonVarghese:TRUNK-4497** into *\* on openmrs:master**.

Thank you for all the suggestions! Is there any extra work on this ticket?

As suggested by you. I commented using the "files changed" view, but still the comments are not ordering chronologically. This is certainly a bug with github. I even browsed to the particular commit and added a comment below the latest reply.

@Nishen-Peiris, thanks for your PR! By analyzing the history of the files in this pull request, we identified @bmamlin, @karrtikiyer-tw and @jdegraft to be potential reviewers.

[![Coverage Status](https://coveralls.io/builds/8776002/badge)](https://coveralls.io/builds/8776002)

Coverage increased (+0.1%) to 55.744% when pulling **b345572bb73fcb154353adf1924fce7a45b88c44 on Nishen-Peiris:TRUNK-4839** into **17c22ce8bd13e7db312ad3af3a5dd163e5db5ac7 on openmrs:master**.

[![Coverage Status](https://coveralls.io/builds/8777111/badge)](https://coveralls.io/builds/8777111)

Coverage increased (+0.1%) to 55.727% when pulling **501d62259f6c0d801250a2e78b8eb8c6fb5e0e41 on PawelGutkowski:TRUNK-3675** into **17c22ce8bd13e7db312ad3af3a5dd163e5db5ac7 on openmrs:master**.

[![Coverage Status](https://coveralls.io/builds/8777240/badge)](https://coveralls.io/builds/8777240)

Coverage increased (+0.1%) to 55.708% when pulling **501d62259f6c0d801250a2e78b8eb8c6fb5e0e41 on PawelGutkowski:TRUNK-3675** into **17c22ce8bd13e7db312ad3af3a5dd163e5db5ac7 on openmrs:master**.

@Nishen-Peiris this pull request does not look right. Did you pull the latest upstream changes before committing? Or did you take a look at https://wiki.openmrs.org/display/docs/Pull+Request+Tips

Can put you please move the changesets in this PR from the middle of the file to the end, we try to follow that convention

And can you make sure you that you have configured git well to handle line endings properly?

Check out Apache FilenameUtils, it contains a lot of handy methods to deal with file names (maybe you won't need any of it)

@WolfSchlegel i tried testing your changes by doing a fresh openmrs setup but got the error message below:

There was an error while updating the database to the latest. file: liquibase-update-to-latest.xml. Error: Migration failed for change set liquibase-update-to-2.0.xml::20090225-1551::dthomas: Reason: liquibase.exception.DatabaseException: Error executing SQL ALTER TABLE `location_tag` CHANGE `retired_reason` `retire_reason` varchar(255): Unknown column 'retired_reason' in 'location_tag': Caused By: Error executing SQL ALTER TABLE `location_tag` CHANGE `retired_reason` `retire_reason` varchar(255): Unknown column 'retired_reason' in 'location_tag': Caused By: Unknown column 'retired_reason' in 'location_tag' Error while trying to update to the latest database version

Does it work on your side?

Since your changes look obviously correct, i tried to look into the cause of this failure. I discovered that the changeset id is inserted in liquibase-schema-only.sql and hence is supposed to be marked as run. This was not the case and i found out that it's because liquibase does not use the changeset id alone to skip a changeset, but also the name of the file in which the changeset belongs. So this https://github.com/openmrs/openmrs-core/blob/master/api/src/main/resources/liquibase-schema-only.xml#L3455 needs to be changed to the name of the file where the changeset currently resides, and that is, liquibase-update-to-2.0.xml

I think you are skipping past some of the comments I added, please go through all the comments and make the necessary changes and the test will pass, this is what you need to do:
1- Add a protected setter for `cohort` field in the `CohortMembership` class
2- Update Cohort.addMembership(CohortMembership) to call the protected setter above
3- Make sure that you never add items to the members collection in Cohort from anywhere else except for the addMembership(CohortMembership) method, every other place should delegate to this

This is hod your getMembers setter should look like:

```
public Collection<CohortMembership> getMembers() {
        if (members == null) {
            members = new TreeSet<CohortMembership>();
        }
        return members;
}
```

Below is how Cohort.addMembership(CohortMembership) should be:

```
public void addMembership(CohortMembership cohortMembership) {
     if (!this.contains(cohortMembership.getPatient().getPatientId())) {
          cohortMembership.setCohort(this);
          getMembers().add(cohortMembership);
     }
}
```

[![Coverage Status](https://coveralls.io/builds/8819054/badge)](https://coveralls.io/builds/8819054)

Coverage increased (+0.006%) to 55.74% when pulling **1fc2dbc83d2a1bfbf2dc546a9e428daabab5a036 on mjanuchowski:TRUNK-4870** into **de99ca9b09cfcecb1f232c2aff4bd4039ee0703b on openmrs:master**.

@Nishen-Peiris am closing this pull request such that you create a new and clean one. :)

Closing this because of failure to reproduce the reported problem.

Thanks. I will create a new and clean pull request.

On Tue, Nov 15, 2016 at 3:47 AM, dkayiwa notifications@github.com wrote:

> Closed #1869 https://github.com/openmrs/openmrs-core/pull/1869.
> 
> —
> You are receiving this because you were mentioned.
> Reply to this email directly, view it on GitHub
> https://github.com/openmrs/openmrs-core/pull/1869#event-858544963, or mute
> the thread
> https://github.com/notifications/unsubscribe-auth/ARbkukkeWmFOlDiig4jWEQJOyHAOeT0Lks5q-N3qgaJpZM4KvhhA
> .

## 

Nishen Peiris
Undergraduate,
Department of Computer Engineering,
Faculty of Engineering,
University of Peradeniya.
mobile: +94775328115
LinkedIn: linkedin.com/in/nishenkpeiris

@vshl are you aware of the merge conflicts on this pull request? :)

@Nishen-Peiris, thanks for your PR! By analyzing the history of the files in this pull request, we identified @bmamlin, @karrtikiyer-tw and @jdegraft to be potential reviewers.

[![Coverage Status](https://coveralls.io/builds/8832158/badge)](https://coveralls.io/builds/8832158)

Coverage increased (+0.1%) to 55.716% when pulling **096e1079051f04a2acf8cb62bbb6807be4651fbd on Nishen-Peiris:TRUNK-4839** into **b6b800a00ad4880d905d0cc75c868a53557f8ce2 on openmrs:master**.

The conflicts must because of the recent commit that moved the liquibase changesets into separate files, @vshl do you mind moving the new changesets to the new `liquibase-update-to-2.1.xml` file, you will need to first pull the latest changes from github though

@dkayiwa @wluyima Thanks for the heads-up. I am aware of the conflict. I'm in the process of resolving it.

@Nishen-Peiris, thanks for your PR! By analyzing the history of the files in this pull request, we identified @bmamlin, @karrtikiyer-tw and @jdegraft to be potential reviewers.

Thanks @Nishen-Peiris :)

[![Coverage Status](https://coveralls.io/builds/8849844/badge)](https://coveralls.io/builds/8849844)

Coverage decreased (-0.02%) to 55.706% when pulling **b899e4fd76bb05bca25e28e841250823c099dbad on Nishen-Peiris:TRUNK-4839** into **d7228cb56a262d8a4672b1c78ac081845046dd11 on openmrs:master**.

You are welcome @dkayiwa 

@Nishen-Peiris, thanks for your PR! By analyzing the history of the files in this pull request, we identified @karrtikiyer-tw, @lluismf and @bmamlin to be potential reviewers.

@Nishen-Peiris thanks again for working on this. :)
Do you mind squashing the commits into one?
Hopefully you had a look at this: https://wiki.openmrs.org/display/docs/Pull+Request+Tips

[![Coverage Status](https://coveralls.io/builds/8852612/badge)](https://coveralls.io/builds/8852612)

Coverage increased (+0.1%) to 55.709% when pulling **9092e73c5ea5c1ba9047f774acc1f29f74174db4 on Nishen-Peiris:TRUNK-4839** into **e037b58e798fd99a5a8a1f25cb059a3c7a033001 on openmrs:master**.

@dkayiwa OK.

I'm closing this pull request.  This is the link to the new pull request. https://github.com/openmrs/openmrs-core/pull/1873

[![Coverage Status](https://coveralls.io/builds/8857548/badge)](https://coveralls.io/builds/8857548)

Coverage increased (+0.1%) to 55.722% when pulling **c550d2eaa693f0e0c522e6d59c6a850f01b5776d on Nishen-Peiris:TRUNK-4839** into **e037b58e798fd99a5a8a1f25cb059a3c7a033001 on openmrs:master**.

[![Coverage Status](https://coveralls.io/builds/8860444/badge)](https://coveralls.io/builds/8860444)

Coverage increased (+0.1%) to 55.727% when pulling **898bf3b94629a292a28bd34b5e374a3d3f320369 on PawelGutkowski:TRUNK-3675** into **e037b58e798fd99a5a8a1f25cb059a3c7a033001 on openmrs:master**.

@ssmusoke, thanks for your PR! By analyzing the history of the files in this pull request, we identified @rkorytkowski, @Fahv and @bmamlin to be potential reviewers.

@ssmusoke did you notice the travis failure?

@dkayiwa buffer overflow for OpenJDK 6 although OpenJDK 7 passes - don't think I can resolve that one 

@ssmusoke is this just formatting? You seem to have made many more changes than the other pull request.

@dkayiwa, yes its just formatting, I can try go back and try to clean up line by line to ensure only changes are visible if you think its necessary

@ssmusoke i would do formatting in another PR. That way a reviewer finds it easier to tell what actually changed.

@dkayiwa Let me fix this one instead of sending another 

@dkayiwa Reopened With even fewer changes 

I tried fixing the merge conflict. It worked but there's a conflict on api/src/main/resources/liquibase-update-to-2.1.xml now. I'm not sure why the automatic merge didn't happen, the only difference is one change i.e. the big chunk of changesets from my branch. I tried it locally and it asked to do a manual merge and all I had to do was accept my changes over the master branch (just one diffput). Is there another way to resolve this conflict automatically?

@wluyima Did you add any new comments? I got a notification, but I cannot find them.

Yes, when you can find it, either I have removed it because it was irrelevant or moved it to a new place which I assume you get another notification

@Nishen-Peiris thanks again for all that you are doing! 👍 
Since you already did this, i have gone ahead and merged it. You will create a new ticket about the code improvements that you are doing and then the upcoming pull requests will be based on it. :)


[![Coverage Status](https://coveralls.io/builds/8917913/badge)](https://coveralls.io/builds/8917913)

Coverage increased (+0.03%) to 55.736% when pulling **d58944304cf96f86b150290a2a4a6eb44054de87 on mjanuchowski:TRUNK-4870** into **7ce4dfae9a4672dcb2037fe50ebb21c8acdedc07 on openmrs:master**.

@lkukielka, thanks for your PR! By analyzing the history of the files in this pull request, we identified @bmamlin, @suniala and @dkayiwa to be potential reviewers.

[![Coverage Status](https://coveralls.io/builds/8926397/badge)](https://coveralls.io/builds/8926397)

Coverage decreased (-0.1%) to 55.61% when pulling **2d30c089e002e4113c9a4cc61e1b9f1c92a9b867 on lkukielka:master** into **e4d2ea970998b492de40bec0c17c1fa7e637e470 on openmrs:master**.

@dkayiwa thanks...

[![Coverage Status](https://coveralls.io/builds/8943172/badge)](https://coveralls.io/builds/8943172)

Coverage increased (+0.01%) to 55.731% when pulling **f164fef73fb6e43c2023e080ca5f2ec5fb386fbb on lkukielka:master** into **e4d2ea970998b492de40bec0c17c1fa7e637e470 on openmrs:master**.

Looks like the PR has some merge conflicts, do you mind resolving them please?
Have you addressed all the comments and are all the tests passing now?
@wluyima I've addressed all the comments to the fullest and the tests are passing. Regarding the conflict, the only change I see is the block of changesets that I am adding. How do I resolve it?
I don't seem to understand what you mean by blocking
This is the result of the merge that I tried locally: 

[liquibase-update-to-2.1.xml.txt](https://github.com/openmrs/openmrs-core/files/607442/liquibase-update-to-2.1.xml.txt)
@wluyima Sorry by block I meant chunk of code.
@lkukielka you should also squash your commits into one
That's why git is complaining, you need to fix those, first all those changesets no longer belong to that file. I did mention somewhere before that alternatively you could copy your new changesets somewhere temporarily, revert the changes in that liquibase file only, update your branch with the latest and then paste the new changets into the new 2.1 file
Ah okay. So that will be two commits? I will give it a try. Thanks.

[![Coverage Status](https://coveralls.io/builds/8958520/badge)](https://coveralls.io/builds/8958520)

Coverage increased (+0.01%) to 55.731% when pulling **e0d27a723b7ce967186cd4cad20a031418da8b7e on vshl:TRUNK-4906-Expanded-Cohort-Details** into **e4d2ea970998b492de40bec0c17c1fa7e637e470 on openmrs:master**.


[![Coverage Status](https://coveralls.io/builds/8963058/badge)](https://coveralls.io/builds/8963058)

Coverage decreased (-0.01%) to 55.706% when pulling **73d17ef9f7b23d4fabd79f40a0773ecb0b4033a2 on AdamGrzybkowski:TRUNK-4971** into **e4d2ea970998b492de40bec0c17c1fa7e637e470 on openmrs:master**.


[![Coverage Status](https://coveralls.io/builds/8963099/badge)](https://coveralls.io/builds/8963099)

Coverage decreased (-0.02%) to 55.703% when pulling **73d17ef9f7b23d4fabd79f40a0773ecb0b4033a2 on AdamGrzybkowski:TRUNK-4971** into **e4d2ea970998b492de40bec0c17c1fa7e637e470 on openmrs:master**.


[![Coverage Status](https://coveralls.io/builds/8966070/badge)](https://coveralls.io/builds/8966070)

Coverage increased (+0.005%) to 55.725% when pulling **5e261c91475d29703b4cdc06fe18c210a5931f66 on lkukielka:master** into **e4d2ea970998b492de40bec0c17c1fa7e637e470 on openmrs:master**.

@zulrich91, thanks for your PR! By analyzing the history of the files in this pull request, we identified @bmamlin, @suniala and @dkayiwa to be potential reviewers.

[![Coverage Status](https://coveralls.io/builds/8991924/badge)](https://coveralls.io/builds/8991924)

Coverage decreased (-0.02%) to 55.699% when pulling **37819326e4c62297603d1f16cc097d71588fc685 on zulrich91:TRUNK-4932** into **e4d2ea970998b492de40bec0c17c1fa7e637e470 on openmrs:master**.


[![Coverage Status](https://coveralls.io/builds/8997184/badge)](https://coveralls.io/builds/8997184)

Coverage decreased (-0.01%) to 55.711% when pulling **095fc5525b7ad1773e8eb639f6273a915bd02e40 on lkukielka:master** into **e4d2ea970998b492de40bec0c17c1fa7e637e470 on openmrs:master**.


[![Coverage Status](https://coveralls.io/builds/8997329/badge)](https://coveralls.io/builds/8997329)

Coverage decreased (-0.01%) to 55.711% when pulling **670c50b90a04e216bd359c35639b76635be1bf04 on lkukielka:master** into **e4d2ea970998b492de40bec0c17c1fa7e637e470 on openmrs:master**.

@teleivo Is current solution good enough?
@lkukielka your implementation was good. My suggested changes were ment for the tests. So please revert your changes. The goal is: to test that the method closes the given output stream as it suggests in the javadocs. Since you control what output stream gets passed into the method in your tests you can pass in a mock or an output stream where you override the close method, so you notice that it was closed.

Just as a note: having global state as your current implementation has it is not a good solution. Imagine this method is used by different threads,  they would share the state but might mean different streams.
Thanks a lot @dkayiwa
@zulrich91 did you get a chance to look at this? https://wiki.openmrs.org/display/docs/Pull+Request+Tips
@zulrich91 did you also get a chance to look at the Deprecation section on this page? https://wiki.openmrs.org/display/docs/Coding+Conventions

[![Coverage Status](https://coveralls.io/builds/9025934/badge)](https://coveralls.io/builds/9025934)

Coverage increased (+0.006%) to 55.731% when pulling **35200c347c17a071a7a9216616039b6f298fd3f7 on lkukielka:master** into **27f14513ce9f767cf74280b5dab82de50eeae439 on openmrs:master**.

@teleivo What do you think about current solution?
@rkorytkowski I've updated the PR. Tomorrow I will add some tests :) 

[![Coverage Status](https://coveralls.io/builds/9044792/badge)](https://coveralls.io/builds/9044792)

Coverage decreased (-0.07%) to 55.65% when pulling **81e7b4493d36d9be206e7093d9510a85e36711bb on AdamGrzybkowski:TRUNK-4971** into **27f14513ce9f767cf74280b5dab82de50eeae439 on openmrs:master**.

@lkukielka, thanks for your PR! By analyzing the history of the files in this pull request, we identified @kishoreyekkanti, @bmamlin and @gsluthra to be potential reviewers.

[![Coverage Status](https://coveralls.io/builds/9046022/badge)](https://coveralls.io/builds/9046022)

Coverage decreased (-0.01%) to 55.712% when pulling **e597e85bbe4716054833daf934da18572b934eb7 on lkukielka:TRUNK-4962** into **27f14513ce9f767cf74280b5dab82de50eeae439 on openmrs:master**.


[![Coverage Status](https://coveralls.io/builds/9059619/badge)](https://coveralls.io/builds/9059619)

Coverage decreased (-0.2%) to 55.574% when pulling **94aaa32d8c097ceb0adf1bc3982f0507fefbb19c on AdamGrzybkowski:TRUNK-4971** into **27f14513ce9f767cf74280b5dab82de50eeae439 on openmrs:master**.

@rkorytkowski I've extracted the logic to a separate file to be able to unit test it but the error is still present. What's more with the current approach we are trying to modify cache config after creating one from ehcache-api.xml which we cannot do
@rkorytkowski Ok, I've modified the code so now we have two cache managers which prevents us from getting "you can't modify cache dynamically" but the problem with recurrency is still there.
Thanks for the update. I reserved time tomorrow to look at it.

[![Coverage Status](https://coveralls.io/builds/9062441/badge)](https://coveralls.io/builds/9062441)

Coverage increased (+0.08%) to 55.8% when pulling **2f6f3bad627d441a3e09373b6ab7fa1d6929a725 on AdamGrzybkowski:TRUNK-4971** into **4dc0e2cdc26663b9d36d226a9f7f9bda9fe7881c on openmrs:master**.

@manuela-grindei, thanks for your PR! By analyzing the history of the files in this pull request, we identified @bmamlin, @WolfSchlegel and @ivange94 to be potential reviewers.

[![Coverage Status](https://coveralls.io/builds/9074765/badge)](https://coveralls.io/builds/9074765)

Coverage increased (+0.02%) to 55.747% when pulling **5cd7729193ec102a8d624adcaa2041c14330f122 on manuela-grindei:master** into **4dc0e2cdc26663b9d36d226a9f7f9bda9fe7881c on openmrs:master**.

@fanyui, thanks for your PR! By analyzing the history of the files in this pull request, we identified @bmamlin, @chethandeshpande and @suniala to be potential reviewers.

[![Coverage Status](https://coveralls.io/builds/9079888/badge)](https://coveralls.io/builds/9079888)

Coverage decreased (-0.02%) to 55.706% when pulling **5afe3546da630ebbaad5190726ed03a9b2f437ec on fanyui:TRUNCK-4923** into **4dc0e2cdc26663b9d36d226a9f7f9bda9fe7881c on openmrs:master**.

@AdamGrzybkowski, thanks for your PR! By analyzing the history of the files in this pull request, we identified @bmamlin, @tomaszmueller and @rkorytkowski to be potential reviewers.
@rkorytkowski I'm kind of stuck with this. I'm getting this error now http://pastebin.com/isU4CSVB. I've left some comments, to explain why I did what I did :)
@rkorytkowski, thanks for your PR! By analyzing the history of the files in this pull request, we identified @PawelGutkowski, @bmamlin and @ys-achinta to be potential reviewers.

[![Coverage Status](https://coveralls.io/builds/9083105/badge)](https://coveralls.io/builds/9083105)

Coverage increased (+0.02%) to 55.725% when pulling **89f9a38ddb66b13cda6b578e2a228df395bfa2a3 on lkukielka:master** into **179938bd8c9187b327e00e8eafc8ef568b009dac on openmrs:master**.

@rkorytkowski did you notice the travis failure?
@rkorytkowski PR updated :)

[![Coverage Status](https://coveralls.io/builds/9097586/badge)](https://coveralls.io/builds/9097586)

Coverage increased (+0.1%) to 55.812% when pulling **31249268fb51544a1b47288dda360e97a5c49108 on AdamGrzybkowski:TRUNK-4971** into **179938bd8c9187b327e00e8eafc8ef568b009dac on openmrs:master**.

I don't know what's the issue off hand. I'll have to run the code. I may have some time later today. Please continue working on other issues.
@AdamGrzybkowski, thanks for your PR! By analyzing the history of the files in this pull request, we identified @rkorytkowski to be a potential reviewer.

[![Coverage Status](https://coveralls.io/builds/9099256/badge)](https://coveralls.io/builds/9099256)

Coverage decreased (-0.003%) to 55.784% when pulling **d47eadf496f5169c7ac623b9acbe439d6711e47c on AdamGrzybkowski:TRUNK-4971** into **eeccac7ae121271ddbeda83e6465d9c5da7e65c0 on openmrs:master**.


[![Coverage Status](https://coveralls.io/builds/9099264/badge)](https://coveralls.io/builds/9099264)

Coverage increased (+0.02%) to 55.809% when pulling **d47eadf496f5169c7ac623b9acbe439d6711e47c on AdamGrzybkowski:TRUNK-4971** into **eeccac7ae121271ddbeda83e6465d9c5da7e65c0 on openmrs:master**.

@vshl do you mind squashing these commits into one?

[![Coverage Status](https://coveralls.io/builds/9101312/badge)](https://coveralls.io/builds/9101312)

Coverage decreased (-0.02%) to 55.765% when pulling **9e93646d3c7ff9f9cd01e4557aba9fee9261eb89 on AdamGrzybkowski:TRUNK-4971** into **eeccac7ae121271ddbeda83e6465d9c5da7e65c0 on openmrs:master**.


[![Coverage Status](https://coveralls.io/builds/9111170/badge)](https://coveralls.io/builds/9111170)

Coverage increased (+0.03%) to 55.813% when pulling **10d2ec1c86b195bfbe105fad1ede135261f87378 on vshl:TRUNK-4906-Expanded-Cohort-Details** into **76aa48db18ba406fa035742a51d0b14b226fe7ac on openmrs:master**.

@dkayiwa I squashed the commits. Thanks.
@manuela-grindei thanks again for working on this! 👍 
Could you fix the integration test failure that happen with these changes?
To see the failures, just run: mvn clean install -Pintegration-test

[![Coverage Status](https://coveralls.io/builds/9117355/badge)](https://coveralls.io/builds/9117355)

Coverage increased (+0.04%) to 55.826% when pulling **f0e3cef9bf5684625cc85e4b5e912124f468dccb on vshl:TRUNK-4906-Expanded-Cohort-Details** into **76aa48db18ba406fa035742a51d0b14b226fe7ac on openmrs:master**.

Fixed integration test failures.

[![Coverage Status](https://coveralls.io/builds/9117646/badge)](https://coveralls.io/builds/9117646)

Coverage increased (+0.04%) to 55.825% when pulling **78a6ad60ed1955c1ae2a89fad945dfe22777feb7 on manuela-grindei:master** into **76aa48db18ba406fa035742a51d0b14b226fe7ac on openmrs:master**.

@manuela-grindei can you squash these commits into one as advised at https://wiki.openmrs.org/display/docs/Pull+Request+Tips
Squashed commits 
@manuela-grindei i see so many changes that have nothing to do with this ticket. Can you fix that?
I'm afraid I don't know how...
Did you get a chance to read this https://wiki.openmrs.org/display/docs/Pull+Request+Tips and https://wiki.openmrs.org/display/docs/Pull+Request+Tips
Absolutely, I read it
As a last resort, if you do not find it easy to separate your changes from other commits that have already been merged, you may just create a new branch and put back your changes one by one before making a new pull request.

[![Coverage Status](https://coveralls.io/builds/9122582/badge)](https://coveralls.io/builds/9122582)

Coverage increased (+0.04%) to 55.825% when pulling **338f1f204eed74e15c29d75fce95439a2b678acf on manuela-grindei:master** into **76aa48db18ba406fa035742a51d0b14b226fe7ac on openmrs:master**.

This looks very strange, I think I will need to delete the repo again and recreate everything using patches... However, we need to merge quickly next time, so that we do not need to squash anything again. Please let me know if you are fine with the actual changes, as we need the final version in the next PR to be able to quickly merge it into master. We could choose a time of very low activity in the repo, maybe during Christmas, to prevent upstream master changes from happening.
@manuela-grindei there will always be a possibility of commits before your pull request is merged. Even if a pull request is open and reviewed in 30 minutes, there will always be a chance of commits that happen within for instance 15 minutes before the merging. This is the nature of distributed development. :)
You could choose a time of low activity when the activity is too low to even have anyone to review and merge your changes. :)
So the ultimate solution is frequently pulling upstream changes into your local ones and getting to master how to squash commits.
In the ideal world, we would merge pull requests immediately, but this is not always possible because of lots of other pull requests we need to test and review, amidst other activities.
Even after a review which may look like the final version, trying to test out your changes by running the web application may prove otherwise. :)

You're totally right in what you say. 
I don't know why squashing commits doesn't work properly on my machine, I'll need to investigate and fix it, otherwise I'll be unable to contribute to openmrs.
In the meantime, I can provide a patch with the changes to you or someone else who can squash without issues, so we can still finish the story and merge the code in the repo.
@manuela-grindei if you fail to get it right, you can post on talk, detailing the exact steps or commands you executed and the results. Then you will get answers from other contributors who have  been there before. For i have seem many of them successfully squash their commits. So be sure that you will get help from others' experiences! :)
@manuela-grindei my advice is that you do not miss out on the chance to learn this. As long as you plan to have a software development career, there are things you will have no option but patiently learn, regardless of the project you will chose to work on! :)
So this is not just about merging your contributions, but also giving you back an opportunity to learn from others! I never knew any of the things am sharing with you now, until when i decided to get my feet wet in an open source community like this. :)
@zulrich91 are you still working on this?

[![Coverage Status](https://coveralls.io/builds/9138924/badge)](https://coveralls.io/builds/9138924)

Coverage increased (+0.03%) to 55.813% when pulling **2f6ae3bcd35396e1d436dfef3acec3166a7ae11d on vshl:TRUNK-4906-Expanded-Cohort-Details** into **76aa48db18ba406fa035742a51d0b14b226fe7ac on openmrs:master**.

@dkayiwa I fixed the formatting and indentation issues.
@dkayiwa  Yeah I am still working on it. I Was too tight last week.
if we were to fix this issue, should we make changes to the unit test?
@AdamGrzybkowski did you get to fix the error you mentioned above?
Thanks @vshl 👍 
By the way, did you try to run the web application with these changes to see if all works well?
@dkayiwa If you mean by running mvn jetty:run. Yes, it works.
@vshl yes i mean that because it should run all the changesets to ensure that none fails. After doing so, did you also test the functionality and ensure that expected values are correctly saved in the database?
@dkayiwa Yes, as per my tests, it did work as expected.

[![Coverage Status](https://coveralls.io/builds/9180871/badge)](https://coveralls.io/builds/9180871)

Coverage increased (+0.05%) to 55.827% when pulling **52deaff6e3d6ea68062bab9388720e7f3334bf60 on vshl:TRUNK-4906-Expanded-Cohort-Details** into **c7985422548b6100f0d12a2e6abc8e82209e1a7d on openmrs:master**.

@preethi29, thanks for your PR! By analyzing the history of the files in this pull request, we identified @bmamlin, @rkorytkowski and @PawelGutkowski to be potential reviewers.

[![Coverage Status](https://coveralls.io/builds/9186452/badge)](https://coveralls.io/builds/9186452)

Coverage increased (+0.04%) to 55.81% when pulling **b70385cb6b74585bb8761b80b9cc74574de6def3 on preethi29:TRUNK-4980** into **c7985422548b6100f0d12a2e6abc8e82209e1a7d on openmrs:master**.

@AdamGrzybkowski, thanks for your PR! By analyzing the history of the files in this pull request, we identified @bmamlin, @geoff-wasilwa and @dkayiwa to be potential reviewers.
@rkorytkowski  Please take a look if you can at the HibernatePatientDao.getCountOfPatients()

@AdamGrzybkowski i assume you are aware of the travis failure. Correct? :)
@dkayiwa I would be surprised to see Travis passed :D
@dkayiwa, please do not react to CI failures on PRs having "Work in progress" or "WIP". It's the easiest way for me to review progress and help with issues.
@fanyui, thanks for your PR! By analyzing the history of the files in this pull request, we identified @bmamlin, @suniala and @ShekharReddy4 to be potential reviewers.

[![Coverage Status](https://coveralls.io/builds/9192798/badge)](https://coveralls.io/builds/9192798)

Coverage decreased (-0.004%) to 55.803% when pulling **acef2ff4bfb3d07f6571e4afaac6e629b87a1630 on fanyui:TRUNCK-4975** into **6744580c6a73a299b57991414f85619b8b95aeff on openmrs:master**.


[![Coverage Status](https://coveralls.io/builds/9193012/badge)](https://coveralls.io/builds/9193012)

Coverage increased (+0.02%) to 55.83% when pulling **d89a6e5d5b5bce17b4ccb4783e3ab246948b2c50 on vshl:TRUNK-4906-Expanded-Cohort-Details** into **6744580c6a73a299b57991414f85619b8b95aeff on openmrs:master**.

Oh i see! Got it! :)
@fanyui did you notice the travis failure?
@dkayiwa I have not noticed an error as it builds without errors or maybe
am looking for the errors at the wrong place. I will appreciate  pointers
on how to find the said error.

On Thu, Dec 8, 2016 at 7:23 PM, dkayiwa <notifications@github.com> wrote:

> @fanyui <https://github.com/fanyui> did you notice the travis failure?
>
> —
> You are receiving this because you were mentioned.
> Reply to this email directly, view it on GitHub
> <https://github.com/openmrs/openmrs-core/pull/1887#issuecomment-265829933>,
> or mute the thread
> <https://github.com/notifications/unsubscribe-auth/ALxk5UqfliP_tme_P4_M4Q0VD8LnZ2TLks5rGFkVgaJpZM4LIIMc>
> .
>

Can you squash the commits into one as per https://wiki.openmrs.org/display/docs/Pull+Request+Tips?
@vshl do you see the integration test failures when you run this? mvn clean install -Pintegration-test
@dkayiwa It failed.
```
Caused by: liquibase.exception.ValidationFailedException: Validation Failed:
     1 changes have validation failures
          Cannot add a primary key column, liquibase-update-to-latest.xml::201609171146-2::vshankar::(Checksum: 3:9a5492e97671cf683a192dc4f34558e8)
```

How do I fix this?

[![Coverage Status](https://coveralls.io/builds/9197759/badge)](https://coveralls.io/builds/9197759)

Coverage decreased (-0.04%) to 55.772% when pulling **2ae75b7d67cc74364a55c3e7dd883112d0103e8a on fanyui:TRUNCK-4975** into **6744580c6a73a299b57991414f85619b8b95aeff on openmrs:master**.

@dkayiwa The integration-tests pass now.

[![Coverage Status](https://coveralls.io/builds/9200306/badge)](https://coveralls.io/builds/9200306)

Coverage increased (+0.1%) to 55.938% when pulling **89576f03465c7325c78265fd10753731972b297f on vshl:TRUNK-4906-Expanded-Cohort-Details** into **6744580c6a73a299b57991414f85619b8b95aeff on openmrs:master**.

@rkorytkowski I suspect there is some problem with indexing. When using LuceneQuery and queryparser I didn't get any errors so it was hard to figure out, but when using QueryBuilder I get the exception that some fields like names or identifiers are not found. Haven't figure out why yet. 
@fanyui did you get a chance to test this out in a running web application to confirm that you can now register patients with only the given name?

[![Coverage Status](https://coveralls.io/builds/9213853/badge)](https://coveralls.io/builds/9213853)

Coverage increased (+0.1%) to 55.917% when pulling **2ef4c8878156e7d1e7dd9f0cb39897b1f488bd89 on vshl:TRUNK-4906-Expanded-Cohort-Details** into **6744580c6a73a299b57991414f85619b8b95aeff on openmrs:master**.

@taremwatadeo, thanks for your PR! By analyzing the history of the files in this pull request, we identified @bmamlin, @dkayiwa and @tomaszmueller to be potential reviewers.

[![Coverage Status](https://coveralls.io/builds/9218571/badge)](https://coveralls.io/builds/9218571)

Coverage decreased (-0.03%) to 55.776% when pulling **e5d036b1421d8906c2175ee1f09ce1f8fbcca646 on taremwatadeo:TRUNK-4926** into **6744580c6a73a299b57991414f85619b8b95aeff on openmrs:master**.

@maywuy, thanks for your PR! By analyzing the history of the files in this pull request, we identified @suniala and @bmamlin to be potential reviewers.
@dkayiwa Yes i did using the mvn jetty:run command and it worked.

On Fri, Dec 9, 2016 at 12:59 PM, dkayiwa <notifications@github.com> wrote:

> @fanyui <https://github.com/fanyui> did you get a chance to test this out
> in a running web application to confirm that you can now register patients
> with only the given name?
>
> —
> You are receiving this because you were mentioned.
> Reply to this email directly, view it on GitHub
> <https://github.com/openmrs/openmrs-core/pull/1887#issuecomment-266007617>,
> or mute the thread
> <https://github.com/notifications/unsubscribe-auth/ALxk5WGdbqF88JDRihDQKshtsR30zyePks5rGVCXgaJpZM4LIIMc>
> .
>

The  interface still has the field marked as required though it is not
really required

On Sat, Dec 10, 2016 at 6:31 AM, Harisu fanyui <fanyuiharisu@gmail.com>
wrote:

> @dkayiwa Yes i did using the mvn jetty:run command and it worked.
>
> On Fri, Dec 9, 2016 at 12:59 PM, dkayiwa <notifications@github.com> wrote:
>
>> @fanyui <https://github.com/fanyui> did you get a chance to test this
>> out in a running web application to confirm that you can now register
>> patients with only the given name?
>>
>> —
>> You are receiving this because you were mentioned.
>> Reply to this email directly, view it on GitHub
>> <https://github.com/openmrs/openmrs-core/pull/1887#issuecomment-266007617>,
>> or mute the thread
>> <https://github.com/notifications/unsubscribe-auth/ALxk5WGdbqF88JDRihDQKshtsR30zyePks5rGVCXgaJpZM4LIIMc>
>> .
>>
>
>

@ShruthiPitta, thanks for your PR! By analyzing the history of the files in this pull request, we identified @bmamlin, @chethandeshpande and @astorga2 to be potential reviewers.

[![Coverage Status](https://coveralls.io/builds/9221270/badge)](https://coveralls.io/builds/9221270)

Coverage increased (+0.01%) to 55.82% when pulling **8434ba4d66cd3736e357bb1563c9ed2ca8ef36b6 on ShruthiPitta:RA-1256** into **6744580c6a73a299b57991414f85619b8b95aeff on openmrs:master**.

Great work - thanks for the fix!  #omrs16hackathon.  Moved into ticket TRUNK-4982.
@maywuy in response to the travis failure above, does everything work well when you locally run mvn clean install?
Congs @taremwatadeo for your first platform pull request! 👍 
@fanyui instead of removing these tests, can you instead make them test the opposite? For instance, if a test says "should fail if familyName is blank", you could make it, "should pass if familyName is blank".
@vshl i have done a sanity check by inserting two cohorts in the cohort table. Then 2 patients for each cohort and hence 4 rows in the cohort_member table. On running the web application with your changes, i end up with this exception while trying to run the liquibase changesets: Error executing SQL ALTER TABLE `cohort_member` MODIFY `cohort_member_id` INT NOT NULL: Data truncation: Invalid use of NULL value

Can you look into it? 201609171146-2.1::vshankar
Hi, Everything works fine when I run svn clean install locally.


@maywuy with your changes, travis fails with this log: https://api.travis-ci.org/jobs/182793967/log.txt?deansi=true

[![Coverage Status](https://coveralls.io/builds/9229502/badge)](https://coveralls.io/builds/9229502)

Coverage increased (+0.05%) to 55.836% when pulling **133dad79da80ebe18e426ffebef1ac0a38836f89 on vshl:TRUNK-4906-Expanded-Cohort-Details** into **8268091fb305d369c40b20c8f693835c52aa963c on openmrs:master**.

@dkayiwa I had to revert the change I had made to pass the integration-tests. I tried working around the problem but couldn't find a solution to it. It likely seems to be a limitation of mysql, since I couldn't add a primary key without the auto_increment property. Likewise I couldn't add the auto_increment property without making it a primary_key. With the latest commit, I didn't encounter any problems with the changesets and the database upgrade.

I have attached the log as it stands currently with the integration-tests: [errors.txt](https://github.com/openmrs/openmrs-core/files/644864/errors.txt)
I saw several travis failure in the commit. May I ask what could be the possible reasons causing this failure? My first commit was wrong, I am not sure if that’s causing the problem since the maven runs well with my second commit locally.
Any suggestions? Thank you!

On Dec 11, 2016, at 2:19 PM, dkayiwa <notifications@github.com<mailto:notifications@github.com>> wrote:


@maywuy<https://github.com/maywuy> with your changes, travis fails with this log: https://api.travis-ci.org/jobs/182793967/log.txt?deansi=true

—
You are receiving this because you were mentioned.
Reply to this email directly, view it on GitHub<https://github.com/openmrs/openmrs-core/pull/1889#issuecomment-266301242>, or mute the thread<https://github.com/notifications/unsubscribe-auth/ATJRx9TnhK5Y2KSvVSZOydZWX-4UUdYDks5rHEzagaJpZM4LJkIi>.


@maywuy can you squash the commits into one? Then i will take a second look.
@vshl does this mean you have fixed it?
@dkayiwa Yes, it should work now. To clarify, only the integration tests are failing as of now.
@vshl oh i see! Are you taking a second attempt at fixing the integration tests? :)
@vshl before making the cohort_member_id as the primary key, you could write a custom changeset to insert values in it for existing data. Here is a list of sample custom changesets: https://github.com/openmrs/openmrs-core/tree/master/api/src/main/java/org/openmrs/util/databasechange

And here is an example of how that changeset is invoked: https://github.com/openmrs/openmrs-core/blob/master/api/src/main/resources/liquibase-update-to-2.0.xml#L8611
@tendomatGitHub, thanks for your PR! By analyzing the history of the files in this pull request, we identified @bmamlin, @suniala and @dkayiwa to be potential reviewers.

[![Coverage Status](https://coveralls.io/builds/9238596/badge)](https://coveralls.io/builds/9238596)

Coverage increased (+0.04%) to 55.826% when pulling **8bd6684a7adfb347dd949b1cefb78c8d29e6e358 on tendomatGitHub:TRUNK-4935** into **8268091fb305d369c40b20c8f693835c52aa963c on openmrs:master**.

@dkayiwa Thanks, I'll have a look at it.

[![Coverage Status](https://coveralls.io/builds/9241984/badge)](https://coveralls.io/builds/9241984)

Coverage increased (+0.005%) to 55.794% when pulling **1ff9d8f6c8e5366ab618714737c324cd205ac583 on fanyui:TRUNCK-4975** into **8268091fb305d369c40b20c8f693835c52aa963c on openmrs:master**.

@tendomatGitHub the only line to be removed was the one having the TODO.
@jtatia, thanks for your PR! By analyzing the history of the files in this pull request, we identified @bmamlin, @PawelGutkowski and @suniala to be potential reviewers.

[![Coverage Status](https://coveralls.io/builds/9244459/badge)](https://coveralls.io/builds/9244459)

Coverage increased (+0.03%) to 55.816% when pulling **bd3cb5ec82a3d91a900bccc12c60cbdcb09fbc2b on jtatia:master** into **8268091fb305d369c40b20c8f693835c52aa963c on openmrs:master**.


[![Coverage Status](https://coveralls.io/builds/9244687/badge)](https://coveralls.io/builds/9244687)

Coverage decreased (-0.003%) to 55.785% when pulling **5f54131fae4d6907de91734945f3421b4581d44c on jtatia:master** into **8268091fb305d369c40b20c8f693835c52aa963c on openmrs:master**.

@jtatia did you read this? https://wiki.openmrs.org/display/docs/Pull+Request+Tips
thanks for the link @dkayiwa .  Should i close the previous pull request and make a new one? or did my pull request get updated by itself after i made the commit to my remote repo?
@jtatia did you go through that link and do the needful? :)
aah what a mess so ill do it again from the master branch
aah trouble ill try  to change again

On Mon, Dec 12, 2016 at 9:35 PM, dkayiwa <notifications@github.com> wrote:

> @tendomatGitHub <https://github.com/tendomatGitHub> the only line to be
> removed was the one having the TODO.
>
> —
> You are receiving this because you were mentioned.
> Reply to this email directly, view it on GitHub
> <https://github.com/openmrs/openmrs-core/pull/1891#issuecomment-266512772>,
> or mute the thread
> <https://github.com/notifications/unsubscribe-auth/APi9StJl8vFRCmxx6BBfk-eK7KraXK4Xks5rHZQLgaJpZM4LKq2k>
> .
>

Hi, I would like to. The first commit was actually wrong because I wrongly copied the extra code. I tried to cancel the commit, but I do not have authorization to cancel it. Could you simply cancel the earlier commit?

Thanks! Sorry for the inconvenience.

On Dec 12, 2016, at 1:35 AM, dkayiwa <notifications@github.com<mailto:notifications@github.com>> wrote:


@maywuy<https://github.com/maywuy> can you squash the commits into one? Then i will take a second look.

—
You are receiving this because you were mentioned.
Reply to this email directly, view it on GitHub<https://github.com/openmrs/openmrs-core/pull/1889#issuecomment-266353629>, or mute the thread<https://github.com/notifications/unsubscribe-auth/ATJRxzvSxae4eTHl2vBbKoNmY-bcIf5Xks5rHOsrgaJpZM4LJkIi>.


@dkayiwa Thanks for the tip. That worked. Now the integration tests pass.
@maywuy you only need to squash the commits into one. Did you take a look at this? https://wiki.openmrs.org/display/docs/Pull+Request+Tips
@vshl did you take a look at the travis failure on this pull request?

[![Coverage Status](https://coveralls.io/builds/9252995/badge)](https://coveralls.io/builds/9252995)

Coverage decreased (-0.009%) to 55.779% when pulling **e9851798237838517907a84fc9c186015c5788ea on tendomatGitHub:TRUNK-4935** into **8268091fb305d369c40b20c8f693835c52aa963c on openmrs:master**.

Can you squash these commits into one as advised at? https://wiki.openmrs.org/display/docs/Pull+Request+Tips

[![Coverage Status](https://coveralls.io/builds/9253244/badge)](https://coveralls.io/builds/9253244)

Coverage increased (+0.009%) to 55.798% when pulling **6adab3b8342aeefd313ea1ce9f6ba240f697d52a on tendomatGitHub:TRUNK-4935** into **8268091fb305d369c40b20c8f693835c52aa963c on openmrs:master**.

Alright let me see how to do that shortly

On Tue, Dec 13, 2016 at 12:15 PM, Coveralls <notifications@github.com>
wrote:

> [image: Coverage Status] <https://coveralls.io/builds/9253244>
>
> Coverage increased (+0.009%) to 55.798% when pulling *6adab3b
> <https://github.com/openmrs/openmrs-core/commit/6adab3b8342aeefd313ea1ce9f6ba240f697d52a>
> on tendomatGitHub:TRUNK-4935* into *8268091
> <https://github.com/openmrs/openmrs-core/commit/8268091fb305d369c40b20c8f693835c52aa963c>
> on openmrs:master*.
>
> —
> You are receiving this because you were mentioned.
> Reply to this email directly, view it on GitHub
> <https://github.com/openmrs/openmrs-core/pull/1891#issuecomment-266686033>,
> or mute the thread
> <https://github.com/notifications/unsubscribe-auth/APi9SgOz4XdLCh_i9DsbDlVpwCLFRgMWks5rHmJOgaJpZM4LKq2k>
> .
>


[![Coverage Status](https://coveralls.io/builds/9254415/badge)](https://coveralls.io/builds/9254415)

Coverage increased (+0.009%) to 55.798% when pulling **4f02ee1c7429139d42937d3918f92c77fa5679df on tendomatGitHub:TRUNK-4935** into **8268091fb305d369c40b20c8f693835c52aa963c on openmrs:master**.


[![Coverage Status](https://coveralls.io/builds/9254420/badge)](https://coveralls.io/builds/9254420)

Coverage increased (+0.02%) to 55.807% when pulling **4f02ee1c7429139d42937d3918f92c77fa5679df on tendomatGitHub:TRUNK-4935** into **8268091fb305d369c40b20c8f693835c52aa963c on openmrs:master**.

let me go for my next challenge

On Tue, Dec 13, 2016 at 12:21 PM, tendo martyn <tmkmart@gmail.com> wrote:

> Alright let me see how to do that shortly
>
> On Tue, Dec 13, 2016 at 12:15 PM, Coveralls <notifications@github.com>
> wrote:
>
>> [image: Coverage Status] <https://coveralls.io/builds/9253244>
>>
>> Coverage increased (+0.009%) to 55.798% when pulling *6adab3b
>> <https://github.com/openmrs/openmrs-core/commit/6adab3b8342aeefd313ea1ce9f6ba240f697d52a>
>> on tendomatGitHub:TRUNK-4935* into *8268091
>> <https://github.com/openmrs/openmrs-core/commit/8268091fb305d369c40b20c8f693835c52aa963c>
>> on openmrs:master*.
>>
>> —
>> You are receiving this because you were mentioned.
>> Reply to this email directly, view it on GitHub
>> <https://github.com/openmrs/openmrs-core/pull/1891#issuecomment-266686033>,
>> or mute the thread
>> <https://github.com/notifications/unsubscribe-auth/APi9SgOz4XdLCh_i9DsbDlVpwCLFRgMWks5rHmJOgaJpZM4LKq2k>
>> .
>>
>
>

@tendomatGitHub congs for your first pull request merged. 👍 
Yes the more you will go is the more fun! 💯 
@tendomatGitHub, thanks for your PR! By analyzing the history of the files in this pull request, we identified @bmamlin, @suniala and @wluyima to be potential reviewers.

[![Coverage Status](https://coveralls.io/builds/9256667/badge)](https://coveralls.io/builds/9256667)

Coverage decreased (-0.009%) to 55.812% when pulling **9152a84702c07d328ae4a561d2ff4e2ebf4b867b on tendomatGitHub:TRUNK-4927** into **c6d61eac9579a069ae41c0410a85290428bb0007 on openmrs:master**.


[![Coverage Status](https://coveralls.io/builds/9258172/badge)](https://coveralls.io/builds/9258172)

Coverage decreased (-0.009%) to 55.812% when pulling **2b66b73d6151e36f11373b4c6e215a0d04942b9e on tendomatGitHub:TRUNK-4927** into **c6d61eac9579a069ae41c0410a85290428bb0007 on openmrs:master**.

I took a look at this and I tried to squash the two commits. It did not really work because I should squash it before creating pull request. I dont think I could squash the two commits in the pull request. And it seems like I could not cancel my first commit in the pull request because I did not have authority to cancel it. Is it possible for you to just take a look at the second commit? sorry about that.

[![Coverage Status](https://coveralls.io/builds/9259205/badge)](https://coveralls.io/builds/9259205)

Coverage decreased (-0.03%) to 55.791% when pulling **e3114d2d2a2a011ba683374fae960070edf1d7d0 on tendomatGitHub:TRUNK-4927** into **c6d61eac9579a069ae41c0410a85290428bb0007 on openmrs:master**.

@maywuy, thanks for your PR! By analyzing the history of the files in this pull request, we identified @suniala and @bmamlin to be potential reviewers.
I closed this pull request and will create another one after I squash the two commits. Sorry for the inconvenience caused. 
@dkayiwa oddly it failed to run the command. I sent in another commit, is there a way to re-run the checks without a commit?

[![Coverage Status](https://coveralls.io/builds/9259765/badge)](https://coveralls.io/builds/9259765)

Coverage increased (+0.07%) to 55.888% when pulling **83e618b1a96e2226a599817146b1f75c4c1a8d99 on vshl:TRUNK-4906-Expanded-Cohort-Details** into **c6d61eac9579a069ae41c0410a85290428bb0007 on openmrs:master**.

I will create another pull request after I squash my two commits. sorry for the inconvenience.

[![Coverage Status](https://coveralls.io/builds/9261835/badge)](https://coveralls.io/builds/9261835)

Coverage decreased (-0.003%) to 55.819% when pulling **66cca558e44c26cdc8d52b9951940a109b3c1ecc on tendomatGitHub:TRUNK-4927** into **c6d61eac9579a069ae41c0410a85290428bb0007 on openmrs:master**.

@dkayiwa I worked on a solution. I hope this is better.

[![Coverage Status](https://coveralls.io/builds/9271136/badge)](https://coveralls.io/builds/9271136)

Coverage increased (+0.06%) to 55.882% when pulling **7a4231abb22634155c0cba433acc161a5878d7cd on vshl:TRUNK-4906-Expanded-Cohort-Details** into **c6d61eac9579a069ae41c0410a85290428bb0007 on openmrs:master**.


[![Coverage Status](https://coveralls.io/builds/9273397/badge)](https://coveralls.io/builds/9273397)

Coverage increased (+0.07%) to 55.895% when pulling **5b486de180da7b4fc0b01a98e75ff8a0fb7d0db9 on vshl:TRUNK-4906-Expanded-Cohort-Details** into **c6d61eac9579a069ae41c0410a85290428bb0007 on openmrs:master**.

Using an updatable result set is even simpler:
https://docs.oracle.com/javase/tutorial/jdbc/basics/retrieving.html#rs_update


2016-12-14 9:55 GMT+01:00 Vishal <notifications@github.com>:

> *@vshl* commented on this pull request.
> ------------------------------
>
> In api/src/main/java/org/openmrs/util/databasechange/
> UpdateCohortMemberIds.java
> <https://github.com/openmrs/openmrs-core/pull/1831>:
>
> > +		
> +		try {
> +			stmt = connection.createStatement();
> +			ResultSet rs = stmt
> +					.executeQuery("SELECT * FROM cohort_member");
> +			int i = 0;
> +			while (rs.next()) {
> +				int cohortId = rs.getInt("cohort_id");
> +				int patientId = rs.getInt("patient_id");
> +				pStmt = connection
> +						.prepareStatement("UPDATE cohort_member SET cohort_member_id = ?"
> +								+ " WHERE cohort_id = ? AND patient_id = ?");
> +				pStmt.setInt(1, i+=1);
> +				pStmt.setInt(2, cohortId);
> +				pStmt.setInt(3, patientId);
> +				pStmt.addBatch();
>
> Thanks, that makes sense. It did come across my mind as well.
>
> —
> You are receiving this because you commented.
> Reply to this email directly, view it on GitHub
> <https://github.com/openmrs/openmrs-core/pull/1831>, or mute the thread
> <https://github.com/notifications/unsubscribe-auth/ACHHXByddH0PP9RevcBv8QXaEE-mOCi-ks5rH68bgaJpZM4J8dE2>
> .
>

I agree! 👍 
@jtatia, thanks for your PR! By analyzing the history of the files in this pull request, we identified @bmamlin, @PawelGutkowski and @suniala to be potential reviewers.

[![Coverage Status](https://coveralls.io/builds/9280497/badge)](https://coveralls.io/builds/9280497)

Coverage decreased (-0.02%) to 55.806% when pulling **b200e7622a871d14b7f26f3bc97a092d684c957e on jtatia:master** into **c6d61eac9579a069ae41c0410a85290428bb0007 on openmrs:master**.

@dkayiwa @lluismf I couldn't implement updateRow() because I hadn't defined primary keys yet.

[![Coverage Status](https://coveralls.io/builds/9281021/badge)](https://coveralls.io/builds/9281021)

Coverage increased (+0.07%) to 55.897% when pulling **1a6eb79d8e5f3edaf03de2d1c19320d71edc5547 on vshl:TRUNK-4906-Expanded-Cohort-Details** into **c6d61eac9579a069ae41c0410a85290428bb0007 on openmrs:master**.

@manuela-grindei, thanks for your PR! By analyzing the history of the files in this pull request, we identified @bmamlin, @WolfSchlegel and @ivange94 to be potential reviewers.

[![Coverage Status](https://coveralls.io/builds/9288828/badge)](https://coveralls.io/builds/9288828)

Coverage decreased (-0.003%) to 55.819% when pulling **b9f72acf9ce9a9c1651ad193139d1286c68dcb23 on manuela-grindei:master** into **c6d61eac9579a069ae41c0410a85290428bb0007 on openmrs:master**.


[![Coverage Status](https://coveralls.io/builds/9290173/badge)](https://coveralls.io/builds/9290173)

Coverage increased (+0.08%) to 55.906% when pulling **a86e8ef4efcfecb72b46ceb64c37a860dbd459e0 on vshl:TRUNK-4906-Expanded-Cohort-Details** into **c6d61eac9579a069ae41c0410a85290428bb0007 on openmrs:master**.

Hi I am really having trouble squash these two commits. Is it possible for you to just review the problem? Thanks!
@maywuy travis reports compiler errors. Can you just do a new clean pull request?
@mks-d, thanks for your PR! By analyzing the history of the files in this pull request, we identified @bmamlin to be a potential reviewer.
@mks-d, thanks for your PR! By analyzing the history of the files in this pull request, we identified @bmamlin to be a potential reviewer.
@mks-d, thanks for your PR! By analyzing the history of the files in this pull request, we identified @bmamlin, @vencik and @suniala to be potential reviewers.
@mks-d these changes are more than i expected!
I'm sorry, some reformatting got in the way, damn it!
I'll pay even more attention to it next time.
Ok bear with me... I'll update this in a few minutes...
@mks-d do not worry. It happens to all of us once in a while. :)
@jtatia, thanks for your PR! By analyzing the history of the files in this pull request, we identified @bmamlin, @PawelGutkowski and @suniala to be potential reviewers.
@vshl, thanks for your PR! By analyzing the history of the files in this pull request, we identified @manuela-grindei, @WolfSchlegel and @dkayiwa to be potential reviewers.

[![Coverage Status](https://coveralls.io/builds/9304276/badge)](https://coveralls.io/builds/9304276)

Coverage decreased (-0.02%) to 55.901% when pulling **6e469fb215e434baa70216a3882a28f765187123 on vshl:TRUNK-4906-Adding-Unique-Constraint-to-CohortMember-UUID** into **8f66c926847870545752df26b78c61a99be59af6 on openmrs:master**.

@vshl since this is not yet released, just modify the existing changeset by adding a unique=true attribute.
@jtatia, thanks for your PR! By analyzing the history of the files in this pull request, we identified @bmamlin, @PawelGutkowski and @suniala to be potential reviewers.
@dkayiwa Doesn't seem like we can add NOT NULL and UNIQUE in the same ALTER query:

```
> ALTER TABLE `cohort_member` ADD `uuid` CHAR(38) NOT NULL UNIQUE;
ERROR 1062 (23000): Duplicate entry '' for key 'uuid'
```

I tried this in the command line as well. So either I can add a NotNull constraint or Unique constraint later.

[![Coverage Status](https://coveralls.io/builds/9304756/badge)](https://coveralls.io/builds/9304756)

Coverage decreased (-0.02%) to 55.905% when pulling **a5f453e8189d2f6d1eecf387a19fb29b4f5b0af7 on jtatia:TRUNK-4930** into **8f66c926847870545752df26b78c61a99be59af6 on openmrs:master**.

@dkayiwa These set of changesets work.

[![Coverage Status](https://coveralls.io/builds/9305039/badge)](https://coveralls.io/builds/9305039)

Coverage decreased (-0.04%) to 55.889% when pulling **cf0bc5157c6a5ab65f5ac2e225f56c5ad18115a2 on vshl:TRUNK-4906-Adding-Unique-Constraint-to-CohortMember-UUID** into **8f66c926847870545752df26b78c61a99be59af6 on openmrs:master**.

@vshl we have always just used unique=true and it works.
I do not expect it to fail for a brand new column like this, unless you are inserting duplicate uuid values. Can you investigate why you are having duplicate uuids?
@dkayiwa `ALTER TABLE cohort_member ADD uuid CHAR(38) NOT NULL` creates a column with value **''** (empty string) for existing rows, so it fails while adding a unique constraint since it has duplicate values **''**. I tried this in the command-line replicating the steps multiple times.

Similar problem: http://stackoverflow.com/questions/17823322/1062-duplicate-entry-for-key-unique-id-when-trying-to-add-unique-key-my

Here's a screenshot of adding the column on the command-line:

<img width="1181" alt="screen shot 2016-12-15 at 11 33 58 pm" src="https://cloud.githubusercontent.com/assets/193819/21255196/2e5f9670-c31f-11e6-91b2-8491e584aad2.png">

@vshl can you run "mvn clean install -Pintegration-test" with these changes?
@dkayiwa Sorry, had to revert the change as my original commit. This works fine.

[![Coverage Status](https://coveralls.io/builds/9316016/badge)](https://coveralls.io/builds/9316016)

Coverage decreased (-0.02%) to 55.901% when pulling **ad1b9fc9dec1f65560ef198283fcb08ed03d0d4f on vshl:TRUNK-4906-Adding-Unique-Constraint-to-CohortMember-UUID** into **8f66c926847870545752df26b78c61a99be59af6 on openmrs:master**.

@mohammed-alfatih, thanks for your PR! By analyzing the history of the files in this pull request, we identified @bmamlin, @wluyima and @dkayiwa to be potential reviewers.

[![Coverage Status](https://coveralls.io/builds/9321140/badge)](https://coveralls.io/builds/9321140)

Coverage decreased (-0.03%) to 55.898% when pulling **770445b0267155e7f97b522a5c0a8de9533a9305 on mohammed-alfatih:master** into **8f66c926847870545752df26b78c61a99be59af6 on openmrs:master**.


[![Coverage Status](https://coveralls.io/builds/9327184/badge)](https://coveralls.io/builds/9327184)

Coverage decreased (-0.02%) to 55.911% when pulling **d5abdcfe48e6f750915743d9e618a8e2620da189 on vshl:TRUNK-4906-Adding-Unique-Constraint-to-CohortMember-UUID** into **8f66c926847870545752df26b78c61a99be59af6 on openmrs:master**.

@ykarim, thanks for your PR! By analyzing the history of the files in this pull request, we identified @bmamlin, @karrtikiyer-tw and @dkayiwa to be potential reviewers.

[![Coverage Status](https://coveralls.io/builds/9327271/badge)](https://coveralls.io/builds/9327271)

Coverage decreased (-0.02%) to 55.901% when pulling **cd32dbe903f934a2e898a54af159e369cb49991f on ykarim:master** into **8f66c926847870545752df26b78c61a99be59af6 on openmrs:master**.

Thanks @ykarim 👍 
@mohammed-alfatih do we have a ticket for this? https://wiki.openmrs.org/display/docs/Pull+Request+Tips
@collinsnji, thanks for your PR! By analyzing the history of the files in this pull request, we identified @manuela-grindei, @bmamlin and @vshl to be potential reviewers.

[![Coverage Status](https://coveralls.io/builds/9327439/badge)](https://coveralls.io/builds/9327439)

Coverage decreased (-0.04%) to 55.864% when pulling **fdf07eb92640ed339dd64b3a820ec34f9072bb2c on collinsnji:master** into **6483ffff986636fb754bb36b46e753c5b97c2461 on openmrs:master**.

@collinsnji do you mind squashing these commits into one as advised at? https://wiki.openmrs.org/display/docs/Pull+Request+Tips
@dkayiwa please I'll like to close this PR and redo it. I realized I made some errors. 
Why are columns changedBy and dateChanged being removed for multiple entities? Is there a JIRA task explaining why? 
@collinsnji, thanks for your PR! By analyzing the history of the files in this pull request, we identified @karrtikiyer-tw, @bmamlin and @dkayiwa to be potential reviewers.
@collinsnji did you take a look at the above travis failure?

[![Coverage Status](https://coveralls.io/builds/9331626/badge)](https://coveralls.io/builds/9331626)

Coverage increased (+0.007%) to 55.924% when pulling **9dfa46582e1b9da88967006da738a553023d6b36 on collinsnji:master** into **412beacdfc872a095ba67d0708a062e15bb27123 on openmrs:master**.

@dkayiwa, @ivange94 I've fixed all issues and the build now runs perfect :100:  :smiley:  If it's OK, can you please review the task so that I can move on? Thanks :smile: 
PR closed. 
checkout https://github.com/openmrs/openmrs-core/pull/1895
PR Closed. Reopened in new PR.
Checkout https://github.com/openmrs/openmrs-core/pull/1900
PR Closed.
Checkout https://github.com/openmrs/openmrs-core/pull/1902
@collinsnji next time, to make life easier, you would create a different pull request for simply removing unused imports. Then you would create another for those new methods you introduced. :)
@dkayiwa OK. The thing is I did not find any Wiki page on how method names should be assigned. 
But thanks, I'll take that into consideration next time :)
@collinsnji address those comments and i will merge. :)
OK @dkayiwa. When I'm done is it ok to notify you on IRC?
@collinsnji i automatically get pull request notifications. :)

[![Coverage Status](https://coveralls.io/builds/9332643/badge)](https://coveralls.io/builds/9332643)

Coverage decreased (-0.03%) to 55.89% when pulling **943a423fddfb3420e1f7c701432c4bddf0d7795f on collinsnji:master** into **412beacdfc872a095ba67d0708a062e15bb27123 on openmrs:master**.


[![Coverage Status](https://coveralls.io/builds/9332880/badge)](https://coveralls.io/builds/9332880)

Coverage decreased (-0.02%) to 55.896% when pulling **3e5d60c8e6474ab7822b51099f51fdbcd860d42f on collinsnji:master** into **412beacdfc872a095ba67d0708a062e15bb27123 on openmrs:master**.

@dkayiwa I believe we don't. how would one get a ticket?
@ykarim, thanks for your PR! By analyzing the history of the files in this pull request, we identified @bmamlin, @dkayiwa and @jdegraft to be potential reviewers.

[![Coverage Status](https://coveralls.io/builds/9334090/badge)](https://coveralls.io/builds/9334090)

Coverage decreased (-0.02%) to 55.901% when pulling **77b4ca5f32492710e6586cd0aaa324f60767f40f on ykarim:TRUNK-4933** into **412beacdfc872a095ba67d0708a062e15bb27123 on openmrs:master**.

@mohammed-alfatih is this helpful? https://wiki.openmrs.org/display/docs/Tickets

[![Coverage Status](https://coveralls.io/builds/9338358/badge)](https://coveralls.io/builds/9338358)

Coverage decreased (-0.03%) to 55.893% when pulling **b39aebc9e4bd6d6fee000171f13685175e6451e6 on collinsnji:master** into **6b43e64e91501308a7cc2656adbc78d2c6280db3 on openmrs:master**.

Thanks @collinsnji 👍 
https://issues.openmrs.org/browse/TRUNK-4927
Please checkout this and see if all is ok
@maywuy are you still working on this?
@zulrich91 how tight is this week? :)
@lkukielka are you still working on this?
@mjanuchowski, thanks for your PR! By analyzing the history of the files in this pull request, we identified @bmamlin, @suniala and @chethandeshpande to be potential reviewers.

[![Coverage Status](https://coveralls.io/builds/9353031/badge)](https://coveralls.io/builds/9353031)

Coverage increased (+0.1%) to 56.024% when pulling **7daca8fe0529ed1cf49b245349fb26d7b04f38f4 on mjanuchowski:TRUNK-4925** into **9f3437356ef1ee8889ac9d983a138ec4aabf67f5 on openmrs:master**.

@dkayiwa I will finish it tomorrow. Sorry for such a long delay.
@preethi29, thanks for your PR! By analyzing the history of the files in this pull request, we identified @rkorytkowski, @sunbiz and @mblanchette to be potential reviewers.

[![Coverage Status](https://coveralls.io/builds/9358165/badge)](https://coveralls.io/builds/9358165)

Coverage increased (+0.006%) to 55.893% when pulling **b28344de64ee55ed5147a5e787e6ec5b8abdeecc on preethi29:master** into **9f3437356ef1ee8889ac9d983a138ec4aabf67f5 on openmrs:master**.

@rkorytkowski PR udpated, but I couldn't find the problem  with including terms. Will look at it tomorrow 

[![Coverage Status](https://coveralls.io/builds/9378899/badge)](https://coveralls.io/builds/9378899)

Coverage increased (+0.03%) to 55.922% when pulling **34f2a11b2769e9cc17859680a856688b7e806dc0 on mjanuchowski:TRUNK-4925** into **30758af9364612a71a81612f3ab77f902c54b355 on openmrs:master**.

@mjanuchowski before committing, did you run mvn clean install which automatically formats your changes according to our formatter?

[![Coverage Status](https://coveralls.io/builds/9393992/badge)](https://coveralls.io/builds/9393992)

Coverage increased (+0.02%) to 55.959% when pulling **44ee1ea80acf8b4c2d2ab80ce61d0c7471285bfa on lkukielka:master** into **189103f33259021e52f716c9d7c9be6ff90a3baa on openmrs:master**.

@mjanuchowski just create a new pull request.
@mjanuchowski, thanks for your PR! By analyzing the history of the files in this pull request, we identified @bmamlin, @chethandeshpande and @suniala to be potential reviewers.

[![Coverage Status](https://coveralls.io/builds/9402661/badge)](https://coveralls.io/builds/9402661)

Coverage increased (+0.01%) to 55.953% when pulling **e83e017275f6a1482e901c5e7da9ff0058dc7f54 on mjanuchowski:TRUNK-4925** into **189103f33259021e52f716c9d7c9be6ff90a3baa on openmrs:master**.

Thanks @mjanuchowski 👍 
@jtatia, thanks for your PR! By analyzing the history of the files in this pull request, we identified @wluyima to be a potential reviewer.

[![Coverage Status](https://coveralls.io/builds/9415004/badge)](https://coveralls.io/builds/9415004)

Coverage increased (+0.03%) to 55.966% when pulling **e1d03eb5fe3b7515e83d60e215313e978b669299 on jtatia:TRUNK-4879** into **226bb4aa3596d08f1f6cd2370799e8ed0fc63591 on openmrs:master**.

@Pratik151, thanks for your PR! By analyzing the history of the files in this pull request, we identified @bmamlin and @suniala to be potential reviewers.

[![Coverage Status](https://coveralls.io/builds/9421060/badge)](https://coveralls.io/builds/9421060)

Coverage increased (+0.009%) to 55.954% when pulling **863bde79a23aed94cabb234a9a627ef59d117d0b on Pratik151:TRUNK-4931** into **420ee9dce15ac73216fa8ed7bcef19438235894c on openmrs:master**.

@dkayiwa Hi, I made above changes. Is it correct now?
@lkukielka i did not review because the ticket status says you are still doing some work on it.
https://wiki.openmrs.org/display/docs/Pull+Request+Tips
@dkayiwa I finished work on thursday and forgot to inform you. Sorry
@collinsnji, thanks for your PR! By analyzing the history of the files in this pull request, we identified @bmamlin, @vshl and @chethandeshpande to be potential reviewers.

[![Coverage Status](https://coveralls.io/builds/9434973/badge)](https://coveralls.io/builds/9434973)

Coverage increased (+0.02%) to 55.932% when pulling **acc73326a9d5cdbc934107b2e12410f41c0363b5 on collinsnji:master** into **1a086e9146e29ae9631e1926509092282ed1b854 on openmrs:master**.

@lkukielka you actually do not have to inform me. We have a process here that you need to follow: https://wiki.openmrs.org/display/docs/Pull+Request+Tips
Can you go through it and do the needful?
Thanks @collinsnji :)
Closing this for now until when @zulrich91 gets time to resume working on it. :)
@collinsnji, thanks for your PR! By analyzing the history of the files in this pull request, we identified @bmamlin, @suniala and @lluismf to be potential reviewers.

[![Coverage Status](https://coveralls.io/builds/9451446/badge)](https://coveralls.io/builds/9451446)

Coverage decreased (-0.04%) to 55.908% when pulling **0a0ba5a1bf5f684182aa3ac4c754f0659c3b758e on collinsnji:TRUNK-5001** into **3db122ec1c092d92290058d401403f21fc44c395 on openmrs:master**.

@collinsnji, thanks for your PR! By analyzing the history of the files in this pull request, we identified @bmamlin and @suniala to be potential reviewers.

[![Coverage Status](https://coveralls.io/builds/9451979/badge)](https://coveralls.io/builds/9451979)

Coverage increased (+0.04%) to 55.954% when pulling **fa121b88354d13554c33b9d1e78afdf40dc510bf on collinsnji:TRUNK-4999** into **917fe9da35e4a003acd159e00afe1c93c5dc58b0 on openmrs:master**.

@ykarim, thanks for your PR! By analyzing the history of the files in this pull request, we identified @bmamlin, @rkorytkowski and @suniala to be potential reviewers.

[![Coverage Status](https://coveralls.io/builds/9452277/badge)](https://coveralls.io/builds/9452277)

Coverage decreased (-0.03%) to 55.917% when pulling **ff6765c8a315ae4d2a4f55ab031d45a73eccf88e on ykarim:GCI-Typo** into **dc2f7acf63a79e0da85c81685e4d58961a703b50 on openmrs:master**.

@tendomatGitHub, thanks for your PR! By analyzing the history of the files in this pull request, we identified @bmamlin, @jdegraft and @tomaszmueller to be potential reviewers.

[![Coverage Status](https://coveralls.io/builds/9460666/badge)](https://coveralls.io/builds/9460666)

Coverage increased (+0.01%) to 55.942% when pulling **435fc6b67c6b07892a1a0fbdfbc2812d457580b1 on tendomatGitHub:TRUNK-4992** into **7dae07028a987cdcb2b9d3ee5b635574bcbb1a3c on openmrs:master**.

@piyush9620, thanks for your PR! By analyzing the history of the files in this pull request, we identified @suniala and @bmamlin to be potential reviewers.

[![Coverage Status](https://coveralls.io/builds/9469637/badge)](https://coveralls.io/builds/9469637)

Coverage increased (+0.006%) to 55.929% when pulling **1dad2b1c068e48f654c23147e76bcc3cee40351f on piyush9620:TRUNK-4998** into **0bce86ce1292e2d8514b0b614d19f26ccffbcb9a on openmrs:master**.

@piyush9620, thanks for your PR! By analyzing the history of the files in this pull request, we identified @bmamlin, @mjanuchowski and @chethandeshpande to be potential reviewers.
@piyush9620 thanks for working on this! :)
Can you include some unit tests?
@dkayiwa i am pretty new, can u plz give me a head as to how i can write tests?
Just google with this text and you will get a couple of useful links: openmrs unit tests
@piyush9620, thanks for your PR! By analyzing the history of the files in this pull request, we identified @bmamlin, @chethandeshpande and @mjanuchowski to be potential reviewers.
@piyush9620, thanks for your PR! By analyzing the history of the files in this pull request, we identified @bmamlin, @chethandeshpande and @mjanuchowski to be potential reviewers.
@piyush9620, thanks for your PR! By analyzing the history of the files in this pull request, we identified @bmamlin, @chethandeshpande and @mjanuchowski to be potential reviewers.
@piyush9620, thanks for your PR! By analyzing the history of the files in this pull request, we identified @chethandeshpande, @bmamlin and @mjanuchowski to be potential reviewers.
@piyush9620, thanks for your PR! By analyzing the history of the files in this pull request, we identified @chethandeshpande, @bmamlin and @mjanuchowski to be potential reviewers.
@dkayiwa i went through the travis-ci log after seeing All checks have failed above, but i did not see the test that i have written causing any trouble, please go through it, thanks, i have updated the pull request link on jira. :)
@YashuJindal, thanks for your PR! By analyzing the history of the files in this pull request, we identified @bmamlin, @collinsnji and @dkayiwa to be potential reviewers.

[![Coverage Status](https://coveralls.io/builds/9477926/badge)](https://coveralls.io/builds/9477926)

Coverage increased (+0.02%) to 55.703% when pulling **e22d44d5f81f6200bc31051a0bb207abb8927648 on YashuJindal:patch-1** into **69e8ed451183d87da9d1bbb90e80de465bd5f3c5 on openmrs:master**.

@YashuJindal, thanks for your PR! By analyzing the history of the files in this pull request, we identified @bmamlin, @dkayiwa and @chethandeshpande to be potential reviewers.

[![Coverage Status](https://coveralls.io/builds/9478026/badge)](https://coveralls.io/builds/9478026)

Coverage decreased (-0.006%) to 55.672% when pulling **5ccd880ceb005df8233400b908883cb79eb07935 on YashuJindal:patch-2** into **69e8ed451183d87da9d1bbb90e80de465bd5f3c5 on openmrs:master**.

Can you squash the commits into one as advised at? https://wiki.openmrs.org/display/docs/Pull+Request+Tips

Did you also take a look at the above travis failure?
@piyush9620, thanks for your PR! By analyzing the history of the files in this pull request, we identified @bmamlin, @chethandeshpande and @mjanuchowski to be potential reviewers.
@dkayiwa 
i went through the travis log, it seems that some other tests are failing. If this is because of adding a new unit test which seems highly unlikely, I suggest we do not include this unit test. As it a pretty straight forward task of including the setDead method call.

this is a part of the travis log.

Failed tests: 
  PatientServiceAllergyTest.setAllergies_shouldVoidAllAllergiesAndSetStatusToNoKnownAllergiesIfAllAllergiesAreRemovedAndStatusSetAsSuch:203 expected:<[No known allergies]> but was:<[Unknown]>
  PatientServiceTest.shouldCreatePatientWithValidatedIdentifier:298 Patient creation should have failed with identifier 123-1
  AuditableInterceptorTest.onSave_shouldPopulatePersonChangedByandPersonDateChangedIfPersonAlreadyExists:282 expected null, but was:<daemon>
  HibernatePersonDAOTest.getPeople_shouldObeyAttributeMatchMode:662 expected:<1> but was:<0>
@piyush9620 do you see the travis failure on this pull request?
Yes
@jtatia, thanks for your PR! By analyzing the history of the files in this pull request, we identified @bmamlin, @suniala and @dkayiwa to be potential reviewers.

[![Coverage Status](https://coveralls.io/builds/9480498/badge)](https://coveralls.io/builds/9480498)

Coverage increased (+0.003%) to 55.682% when pulling **36574247e6d278cf617af26281ec9bf610baf1c7 on jtatia:TRUNK-4994** into **69e8ed451183d87da9d1bbb90e80de465bd5f3c5 on openmrs:master**.

Can you squash these commits into one as advised at? https://wiki.openmrs.org/display/docs/Pull+Request+Tips

[![Coverage Status](https://coveralls.io/builds/9480556/badge)](https://coveralls.io/builds/9480556)

Coverage remained the same at 55.678% when pulling **b845bad6a13165df075bff1acc21c66a31d6d5ec on jtatia:TRUNK-4994** into **69e8ed451183d87da9d1bbb90e80de465bd5f3c5 on openmrs:master**.


[![Coverage Status](https://coveralls.io/builds/9480652/badge)](https://coveralls.io/builds/9480652)

Coverage decreased (-0.003%) to 55.675% when pulling **a62fc65a34801302c510ca9d530c2ccbd47e1fc1 on jtatia:TRUNK-4994** into **69e8ed451183d87da9d1bbb90e80de465bd5f3c5 on openmrs:master**.


[![Coverage Status](https://coveralls.io/builds/9480684/badge)](https://coveralls.io/builds/9480684)

Coverage increased (+0.02%) to 55.697% when pulling **62ef473e3ce7f7322ba776afd8931a4935443ea5 on jtatia:TRUNK-4994** into **69e8ed451183d87da9d1bbb90e80de465bd5f3c5 on openmrs:master**.


[![Coverage Status](https://coveralls.io/builds/9480694/badge)](https://coveralls.io/builds/9480694)

Coverage increased (+0.003%) to 55.682% when pulling **62ef473e3ce7f7322ba776afd8931a4935443ea5 on jtatia:TRUNK-4994** into **69e8ed451183d87da9d1bbb90e80de465bd5f3c5 on openmrs:master**.

@ykarim, thanks for your PR! By analyzing the history of the files in this pull request, we identified @bmamlin to be a potential reviewer.

[![Coverage Status](https://coveralls.io/builds/9481272/badge)](https://coveralls.io/builds/9481272)

Coverage increased (+0.006%) to 55.672% when pulling **9d960892b03cefc93a5700f6ac347ee723407a0c on ykarim:TRUNK-4997** into **2d841363e5c6a088fea6abef08dbb140254e5197 on openmrs:master**.

@ykarim, thanks for your PR! By analyzing the history of the files in this pull request, we identified @bmamlin, @PawelGutkowski and @vikashgupta2000 to be potential reviewers.

[![Coverage Status](https://coveralls.io/builds/9481465/badge)](https://coveralls.io/builds/9481465)

Coverage increased (+0.03%) to 55.697% when pulling **a1b70e5654ee87535694c2c8537590c6aa5beee4 on ykarim:TRUNK-4989** into **2d841363e5c6a088fea6abef08dbb140254e5197 on openmrs:master**.

@mohammed-alfatih did you get to create this ticket?
@collinsnji, thanks for your PR! By analyzing the history of the files in this pull request, we identified @bmamlin, @jdegraft and @tomaszmueller to be potential reviewers.

[![Coverage Status](https://coveralls.io/builds/9482533/badge)](https://coveralls.io/builds/9482533)

Changes Unknown when pulling **1a6ddd5f22773400be1e1d2923342fd33442a39a on collinsnji:TRUNK-4991** into ** on openmrs:master**.

@ykarim, thanks for your PR! By analyzing the history of the files in this pull request, we identified @bmamlin, @dkayiwa and @suniala to be potential reviewers.

[![Coverage Status](https://coveralls.io/builds/9483434/badge)](https://coveralls.io/builds/9483434)

Coverage decreased (-0.07%) to 55.62% when pulling **627b40cbecbd40ca6ed49a9d2a94ad7516ac11b8 on ykarim:TRUNK-5005** into **3da4e8111648252808dea90b53ecebefe6c37d78 on openmrs:master**.

@YashuJindal, thanks for your PR! By analyzing the history of the files in this pull request, we identified @bmamlin, @collinsnji and @dkayiwa to be potential reviewers.

[![Coverage Status](https://coveralls.io/builds/9486098/badge)](https://coveralls.io/builds/9486098)

Coverage increased (+0.003%) to 55.65% when pulling **63c7be10a5620054efb6a294e1c9a463b917e4bc on YashuJindal:patch-3** into **019544f07047ee8609d94f989b279788ab2ee24b on openmrs:master**.

@rohilaS, thanks for your PR! By analyzing the history of the files in this pull request, we identified @bmamlin, @chethandeshpande and @suniala to be potential reviewers.
@YashuJindal, thanks for your PR! By analyzing the history of the files in this pull request, we identified @bmamlin, @collinsnji and @chethandeshpande to be potential reviewers.

[![Coverage Status](https://coveralls.io/builds/9486526/badge)](https://coveralls.io/builds/9486526)

Coverage decreased (-0.01%) to 55.635% when pulling **a529c1e2e786d050e6d012ead155783a6b241107 on YashuJindal:master** into **019544f07047ee8609d94f989b279788ab2ee24b on openmrs:master**.

@YashuJindal do you mind squashing the commits into one as advised at? https://wiki.openmrs.org/display/docs/Pull+Request+Tips
@YashuJindal you will find this video very useful in squashing commits https://www.youtube.com/watch?v=qh9KtjfjzCU.

Also do well to update your commit message to something more sensible like "Fix typo/grammer errors in openmrs-core".

Don't forget to close the other pull requests since all their changes are in this one.
@YashuJindal you are still fixing typos here as part of the gci task. This too should have been inside this pull request https://github.com/openmrs/openmrs-core/pull/1935. Since its the same logical change "Fix typo/errors".

Update
After checking the diff of pull request https://github.com/openmrs/openmrs-core/pull/1935. I realized that this change is also in that pull request. So I think you should close this one.
@tendomatGitHub, thanks for your PR! By analyzing the history of the files in this pull request, we identified @bmamlin, @suniala and @lluismf to be potential reviewers.

[![Coverage Status](https://coveralls.io/builds/9488352/badge)](https://coveralls.io/builds/9488352)

Coverage increased (+0.02%) to 55.666% when pulling **808ad510cd0591e3786e767cd3fe412bfcc4b511 on tendomatGitHub:TRUNK-5002** into **019544f07047ee8609d94f989b279788ab2ee24b on openmrs:master**.

@lkukielka, thanks for your PR! By analyzing the history of the files in this pull request, we identified @bmamlin, @chethandeshpande and @preethi29 to be potential reviewers.
@tendomatGitHub you need to remove the entire commented out method.
@lkukielka did you see the travis failure above?
@dkayiwa This error doesn't seem to be related with my changes. How can I rerun build on travis?
@lkukielka oh i see. You are correct. :)
@reubenvarghese1, thanks for your PR! By analyzing the history of the files in this pull request, we identified @samshuster and @bmamlin to be potential reviewers.
ok
@reubenvarghese1 could you squash these commits into one as advised at? https://wiki.openmrs.org/display/docs/Pull+Request+Tips
Can you also look into the above travis failure?
@dkayiwa  Yes I can surely do that.After making the first commit I realised that the build failed ,hence I had made the second commit but didn't squash the commits into one .So sorry for the trouble  caused😅

[![Coverage Status](https://coveralls.io/builds/9497942/badge)](https://coveralls.io/builds/9497942)

Coverage decreased (-0.003%) to 55.674% when pulling **89e86b7d050ae250f2be76af36f6b9fb5f43583b on YashuJindal:master** into **6227fbda830949ad7b4c0c424e19a43e6baeb1fd on openmrs:master**.

gci-approved
Will fix Travis issues


[![Coverage Status](https://coveralls.io/builds/9504873/badge)](https://coveralls.io/builds/9504873)

Coverage increased (+0.3%) to 55.972% when pulling **d057dc8ac8a6adc0d91ff217803e08dcaafc5dc7 on ykarim:GCI-WriteUnitTests** into **2f5b7b798b7e0a0385b25d5be5d70cf7620c4d42 on openmrs:master**.

Please check this and see if it satisfies th demands.Thanks

[![Coverage Status](https://coveralls.io/builds/9506251/badge)](https://coveralls.io/builds/9506251)

Coverage increased (+0.003%) to 55.677% when pulling **f05f8f57a7ebbf3b963009664e867a4e911f12b1 on tendomatGitHub:TRUNK-5002** into **2f5b7b798b7e0a0385b25d5be5d70cf7620c4d42 on openmrs:master**.

@reubenvarghese1 how is this going? :)
@mohammed-alfatih any response to the above? :)
@maywuy any response to the above? :)
@lkukielka any response to the above? :)
@lkukielka did you intentionally leave out try-with-resource as suggested on the ticket? :)
@dkayiwa Yes, using try-with-resource,in my opinion, was technically impossible in that case. 
@reubenvarghese1, thanks for your PR! By analyzing the history of the files in this pull request, we identified @samshuster and @bmamlin to be potential reviewers.
@reubenvarghese1 can you squash these commits into one as advised at https://wiki.openmrs.org/display/docs/Pull+Request+Tips?
@dkayiwa  I have done as per request.I am unable to identify the cause for the error so I do need your help with this.
- 
You also need to some some unit tests for your changes.
@SarthakA am closing this because it looks messed up.
@SarthakA, thanks for your PR! By analyzing the history of the files in this pull request, we identified @bmamlin, @WolfSchlegel and @dkayiwa to be potential reviewers.
Am closing again because the pull request is messed up. Can you take a look at https://wiki.openmrs.org/display/docs/Using+Git and https://wiki.openmrs.org/display/docs/Pull+Request+Tips 
@tenzinzee, thanks for your PR! By analyzing the history of the files in this pull request, we identified @bmamlin and @suniala to be potential reviewers.
I'm a bit of a beginner with using this on my desktop so I apologize if I followed anything wrong, please let me know :) 
Am again closing because this pull request is messed up.
Closing this because it is messed up.
@tenzinzee can you squash these commits into one as advised at? https://wiki.openmrs.org/display/docs/Pull+Request+Tips
@dkayiwa Yes, ofcourse, sorry about that, I forgot to squash them into one :) Thanks for the feedback 

[![Coverage Status](https://coveralls.io/builds/9568141/badge)](https://coveralls.io/builds/9568141)

Coverage decreased (-0.009%) to 55.647% when pulling **ec10312ca5c209926cb37355024c60006bef78aa on tenzinzee:master** into **ab6c08e7a537425bb0f23bbbdda5ab535e114e8b on openmrs:master**.

@SarthakA, thanks for your PR! By analyzing the history of the files in this pull request, we identified @bmamlin and @dkayiwa to be potential reviewers.
Closing because its messed up. please see https://wiki.openmrs.org/display/docs/Using+Git
@SarthakA, thanks for your PR! By analyzing the history of the files in this pull request, we identified @bmamlin, @ykarim and @suniala to be potential reviewers.
Closing because it still messed up
@SarthakA, thanks for your PR! By analyzing the history of the files in this pull request, we identified @bmamlin, @dkayiwa and @drbobrinkman to be potential reviewers.
Still messed up.
@SarthakA, thanks for your PR! By analyzing the history of the files in this pull request, we identified @collinsnji to be a potential reviewer.
@SarthakA i do not see any of these edits as correction of typos. So am closing the pull request.

[![Coverage Status](https://coveralls.io/builds/9585528/badge)](https://coveralls.io/builds/9585528)

Coverage decreased (-0.03%) to 55.619% when pulling **ec03c65b39ccc28fb301295767b2cad2af459732 on SarthakA:master** into **9b977a18fcc759af9ad782110b18efe27175dd76 on openmrs:master**.

@SarthakA, thanks for your PR! By analyzing the history of the files in this pull request, we identified @collinsnji to be a potential reviewer.

[![Coverage Status](https://coveralls.io/builds/9594475/badge)](https://coveralls.io/builds/9594475)

Coverage decreased (-0.03%) to 55.622% when pulling **63524e29e76aed7215173973c010f2db6d717cd3 on SarthakA:master** into **9b977a18fcc759af9ad782110b18efe27175dd76 on openmrs:master**.

@SarthakA still do not see these as typos. Here is an example of the typos we are looking for: https://github.com/openmrs/openmrs-core/commit/89e86b7d050ae250f2be76af36f6b9fb5f43583b
@SarthakA, thanks for your PR! By analyzing the history of the files in this pull request, we identified @collinsnji, @ddworken and @ctreatma to be potential reviewers.
Can you squash these commits into one as advised at https://wiki.openmrs.org/display/docs/Pull+Request+Tips

[![Coverage Status](https://coveralls.io/builds/9598784/badge)](https://coveralls.io/builds/9598784)

Coverage decreased (-0.01%) to 55.64% when pulling **e126d5a29c74930dab28dd169d55d9b007f06ffa on SarthakA:master** into **9b977a18fcc759af9ad782110b18efe27175dd76 on openmrs:master**.

Am closing because there was no typo in any of these.
@SarthakA, thanks for your PR! By analyzing the history of the files in this pull request, we identified @collinsnji, @ddworken and @ctreatma to be potential reviewers.
Can you squash these commits into one?

[![Coverage Status](https://coveralls.io/builds/9599805/badge)](https://coveralls.io/builds/9599805)

Coverage decreased (-0.03%) to 55.625% when pulling **12d86d8759eb00a770f1bdea96b3e33739b7867f on SarthakA:master** into **9b977a18fcc759af9ad782110b18efe27175dd76 on openmrs:master**.


[![Coverage Status](https://coveralls.io/builds/9599850/badge)](https://coveralls.io/builds/9599850)

Coverage decreased (-0.006%) to 55.647% when pulling **12d86d8759eb00a770f1bdea96b3e33739b7867f on SarthakA:master** into **9b977a18fcc759af9ad782110b18efe27175dd76 on openmrs:master**.

@SarthakA, thanks for your PR! By analyzing the history of the files in this pull request, we identified @collinsnji to be a potential reviewer.
None of these were typos. So am closing.

[![Coverage Status](https://coveralls.io/builds/9600757/badge)](https://coveralls.io/builds/9600757)

Coverage increased (+0.003%) to 55.643% when pulling **89af1872f6cb65e43755ab5f56f8ea321c82b83a on SarthakA:master** into **877962bd9f4ed4f7b6cdfa848a58a00c5b982d86 on openmrs:master**.

None of these was a typo. So am closing.

[![Coverage Status](https://coveralls.io/builds/9601596/badge)](https://coveralls.io/builds/9601596)

Coverage increased (+0.009%) to 55.65% when pulling **8a2f6df686b29769b271e0d54a253cb899049f43 on SarthakA:master** into **877962bd9f4ed4f7b6cdfa848a58a00c5b982d86 on openmrs:master**.

@mohammed-alfatih ping me to reopen when you get back to this. :)
@maywuy ping me to reopen when you get back to this. :)
Closing because none of these are typos. Can you please look at other files. Looks like you have not been able to find typos in these.

[![Coverage Status](https://coveralls.io/builds/9602137/badge)](https://coveralls.io/builds/9602137)

Coverage decreased (-0.003%) to 55.637% when pulling **9da32c75f8490007c963954cc1cbe2e17ae05cb2 on SarthakA:master** into **877962bd9f4ed4f7b6cdfa848a58a00c5b982d86 on openmrs:master**.

@SarthakA, thanks for your PR! By analyzing the history of the files in this pull request, we identified @bmamlin, @ctreatma and @collinsnji to be potential reviewers.
For those that previously marked as not typos, you need to discard the changes. You also always need to squash your commits into one.
@SarthakA, thanks for your PR! By analyzing the history of the files in this pull request, we identified @ctreatma, @Izaron and @bmamlin to be potential reviewers.

[![Coverage Status](https://coveralls.io/builds/9602331/badge)](https://coveralls.io/builds/9602331)

Coverage remained the same at 55.64% when pulling **285f6cc85cc4fdb6f70af0e1ac043926cc656c99 on SarthakA:master** into **877962bd9f4ed4f7b6cdfa848a58a00c5b982d86 on openmrs:master**.


[![Coverage Status](https://coveralls.io/builds/9602464/badge)](https://coveralls.io/builds/9602464)

Coverage increased (+0.01%) to 55.653% when pulling **20ceeeb542d963dad8e1c4538ea81545c9652fbc on SarthakA:master** into **877962bd9f4ed4f7b6cdfa848a58a00c5b982d86 on openmrs:master**.


[![Coverage Status](https://coveralls.io/builds/9607529/badge)](https://coveralls.io/builds/9607529)

Coverage increased (+0.004%) to 55.623% when pulling **c8c0e24177024b2e245481f53b4737cf062078dd on piyush9620:TRUNK-4868** into **b54e3a904f49c21fd5738f6e65390a3f37cae4f9 on openmrs:master**.


[![Coverage Status](https://coveralls.io/builds/9607618/badge)](https://coveralls.io/builds/9607618)

Coverage decreased (-0.009%) to 55.61% when pulling **781b6b0650720e3d6c9d10f2911e967b685eaef3 on piyush9620:TRUNK-4868** into **b54e3a904f49c21fd5738f6e65390a3f37cae4f9 on openmrs:master**.


[![Coverage Status](https://coveralls.io/builds/9607717/badge)](https://coveralls.io/builds/9607717)

Coverage increased (+0.02%) to 55.638% when pulling **781b6b0650720e3d6c9d10f2911e967b685eaef3 on piyush9620:TRUNK-4868** into **b54e3a904f49c21fd5738f6e65390a3f37cae4f9 on openmrs:master**.

@piyush9620, thanks for your PR! By analyzing the history of the files in this pull request, we identified @samshuster and @bmamlin to be potential reviewers.

[![Coverage Status](https://coveralls.io/builds/9608020/badge)](https://coveralls.io/builds/9608020)

Coverage increased (+0.03%) to 55.644% when pulling **4f16827d8d08017adac9508642b8ee443cf2a41f on piyush9620:TRUNK-4868** into **b54e3a904f49c21fd5738f6e65390a3f37cae4f9 on openmrs:master**.

@piyush9620 did you see the above travis failure?
@piyush9620 can you first squash the commits into one?
@reubenvarghese1, thanks for your PR! By analyzing the history of the files in this pull request, we identified @samshuster, @bmamlin and @suniala to be potential reviewers.
@Advait-M, thanks for your PR! By analyzing the history of the files in this pull request, we identified @bmamlin, @suniala and @dkayiwa to be potential reviewers.

[![Coverage Status](https://coveralls.io/builds/9632389/badge)](https://coveralls.io/builds/9632389)

Coverage increased (+0.003%) to 55.652% when pulling **f51909926179e084f4ce4cc34f463f0bc773df22 on Advait-M:master** into **3dff6abcef06fef2dddfbf26d814c838eadb1889 on openmrs:master**.

@riipeplum, thanks for your PR! By analyzing the history of the files in this pull request, we identified @bmamlin, @ddworken and @teleivo to be potential reviewers.

[![Coverage Status](https://coveralls.io/builds/9634287/badge)](https://coveralls.io/builds/9634287)

Coverage decreased (-0.02%) to 55.625% when pulling **512faa673bb362dd5dfd8b8a85ab3234ffda5abb on riipeplum:patch-1** into **3dff6abcef06fef2dddfbf26d814c838eadb1889 on openmrs:master**.

@dkayiwa  I squashed it as you asked, but I need your help with this. Can you please look if the approach i am taking is correct or not. Thanks.

[![Coverage Status](https://coveralls.io/builds/9639822/badge)](https://coveralls.io/builds/9639822)

Coverage increased (+0.05%) to 55.66% when pulling **8d1d82f68c8e26f99692f07d94ed27e845aa1151 on reubenvarghese1:master** into **1b38be9561c1f0c2ef54f6b92ba3f2491ac819fb on openmrs:master**.

@myang4570, thanks for your PR! By analyzing the history of the files in this pull request, we identified @ctreatma and @SarthakA to be potential reviewers.
@myang4570, thanks for your PR! By analyzing the history of the files in this pull request, we identified @ctreatma and @SarthakA to be potential reviewers.
@dkayiwa 
i have added comments, please tell me if i am understanding thigs correctly. thanks :)
i rewrote everything and on fresh rebuilding, found that the test that i wrote when run individually runs well.
but there is some kind of dependency with these failing tests. please help me resolve them.

Failed tests:
  PatientServiceTest.shouldCreatePatientWithValidatedIdentifier:298 Patient creation should have failed with identifier 123-1
Tests in error:
  PatientServiceTest.mergePatients_shouldAuditPriorDateOfDeathEstimated:2689 » Validation
  PatientServiceTest.shouldCreatePatient:258 » Validation 'Patient#null' failed ...
  PersonServiceTest.getRelationships2_shouldFetchRelationshipsThatWereActiveDuringEffectiveDate:935->createTestPatient:202 » Validation
  PersonServiceTest.getRelationships3_shouldFetchRelationshipsThatWereActiveDuringTheSpecifiedDateRange:1032->createTestPatient:202 » Validation
  PersonServiceTest.getRelationshipsByPerson_shouldFetchRelationshipsThatWereActiveDuringEffectiveDate:311->createTestPatient:202 » Validation


can you please explain how a change in personValidation class is leading to problems in patientServiceTest. Sorry for the trouble.

[![Coverage Status](https://coveralls.io/builds/9669704/badge)](https://coveralls.io/builds/9669704)

Coverage increased (+0.03%) to 55.644% when pulling **d5b1bfced9d409fb4175d60c36c854bb9582ab77 on reubenvarghese1:master** into **1b38be9561c1f0c2ef54f6b92ba3f2491ac819fb on openmrs:master**.


[![Coverage Status](https://coveralls.io/builds/9669772/badge)](https://coveralls.io/builds/9669772)

Coverage increased (+0.03%) to 55.657% when pulling **e78c0a2de1ac13be96cf76113824576d91a4c2c3 on reubenvarghese1:master** into **ee5148cd73c46fdae7163bda281bb241f92fbb79 on openmrs:master**.

@Magicpotatoes2, thanks for your PR! By analyzing the history of the files in this pull request, we identified @bmamlin, @AdamGrzybkowski and @rkorytkowski to be potential reviewers.

[![Coverage Status](https://coveralls.io/builds/9675674/badge)](https://coveralls.io/builds/9675674)

Coverage decreased (-0.0003%) to 55.624% when pulling **c1be1d6cecd732b8f0eb44961a46471c339ae0a0 on Magicpotatoes2:gci142-sonarbcode** into **ee5148cd73c46fdae7163bda281bb241f92fbb79 on openmrs:master**.

@dkayiwa , should I create a new PR and close this one?

[![Coverage Status](https://coveralls.io/builds/9676628/badge)](https://coveralls.io/builds/9676628)

Coverage decreased (-0.003%) to 55.621% when pulling **6f8b230f1d84c3989359bb026315d16b782b3ceb on Magicpotatoes2:gci142-sonarbcode** into **ee5148cd73c46fdae7163bda281bb241f92fbb79 on openmrs:master**.


[![Coverage Status](https://coveralls.io/builds/9676679/badge)](https://coveralls.io/builds/9676679)

Coverage increased (+0.003%) to 55.627% when pulling **10228ab8dc7a2434215468f1b2a650d80d051e31 on Magicpotatoes2:gci142-sonarbcode** into **ee5148cd73c46fdae7163bda281bb241f92fbb79 on openmrs:master**.

All because you described it as if it was a boolean, by using an if
statement.

On Sun, Jan 15, 2017 at 3:01 PM, Maharaj Fawwaz A. Yusran <
notifications@github.com> wrote:

> *@Magicpotatoes2* commented on this pull request.
> ------------------------------
>
> In api/src/main/java/org/openmrs/module/ModuleFactory.java
> <https://github.com/openmrs/openmrs-core/pull/1966>:
>
> > @@ -1272,7 +1272,9 @@ public static void stopModule(Module mod, boolean isShuttingDown) {
>  	}
>
>  	/**
> -     * Merged collapsible if statement
> +	 * Replaces further nested if statement with && on the outer if statement instead
> +	 * @param dependentModule dependent module to check
> +	 * @param modulePackage if the dependent module contains this String
>
> but there is no boolean param? It is only Module and String
>
> —
> You are receiving this because you were mentioned.
> Reply to this email directly, view it on GitHub
> <https://github.com/openmrs/openmrs-core/pull/1966>, or mute the thread
> <https://github.com/notifications/unsubscribe-auth/ABU4tXiGclRCNeUc1-B_oB395qkM9oX3ks5rSgqigaJpZM4Lj1tt>
> .
>



-- 
If we keep uppermost in our minds the unkind and unjust acts of others, we
shall find it impossible to love them as Christ has loved us; but if our
thoughts dwell upon the wondrous love and pity of Christ for us, the same
spirit will flow out to others.

Or did you just confuse it with the @return javadoc, which i you are also
missing and hence should add.

On Sun, Jan 15, 2017 at 4:10 PM, Daniel Kayiwa <kayiwadaniel@gmail.com>
wrote:

> All because you described it as it it was a boolean, by using an if
> statement.
>
> On Sun, Jan 15, 2017 at 3:01 PM, Maharaj Fawwaz A. Yusran <
> notifications@github.com> wrote:
>
>> *@Magicpotatoes2* commented on this pull request.
>> ------------------------------
>>
>> In api/src/main/java/org/openmrs/module/ModuleFactory.java
>> <https://github.com/openmrs/openmrs-core/pull/1966>:
>>
>> > @@ -1272,7 +1272,9 @@ public static void stopModule(Module mod, boolean isShuttingDown) {
>>  	}
>>
>>  	/**
>> -     * Merged collapsible if statement
>> +	 * Replaces further nested if statement with && on the outer if statement instead
>> +	 * @param dependentModule dependent module to check
>> +	 * @param modulePackage if the dependent module contains this String
>>
>> but there is no boolean param? It is only Module and String
>>
>> —
>> You are receiving this because you were mentioned.
>> Reply to this email directly, view it on GitHub
>> <https://github.com/openmrs/openmrs-core/pull/1966>, or mute the thread
>> <https://github.com/notifications/unsubscribe-auth/ABU4tXiGclRCNeUc1-B_oB395qkM9oX3ks5rSgqigaJpZM4Lj1tt>
>> .
>>
>
>
>
> --
> If we keep uppermost in our minds the unkind and unjust acts of others, we
> shall find it impossible to love them as Christ has loved us; but if our
> thoughts dwell upon the wondrous love and pity of Christ for us, the same
> spirit will flow out to others.
>



-- 
If we keep uppermost in our minds the unkind and unjust acts of others, we
shall find it impossible to love them as Christ has loved us; but if our
thoughts dwell upon the wondrous love and pity of Christ for us, the same
spirit will flow out to others.

@dkayiwa May I leave the param description blank for now, maybe someone else can take a look in the future? I haven't had help from GCI chat.
@Magicpotatoes2 why leave it blank?
Secondly, have you looked at the above travis failure?
@DavidBatet, thanks for your PR! By analyzing the history of the files in this pull request, we identified @bmamlin, @ys-achinta and @rkorytkowski to be potential reviewers.
Can you squash these commits into one as advised at https://wiki.openmrs.org/display/docs/Pull+Request+Tips

[![Coverage Status](https://coveralls.io/builds/9679424/badge)](https://coveralls.io/builds/9679424)

Coverage increased (+0.02%) to 55.645% when pulling **61b3a9c8e1b3669cd7fa0a895299f8703ccfa77c on DavidBatet:master** into **ee5148cd73c46fdae7163bda281bb241f92fbb79 on openmrs:master**.


[![Coverage Status](https://coveralls.io/builds/9687983/badge)](https://coveralls.io/builds/9687983)

Coverage increased (+0.006%) to 55.63% when pulling **ffa632d44e9bc755e1731e92e1414dda24ecac32 on Magicpotatoes2:gci142-sonarbcode** into **ee5148cd73c46fdae7163bda281bb241f92fbb79 on openmrs:master**.


[![Coverage Status](https://coveralls.io/builds/9688100/badge)](https://coveralls.io/builds/9688100)

Coverage increased (+0.02%) to 55.648% when pulling **a3c62d2572888bc46af6f91b4e99f2d320604f18 on Magicpotatoes2:gci142-sonarbcode** into **ee5148cd73c46fdae7163bda281bb241f92fbb79 on openmrs:master**.

@hilz041, thanks for your PR! By analyzing the history of the files in this pull request, we identified @bmamlin, @rkorytkowski and @karrtikiyer-tw to be potential reviewers.

[![Coverage Status](https://coveralls.io/builds/9695949/badge)](https://coveralls.io/builds/9695949)

Coverage increased (+0.04%) to 55.664% when pulling **36d8bcbde1476ab8ca55baa84394703163edfb2c on hilz041:TRUNK-248** into **ee5148cd73c46fdae7163bda281bb241f92fbb79 on openmrs:master**.

@yvsssantosh, thanks for your PR! By analyzing the history of the files in this pull request, we identified @bmamlin, @chethandeshpande and @suniala to be potential reviewers.

[![Coverage Status](https://coveralls.io/builds/9703240/badge)](https://coveralls.io/builds/9703240)

Coverage decreased (-0.02%) to 55.616% when pulling **db5eb6c9c2ffc95f51b63e6151853c5668ac2eb1 on Magicpotatoes2:gci142-sonarbcode** into **1f96b4a38eb349041ca87a878b226cf6378d98b9 on openmrs:master**.


[![Coverage Status](https://coveralls.io/builds/9703414/badge)](https://coveralls.io/builds/9703414)

Coverage increased (+0.01%) to 55.644% when pulling **8e93427a71d5f17a56025d1af76ad6ec328586a1 on Magicpotatoes2:gci142-sonarbcode** into **1f96b4a38eb349041ca87a878b226cf6378d98b9 on openmrs:master**.

This is the ticket which i have made changes for. https://issues.openmrs.org/browse/TRUNK-248
@Magicpotatoes2, thanks for your PR! By analyzing the history of the files in this pull request, we identified @bmamlin, @YashuJindal and @suniala to be potential reviewers.
@Magicpotatoes2 i can clearly see your magic in action! :)

[![Coverage Status](https://coveralls.io/builds/9706658/badge)](https://coveralls.io/builds/9706658)

Coverage decreased (-0.02%) to 55.638% when pulling **c199dfd26275a7eb3f0b4b43193cef594ed55373 on Magicpotatoes2:gsptypo** into **7feaa073e8fd6f37744cb8d348222d81a68be458 on openmrs:master**.

@yvsssantosh can you squash the commits into one as advised at https://wiki.openmrs.org/display/docs/Pull+Request+Tips
@dkayiwa 

As I mentioned in the comments I'll be closing this... Please give me some time while i create a new one

Thank You :)
@dkayiwa 
Please kindly review the new pull request which I've kept
@dkayiwa 
I apologize...My git is not configured properly due to which during commits its changing the line ending format
I will push the one with proper ordering and then squash my commits

Thank You for the review :)

@yvsssantosh did you notice the travis failure above?
@dkayiwa 
Yes sir I did.... I need some assistance writing the test cases.....Can you please help me out?
@yvsssantosh is it your new tests that are failing? Or existing ones?
@hilz041 did you notice the merge conflicts in this?
I have made changes on this ticket, Add JUnit @should annotations according to code comments. TRUNK-248.

[![Coverage Status](https://coveralls.io/builds/9795229/badge)](https://coveralls.io/builds/9795229)

Coverage increased (+0.003%) to 55.623% when pulling **06f9a0a0a39817dd6c4e7841def1746d527c8c6b on hilz041:master** into **8da90bfae2aba70959baca8cfaf66ce029cc0efc on openmrs:master**.

The text in the should annotation needs to state the actual business logic that is to be tested. That way you do not need to keep track of the line number which can easily get out of sync as the code is edited.
@sidtharthanan, thanks for your PR! By analyzing the history of the files in this pull request, we identified @bmamlin, @suniala and @wluyima to be potential reviewers.
@hilz041, thanks for your PR! By analyzing the history of the files in this pull request, we identified @bmamlin, @rkorytkowski and @karrtikiyer-tw to be potential reviewers.
This is the issue i have been working on,Add JUnit @should annotations according to code comments
@sidtharthanan did you run mvn clean install before committing? The formatting does not look correct. :)
@dkayiwa, I ran both the commands `mvn clean install` and `mvn clean package`.
I don't see any formatting changes after the `mvn clean...` commands.
If you could tell me the exact file, I can modify them.
@sidtharthanan did you take a look at the formatter here? https://wiki.openmrs.org/display/docs/Coding+Conventions

https://talk.openmrs.org/t/openmrs-code-formatter-styles/794
@hilz041 can you squash these commits into one as advised at https://wiki.openmrs.org/display/docs/Pull+Request+Tips
I read this: https://wiki.openmrs.org/display/docs/Coding+Conventions.
I think the code follows all of them.

I read this: https://talk.openmrs.org/t/openmrs-code-formatter-styles/794.
I don't get what to do.

I tried installing this following code formatter: https://github.com/suniala/openmrs-code-style-idea.
This formatter changes a lot of lines that I have not worked at all.
Could you tell me what formatter to use for intellij or command line?

@dkayiwa 
All the VisitValidator Tests are passing but tests from other files are failing with a Null pointer exception

Please give me some time while i analyze where the issue is and correct it :)

Thank You
@tendomatGitHub, thanks for your PR! By analyzing the history of the files in this pull request, we identified @bmamlin, @suniala and @mogoodrich to be potential reviewers.
@tendomatGitHub did you see the above travis failure?
@piyush9620 ping me to reopen this when you resume. :)
yes trying to figure out the problem
TRUNK-248 Add JUnit @should annotations according to code comments.
@hilz041 this pull request is for the same issue as this https://github.com/openmrs/openmrs-core/pull/1977 right? You have to close one. Seeing as the latter is the latest, you may want to close this one.
@dkayiwa I have updated the PR as requested. Could check it?

[![Coverage Status](https://coveralls.io/builds/9900439/badge)](https://coveralls.io/builds/9900439)

Coverage decreased (-0.0003%) to 55.677% when pulling **20d6e9c30134930126c5be8a626ac896542ce393 on hilz041:master** into **3ea3d01e65999f2887804c53d9deef5d0887fda3 on openmrs:master**.

@hilz041 because squashing is giving you trouble, since the changes are small, just create a new branch and a brand new pull request. Am sure it will be easier for you that way. :)
@hilz041, thanks for your PR! By analyzing the history of the files in this pull request, we identified @bmamlin, @rkorytkowski and @karrtikiyer-tw to be potential reviewers.
I have merged together all the commits, squash. Add JUnit @should annotations according to code comments
 
This pull request still have so many commits. Do git checkout master, pull the latest changes and then create a new branch from which you will create a new pull request.

[![Coverage Status](https://coveralls.io/builds/9901144/badge)](https://coveralls.io/builds/9901144)

Coverage increased (+0.009%) to 55.686% when pulling **8924a751abfe774fde144fec0540912ce14fce4a on hilz041:master** into **3ea3d01e65999f2887804c53d9deef5d0887fda3 on openmrs:master**.

@hilz041, thanks for your PR! By analyzing the history of the files in this pull request, we identified @bmamlin, @rkorytkowski and @karrtikiyer-tw to be potential reviewers.
I have made a fresh PR Add JUnit @should annotations according to code comments.
This has merge conflicts. After switching to master, did you pull the latest upstream changes?
I have added @should annotations according to code comments.

[![Coverage Status](https://coveralls.io/builds/9939789/badge)](https://coveralls.io/builds/9939789)

Coverage decreased (-0.02%) to 55.682% when pulling **8ff4b3763ac8c98913e3d16c3b2b60a3e1549ebd on hilz041:TRUNK-248** into **f91198cfcaec7547234d98182fda8e2bd4f579f8 on openmrs:master**.

@mavrk, thanks for your PR! By analyzing the history of the files in this pull request, we identified @bmamlin, @suniala and @dkayiwa to be potential reviewers.
@tmarzeion, thanks for your PR! By analyzing the history of the files in this pull request, we identified @bmamlin and @vencik to be potential reviewers.

[![Coverage Status](https://coveralls.io/builds/9943484/badge)](https://coveralls.io/builds/9943484)

Coverage decreased (-0.03%) to 55.665% when pulling **5170630ff2b95e76e6c6d18461cc6076433ab117 on tmarzeion:RESTWS-641** into **f91198cfcaec7547234d98182fda8e2bd4f579f8 on openmrs:master**.

I thought this was meant to be done in the rest module and not core
@tmarzeion did you see the travis failure?
@pushpa446, thanks for your PR! By analyzing the history of the files in this pull request, we identified @bmamlin, @suniala and @dkayiwa to be potential reviewers.

[![Coverage Status](https://coveralls.io/builds/9956529/badge)](https://coveralls.io/builds/9956529)

Coverage decreased (-0.03%) to 55.671% when pulling **692f752fef52756f2ff8bc707fb7dcca768ea67d on pushpa446:contextgetLocaleIssue** into **f91198cfcaec7547234d98182fda8e2bd4f579f8 on openmrs:master**.

Yeah I've noticed that build fail @dkayiwa.
Its probably caused by test stability, not code changes :)
~~Unfortunately I don't have permissions to rerun Travis builds on Core repo, so could You do that? :)~~ - I am able to rerun Travis by adding changes to code.
PS. Don't merge it yet please :)

[![Coverage Status](https://coveralls.io/builds/9957244/badge)](https://coveralls.io/builds/9957244)

Coverage decreased (-0.05%) to 55.648% when pulling **2619143109e9b0ffb891da7ffc51a4b332f3a05c on tmarzeion:RESTWS-641** into **f91198cfcaec7547234d98182fda8e2bd4f579f8 on openmrs:master**.

@sravanthi17, thanks for your PR! By analyzing the history of the files in this pull request, we identified @bmamlin, @suniala and @preethi29 to be potential reviewers.
Openmrs Issue  : https://issues.openmrs.org/browse/TRUNK-5024
@pushpa446 the user logs in with Context.authenticate() instead of Context.refreshAuthenticatedUser()
Hi @dkayiwa, Did you mean we should setUserLocale in Context.authenticate() instead of Context.refreshAuthenticatedUser()? 
If yes, by the time Context.authenticate() executes, database is not updated with the current user properties. 
If I'm not wrong, here we save the properties. https://github.com/openmrs/openmrs-module-webservices.rest/blob/master/omod-2.0/src/main/java/org/openmrs/module/webservices/rest/web/v1_0/resource/openmrs2_0/UserResource2_0.java#L49
@pushpa446 when is Context.refreshAuthenticatedUser() called?
Hi @dkayiwa ,
right after save, here we are calling Context.refreshAuthenticatedUser()
https://github.com/openmrs/openmrs-module-webservices.rest/blob/master/omod-2.0/src/main/java/org/openmrs/module/webservices/rest/web/v1_0/resource/openmrs2_0/UserResource2_0.java#L50
Should i then say that it is the ticket wording that confused me? For it says "Update locale of user while logging in" :)
@dkayiwa, sorry if that confuses you. My understanding is each time a user logs in, the user properties changes. We are saving them. But we are not updating the same into the UserContext before. With this code change, we can set locale to the context as part of Context.refreshauthenticateduser(). Suggest me the correct message :)

[![Coverage Status](https://coveralls.io/builds/10002919/badge)](https://coveralls.io/builds/10002919)

Coverage decreased (-0.001%) to 55.692% when pulling **43b2a415f6c3d1d1f9491fdb019560484d87bda6 on yvsssantosh:TRUNK-4939** into **d1c3ee04ff2e26f5058129d3d7bf360891223ff8 on openmrs:master**.


[![Coverage Status](https://coveralls.io/builds/10003095/badge)](https://coveralls.io/builds/10003095)

Coverage increased (+0.005%) to 55.699% when pulling **246d362b89c81a50542f4acebd8bb299868716f3 on yvsssantosh:TRUNK-4939** into **d1c3ee04ff2e26f5058129d3d7bf360891223ff8 on openmrs:master**.


[![Coverage Status](https://coveralls.io/builds/10003104/badge)](https://coveralls.io/builds/10003104)

Coverage increased (+0.02%) to 55.711% when pulling **f7571aa649d987746181b35c5bb7ebe8c3f8ff4c on yvsssantosh:TRUNK-4939** into **d1c3ee04ff2e26f5058129d3d7bf360891223ff8 on openmrs:master**.


[![Coverage Status](https://coveralls.io/builds/10003152/badge)](https://coveralls.io/builds/10003152)

Coverage increased (+0.005%) to 55.699% when pulling **f7571aa649d987746181b35c5bb7ebe8c3f8ff4c on yvsssantosh:TRUNK-4939** into **d1c3ee04ff2e26f5058129d3d7bf360891223ff8 on openmrs:master**.


[![Coverage Status](https://coveralls.io/builds/10004150/badge)](https://coveralls.io/builds/10004150)

Coverage decreased (-8.0e-05%) to 55.697% when pulling **cf601dcee207f72a821a2727d458e63e7bd3a878 on tendomatGitHub:TRUNK-1748** into **f91198cfcaec7547234d98182fda8e2bd4f579f8 on openmrs:master**.

https://issues.openmrs.org/browse/TRUNK-1748
@dkayiwa can you please review this 
please review this
@pushpa446 will that code get executed when one logs in using https://github.com/openmrs/openmrs-module-legacyui/blob/c9bb7b8ba008573568f46cb2d09ca987d309683d/omod/src/main/java/org/openmrs/web/servlet/LoginServlet.java
Or
https://github.com/openmrs/openmrs-module-referenceapplication/blob/master/omod/src/main/java/org/openmrs/module/referenceapplication/page/controller/LoginPageController.java
@mavrk did you take a look at our pull request tips page?
The formatting in this file is not correct. Did you run mvn clean install before committing?
Did you run mvn clean install before committing? The formatting in some places does not look correct.
@dkayiwa 
Yes I made sure to run the command mvn clean install
Please let me know if there are any changes to be made

Thank You :)
Yes @dkayiwa I looked at the 'pull req tips' page. I realize my errors and I will make a new pull req keeping those tips in mind. Thanks :) 
i run mvn clean package
let me do that again
@dkayiwa i run mvn clean install and tests passed...see this http://pastebin.com/RbAaAS2q
@tendomatGitHub now commit the formatting changes that have happened after running mvn clean install.
@dkayiwa  was also wondering wether am to write changesets to introduce name and descfiption columns in workflow and workflowstate tables or that's left to some other folks.
@tmarzeion, thanks for your PR! By analyzing the history of the files in this pull request, we identified @bmamlin, @dkayiwa and @vencik to be potential reviewers.
@ILauerIV, thanks for your PR! By analyzing the history of the files in this pull request, we identified @bmamlin, @jdegraft and @sunbiz to be potential reviewers.

[![Coverage Status](https://coveralls.io/builds/10027006/badge)](https://coveralls.io/builds/10027006)

Coverage increased (+0.01%) to 55.703% when pulling **5fc236b6b3d82fe6ccbf81242862d01a6dc6570a on ILauerIV:Trunk-5021** into **d1c3ee04ff2e26f5058129d3d7bf360891223ff8 on openmrs:master**.

@weix17, thanks for your PR! By analyzing the history of the files in this pull request, we identified @bmamlin, @suniala and @ShekharReddy4 to be potential reviewers.

[![Coverage Status](https://coveralls.io/builds/10027365/badge)](https://coveralls.io/builds/10027365)

Coverage decreased (-0.006%) to 55.688% when pulling **3a9495ec939b21b535f4ee55dd243c4c4562b94d on weix17:RA-543** into **d1c3ee04ff2e26f5058129d3d7bf360891223ff8 on openmrs:master**.


[![Coverage Status](https://coveralls.io/builds/10032228/badge)](https://coveralls.io/builds/10032228)

Coverage decreased (-0.05%) to 55.643% when pulling **5762cbd3d27d4f9b9754e21f682b4be2cff12e14 on tmarzeion:TRUNK-5027** into **d1c3ee04ff2e26f5058129d3d7bf360891223ff8 on openmrs:master**.

@dkayiwa Could You take a look on this PR? :)
@tmarzeion did you take a look at this? https://wiki.openmrs.org/display/docs/Pull+Request+Tips
@weix17 did you take a look at? https://wiki.openmrs.org/display/docs/Pull+Request+Tips
@dkayiwa Yup
@tmarzeion and did you do what it says? :)
@dkayiwa For this, https://github.com/openmrs/openmrs-module-legacyui/blob/c9bb7b8ba008573568f46cb2d09ca987d309683d/omod/src/main/java/org/openmrs/web/servlet/LoginServlet.java we are not sending and storing User properties no? So it is updating locale as per available info https://github.com/openmrs/openmrs-module-legacyui/blob/c9bb7b8ba008573568f46cb2d09ca987d309683d/omod/src/main/java/org/openmrs/web/servlet/LoginServlet.java#L144 here
@sidtharthanan, thanks for your PR! By analyzing the history of the files in this pull request, we identified @bmamlin, @suniala and @wluyima to be potential reviewers.
@wluyima , I've made the updates you suggested. I raised a PR [here](https://github.com/openmrs/openmrs-core/pull/1988).
@pushpa446 does that mean your changes are not relevant for the above two scenarios?
@dkayiwa  Yes. In both the scenarios that you have mentioned, I think we are not modifying the UserProperties. So, we are taking the existing OpenmrsConstants.USER_PROPERTY_DEFAULT_LOCALE of User and setting the locale to the Context.
I've merged the new PR into 2.0.x and master, thanks @sidtharthanan 
@hilz041, thanks for your PR! By analyzing the history of the files in this pull request, we identified @bmamlin, @rkorytkowski and @karrtikiyer-tw to be potential reviewers.
Add JUnit @should annotations according to code comments

    

[![Coverage Status](https://coveralls.io/builds/10073394/badge)](https://coveralls.io/builds/10073394)

Coverage increased (+0.009%) to 55.705% when pulling **8924a751abfe774fde144fec0540912ce14fce4a on hilz041:master** into **b968308618e484186e5af02db3545460a6a196c4 on openmrs:master**.

@tendomatGitHub are you using an IDE to make these changes? Or are you simply using a text editor like notepad?
@dkayiwa am using Eclipse though it doesn't recognise openmrs code,no code recommenders for openmrs.
@dkayiwa let me work on them.

[![Coverage Status](https://coveralls.io/builds/10082064/badge)](https://coveralls.io/builds/10082064)

Coverage increased (+0.004%) to 55.701% when pulling **589fc6a53d03115526da4b77447e1a1dab853c7b on mavrk:TRUNK-4947** into **f91198cfcaec7547234d98182fda8e2bd4f579f8 on openmrs:master**.


[![Coverage Status](https://coveralls.io/builds/10082377/badge)](https://coveralls.io/builds/10082377)

Coverage increased (+0.02%) to 55.716% when pulling **35d6ca297489d37f45dfac264fe5daf45cb1c595 on mavrk:TRUNK-4947** into **b968308618e484186e5af02db3545460a6a196c4 on openmrs:master**.

Hey @dkayiwa is the pull req fine now?
@mavrk just take a look at this page and you will see several commits. We need to see only one.
Hold on, I disagree with this change. The ticket is about leading and trailing spaces, but the PR is going to reject names if they contain a space in an internal character.

E.g. what if you're configured with First + Last name layout, and you want to record the patient's first name as "Marie Claire" or "Juan Felipe". This should be allowed. (If an implementation wants to disallow _those_ spaces they can do this using the existing regex mechanism.)
@dkayiwa should I go for git rebase -i ?
https://wiki.openmrs.org/display/docs/Pull+Request+Tips
Yes, we definitely have many cases like Darius mentions above (two or more names for a "first name")

[![Coverage Status](https://coveralls.io/builds/10083300/badge)](https://coveralls.io/builds/10083300)

Coverage increased (+0.01%) to 55.707% when pulling **790da092e858caff38bec00878242d762fc068cc on mavrk:TRUNK-4947** into **b968308618e484186e5af02db3545460a6a196c4 on openmrs:master**.

@mavrk, thanks for your PR! By analyzing the history of the files in this pull request, we identified @bmamlin, @suniala and @dkayiwa to be potential reviewers.

[![Coverage Status](https://coveralls.io/builds/10084628/badge)](https://coveralls.io/builds/10084628)

Coverage increased (+0.01%) to 55.71% when pulling **55471f5d0c1917fe5ad774972d32f3a8067027ee on mavrk:TRUNK-4947** into **b968308618e484186e5af02db3545460a6a196c4 on openmrs:master**.

Amusingly (to me) just one hour after this someone asked about that very thing (having spaces in names) on the Bahmni distribution forum: https://talk.openmrs.org/t/configuring-bahmni-to-allow-for-spaces-in-patient-names/9994
@dkayiwa Is this fine?
@mavrk can you also add a test which returns the expected source when given valid hl7code?
@dkayiwa Sure. I will add that test. Do you want me to keep everything else 'as is'?
One more thing @dkayiwa I made the method getConceptSourceByhl7Code(). Do you want me to change it to getConceptSourceByHL7Code()?
Can you take a look at the class to see what is used elsewhere?
Sure thanks :)
@jtatia, thanks for your PR! By analyzing the history of the files in this pull request, we identified @preethi29, @bmamlin and @bharatak to be potential reviewers.
Could someone please review it. Their is one test that is still failing and i needed help with that.
@jtatia, thanks for your PR! By analyzing the history of the files in this pull request, we identified @bmamlin, @suniala and @preethi29 to be potential reviewers.

[![Coverage Status](https://coveralls.io/builds/10104084/badge)](https://coveralls.io/builds/10104084)

Coverage increased (+0.02%) to 55.714% when pulling **6de4a9757c4db8813e535e0decb33a313d36faca on jtatia:TRUNK-5017** into **b968308618e484186e5af02db3545460a6a196c4 on openmrs:master**.

Hey @dkayiwa Can you give me any example of an HL7Code ? I tried looking at the .frm files in the sample db but got nothing.
Are you making changes in .frm or .java files?
Where can I find a pre-existing hl7Code to get conceptSource for? Or shall I add it myself with a <concept_reference_source> dataset in the .xml files for the tests.
Did i just misunderstand your original question? You seem to be asking something else now.
Ok let me clarify. In my test class I want to add a test which gives an expected source when given a valid hl7Code. So I am thinking of passing an existing hl7Code to getConceptSourceByHl7Code() and then I'll verify if the returned ConceptSource is true. So I am asking where can I find an hl7Code which I can use for the test?
Do you see the comment where you started with: "One more thing...."
I think I found what I was looking for. I'll code and run the tests. Thanks :)

[![Coverage Status](https://coveralls.io/builds/10110155/badge)](https://coveralls.io/builds/10110155)

Coverage increased (+0.005%) to 55.701% when pulling **7a6d05cd5488281ec437382c0a97606f5d37e800 on mavrk:TRUNK-4947** into **b968308618e484186e5af02db3545460a6a196c4 on openmrs:master**.

The test for an expected ConceptSource when given a valid hl7Code is done. Anything else I need to add?
@hilz041 could you squash the commits into one?

[![Coverage Status](https://coveralls.io/builds/10110730/badge)](https://coveralls.io/builds/10110730)

Coverage increased (+0.04%) to 55.731% when pulling **e469a1c908fd91ea36d91fedc7e724f0ae2bc302 on mavrk:TRUNK-4947** into **b968308618e484186e5af02db3545460a6a196c4 on openmrs:master**.

@mavrk, thanks for your PR! By analyzing the history of the files in this pull request, we identified @bmamlin, @suniala and @dkayiwa to be potential reviewers.

[![Coverage Status](https://coveralls.io/builds/10110811/badge)](https://coveralls.io/builds/10110811)

Coverage increased (+0.02%) to 55.731% when pulling **42166ede9954d21ff28479b9bdd468fdeccc4893 on mavrk:TRUNK-4947** into **65e0c43c19ad43555cd1c6d995f8549bc38d9f4f on openmrs:master**.

@dkayiwa The tests you wanted are added. Sorry that I had to create a new pull req. My sourcetree crashed and commits had a lot of garbage values.
@dkayiwa 
I've added the changes as requested.
Please kindly review :)

[![Coverage Status](https://coveralls.io/builds/10113748/badge)](https://coveralls.io/builds/10113748)

Coverage decreased (-0.01%) to 55.703% when pulling **932ccdcb40a8af942a3ab7d8a177b01d96c294da on yvsssantosh:TRUNK-4939** into **65e0c43c19ad43555cd1c6d995f8549bc38d9f4f on openmrs:master**.

Can u give the pull request a title which contains more than just the ticket number?

[![Coverage Status](https://coveralls.io/builds/10115330/badge)](https://coveralls.io/builds/10115330)

Coverage increased (+0.01%) to 55.725% when pulling **d80da669f21ad4d9d2a2aa03eae1f9d383582a2f on yvsssantosh:TRUNK-4939** into **65e0c43c19ad43555cd1c6d995f8549bc38d9f4f on openmrs:master**.

Is the new title fine?
Way much better than the one before. 👍 
@jtatia have you looked at the failing test's error message?
@yvsssantosh can you update the pull request text to have more than just the ticket id?
@dkayiwa 

Updated the pull request name
If there are any modifications please do let me know

Thank You 

[![Coverage Status](https://coveralls.io/builds/10116204/badge)](https://coveralls.io/builds/10116204)

Coverage increased (+0.01%) to 55.728% when pulling **51c7d22449b5c466b5ad3c94a988c5acc8931e87 on mavrk:TRUNK-4947** into **65e0c43c19ad43555cd1c6d995f8549bc38d9f4f on openmrs:master**.

Hey @dkayiwa I removed all the unnecessary white spaces. Have a look :)
@mavrk we usually squash commits into one.

[![Coverage Status](https://coveralls.io/builds/10116416/badge)](https://coveralls.io/builds/10116416)

Coverage increased (+0.008%) to 55.722% when pulling **f27c30cc6735a151361c1655df935db9694e9713 on mavrk:TRUNK-4947** into **65e0c43c19ad43555cd1c6d995f8549bc38d9f4f on openmrs:master**.

Squashed the commits @dkayiwa 
@dkayiwa yes i did. there is one test that was failing. it was the last test from here
https://github.com/openmrs/openmrs-core/blob/master/api/src/test/java/org/openmrs/api/ObsServiceTest.java
test:- saveObs_shouldVoidOnlyOldObsWhenAllObsEditedAndNewObsAdded()
I tried a few things but am unable to solve this test. on saving obs in 1953 its getting a validation exception because obs id has become null and its person id and encounter patient id do not match
@hilz041, thanks for your PR! By analyzing the history of the files in this pull request, we identified @bmamlin, @rkorytkowski and @karrtikiyer-tw to be potential reviewers.
Add JUnit @should annotations according to code comments

[![Coverage Status](https://coveralls.io/builds/10120683/badge)](https://coveralls.io/builds/10120683)

Coverage increased (+0.04%) to 55.734% when pulling **2cb06dbe6ae465c252c98e3475ee6bfbcfce0042 on hilz041:TRUNK-248** into **6c603801c5886cc08c71a497d18efb4e4ce52601 on openmrs:master**.

@hilz041 can you see the above having more than one commit?
Whenever you open a new pull request, remember to close the old one. https://github.com/openmrs/openmrs-core/pull/1994
@tendomatGitHub did you notice the merge conflicts on this pull request? Are you even still working on it?

[![Coverage Status](https://coveralls.io/builds/10143669/badge)](https://coveralls.io/builds/10143669)

Coverage increased (+0.003%) to 55.701% when pulling **2cb06dbe6ae465c252c98e3475ee6bfbcfce0042 on hilz041:TRUNK-248** into **6c603801c5886cc08c71a497d18efb4e4ce52601 on openmrs:master**.

@dkayiwa 
I'm sorry I didn't take note of some things before commiting

Will be careful this time and update them right away :)
Thanks for the review
@reubenvarghese1, thanks for your PR! By analyzing the history of the files in this pull request, we identified @bmamlin, @suniala and @dkayiwa to be potential reviewers.
thanks @reubenvarghese1 👍 
@reubenvarghese1 please squash your two commits into one

[![Coverage Status](https://coveralls.io/builds/10167179/badge)](https://coveralls.io/builds/10167179)

Coverage increased (+0.03%) to 55.725% when pulling **24f555d07b4c21313f2d2cc85add2978dbab84d6 on reubenvarghese1:master** into **6c603801c5886cc08c71a497d18efb4e4ce52601 on openmrs:master**.


[![Coverage Status](https://coveralls.io/builds/10167529/badge)](https://coveralls.io/builds/10167529)

Coverage increased (+0.03%) to 55.728% when pulling **221fe59b2961e8398c31f3e58d117cae71594c48 on reubenvarghese1:master** into **6c603801c5886cc08c71a497d18efb4e4ce52601 on openmrs:master**.

@teleivo Squashed the commits .I think we are good to go :-)
@reubenvarghese1 looks good to me, @dkayiwa :)
Thanks @reubenvarghese1 for working on it and thanks @teleivo for reviewing! 😊 
@mavrk, thanks for your PR! By analyzing the history of the files in this pull request, we identified @bmamlin, @dkayiwa and @suniala to be potential reviewers.

[![Coverage Status](https://coveralls.io/builds/10171063/badge)](https://coveralls.io/builds/10171063)

Coverage decreased (-0.005%) to 55.726% when pulling **5565b9c22096144c2ff9ee050b6e98ca33ce7ccf on mavrk:TRUNK-5039** into **163bb191a2d342a7c6192c2e9fc464dda619b050 on openmrs:master**.

@dkayiwa the coverage test failed. What should I do about that?
For this pull request, you can ignore.
One more thing, on my machine a test failed. However, the Travis-CI build passed. I haven't changed anything related to that test. Any idea what could have happened?
![capture](https://cloud.githubusercontent.com/assets/16015762/22993699/e708fa9a-f3e9-11e6-8439-e29c80f59048.PNG)

@dkayiwa Nevermind, it worked the 4th time. No idea what happened for the first three times
@jtatia, thanks for your PR! By analyzing the history of the files in this pull request, we identified @bmamlin, @Magicpotatoes2 and @jdegraft to be potential reviewers.

[![Coverage Status](https://coveralls.io/builds/10172295/badge)](https://coveralls.io/builds/10172295)

Coverage decreased (-0.03%) to 55.704% when pulling **3625e817af1824879a4a986caa368cba555f5b63 on jtatia:TRUNK-4916** into **163bb191a2d342a7c6192c2e9fc464dda619b050 on openmrs:master**.

Is this all that you found in all the services?
most of them have already been changed. I made small changes in a couple of test since the the data that they were using were giving validation exception. Any unvoidxxx() or unretirexxx() method that hasn't been changed is because they are calling another convenience save methods from within the same class.
@hilz041, thanks for your PR! By analyzing the history of the files in this pull request, we identified @bmamlin, @karrtikiyer-tw and @rkorytkowski to be potential reviewers.
Add JUnit annotations according to code comments.
This is an improvement. But i still see two commits that need to be squashed!

[![Coverage Status](https://coveralls.io/builds/10179450/badge)](https://coveralls.io/builds/10179450)

Coverage decreased (-0.02%) to 55.713% when pulling **bf2b1443d2bf788e5a68848a7f35051727b8388d on hilz041:TRUNK-248** into **163bb191a2d342a7c6192c2e9fc464dda619b050 on openmrs:master**.

thank you @reubenvarghese1 technical debt went down :)
see https://ci.openmrs.org/sonar/dashboard/index/1865?did=1
@mavrk thanks! can you please add the issue number in the github PR description, this way the reviewer can easily navigate to the issue you are trying to solve. thank you :)
@teleivo There you go :)
Anytime @teleivo .I'm glad my contribution was of use :-)
Thanks @teleivo for reviewing this! I think you already have permission to merge, whenever you feel like you should. Not so? 😊 
@dkayiwa I dont have write access to the repo
@hilz041, thanks for your PR! By analyzing the history of the files in this pull request, we identified @bmamlin, @karrtikiyer-tw and @rkorytkowski to be potential reviewers.
Add @should annotations according to code comments.

[![Coverage Status](https://coveralls.io/builds/10181516/badge)](https://coveralls.io/builds/10181516)

Coverage decreased (-0.02%) to 55.716% when pulling **8924a751abfe774fde144fec0540912ce14fce4a on hilz041:master** into **163bb191a2d342a7c6192c2e9fc464dda619b050 on openmrs:master**.

@hilz041 after creating a pull request, do you take time to look at the number of commits contained in it? :)

[![Coverage Status](https://coveralls.io/builds/10181833/badge)](https://coveralls.io/builds/10181833)

Coverage increased (+0.02%) to 55.754% when pulling **9fb311f17129aafb3cfea293de576261f82c1244 on mavrk:TRUNK-5039** into **163bb191a2d342a7c6192c2e9fc464dda619b050 on openmrs:master**.

@teleivo Did I get it right this time?
@hilz041 please address my comment to your code and squash your commits :)
@dkayiwa its good to go!
@mavrk, thanks for your PR! By analyzing the history of the files in this pull request, we identified @bmamlin, @dkayiwa and @suniala to be potential reviewers.

[![Coverage Status](https://coveralls.io/builds/10183035/badge)](https://coveralls.io/builds/10183035)

Coverage increased (+0.004%) to 55.736% when pulling **b52c988a2cda0189b7c00ae9e9ee229ec679cd03 on mavrk:TRUNK-5039** into **163bb191a2d342a7c6192c2e9fc464dda619b050 on openmrs:master**.

@teleivo The Travis-CI failed on the previous PR. I tried re-opening it but got no different result. This is a new PR. Thanks for that whitespaces tip. I configured eclipse to view invisible whitespaces and removed the discrepancy.
@dkayiwa  every time i pull i see other earlier pulls, how can i delete these pulls so that i start from scratch ?
@dkayiwa Have a look. @teleivo approved it on the previous PR
@hilz041, thanks for your PR! By analyzing the history of the files in this pull request, we identified @bmamlin, @rkorytkowski and @karrtikiyer-tw to be potential reviewers.
I have added @should annotations according to code comments.
git checkout master
git pull upstream master
git checkout branchname
Put in your changes and create a pull request.

[![Coverage Status](https://coveralls.io/builds/10185691/badge)](https://coveralls.io/builds/10185691)

Coverage decreased (-0.03%) to 55.704% when pulling **e94897f45165af3538a53cf0f6e8134c03664f7f on hilz041:TRUNK-248** into **163bb191a2d342a7c6192c2e9fc464dda619b050 on openmrs:master**.


[![Coverage Status](https://coveralls.io/builds/10187231/badge)](https://coveralls.io/builds/10187231)

Coverage decreased (-0.01%) to 55.72% when pulling **b577a507b1247c109b1c41f080cdb47a537d728e on yvsssantosh:TRUNK-4939** into **163bb191a2d342a7c6192c2e9fc464dda619b050 on openmrs:master**.


[![Coverage Status](https://coveralls.io/builds/10187284/badge)](https://coveralls.io/builds/10187284)

Coverage increased (+0.02%) to 55.751% when pulling **b577a507b1247c109b1c41f080cdb47a537d728e on yvsssantosh:TRUNK-4939** into **163bb191a2d342a7c6192c2e9fc464dda619b050 on openmrs:master**.

@teleivo can you check again if you can now merge pull requests?
@dkayiwa yes, merged here https://github.com/openmrs/openmrs-core/pull/2000 :)
thanks @mavrk !
@teleivo thanks for your help and patience :)
That was fast! 👍 
@mavrk, thanks for your PR! By analyzing the history of the files in this pull request, we identified @bmamlin, @ykarim and @macorrales to be potential reviewers.

[![Coverage Status](https://coveralls.io/builds/10198597/badge)](https://coveralls.io/builds/10198597)

Coverage decreased (-0.02%) to 55.726% when pulling **af3c94fec1674bc34b7d7c89f3a93dee6a3ac15d on mavrk:TRUNK-5044** into **69e4a4eaaaad3b9b2a297273169770b6c6df974a on openmrs:master**.

@bmamlin, @ykarim and @macorrales Do I need to worry about the coverage test failing for this PR?
@mavrk, thanks for your PR! By analyzing the history of the files in this pull request, we identified @bmamlin, @dkayiwa and @lluismf to be potential reviewers.

[![Coverage Status](https://coveralls.io/builds/10201645/badge)](https://coveralls.io/builds/10201645)

Coverage decreased (-0.03%) to 55.714% when pulling **a97ec5f9d2baf20f0fd9b278ec1767a2827f5a9f on mavrk:TRUNK-5038** into **9c705a0239edc2964ece2375f2e55aea575c3264 on openmrs:master**.

@bmamlin, @dkayiwa and @lluismf The coverage test failed, anything to worry about? Anything I should change?
@dkayiwa  Please review
@patrickpl, thanks for your PR! By analyzing the history of the files in this pull request, we identified @rkorytkowski, @sunbiz and @wluyima to be potential reviewers.

[![Coverage Status](https://coveralls.io/builds/10251346/badge)](https://coveralls.io/builds/10251346)

Coverage decreased (-0.009%) to 55.736% when pulling **b45b6a8c41d40e1aced76e809fca6064a725027a on patrickpl:master** into **10787d2b5970288354bc9d6940a3240c3dda0ea7 on openmrs:master**.

@cioan, thanks for your PR! By analyzing the history of the files in this pull request, we identified @bmamlin and @dkayiwa to be potential reviewers.

[![Coverage Status](https://coveralls.io/builds/10267773/badge)](https://coveralls.io/builds/10267773)

Coverage decreased (-0.003%) to 55.742% when pulling **fc66702901b1c9efb7744696b2cc3a4e7265190a on jtatia:TRUNK-4916** into **10787d2b5970288354bc9d6940a3240c3dda0ea7 on openmrs:master**.

Thanks @patrickpl for the contribution! 😊 
Do you mind pointing me to the ticket for this? Or did you get a chance to have a look at https://wiki.openmrs.org/display/docs/Pull+Request+Tips
Closing because of the above comments.
Is there a general ticket for clean-ups like this?
You would have to create it yourself. 😊  https://wiki.openmrs.org/display/docs/Tickets

[![Coverage Status](https://coveralls.io/builds/10270163/badge)](https://coveralls.io/builds/10270163)

Coverage decreased (-0.03%) to 55.714% when pulling **4cd8bb49d45ffec739ef6c2ffea915f80e91c635 on jtatia:TRUNK-4916** into **10787d2b5970288354bc9d6940a3240c3dda0ea7 on openmrs:master**.

@dkayiwa thank you for your feedback. Since I don't want to become a developer of this project I will not setup IDs, accounts, ... Anyway my fix is just a minor clean-up and is not changing any functionality. You can reject my PR without any issues :-)
@patrickpl do you have some time to share with us why you do not want to become a developer for this project? Could it be the long process of having to setup IDs, accounts, or anything else?
Am asking because we greatly value your contribution and would welcome feedback regarding what we should do better to make it super easy for people like you to contribute, and hence save even more lives! 😊 
Thanks @teleivo  and @dkayiwa  let me fix that and commit again.

[![Coverage Status](https://coveralls.io/builds/10271462/badge)](https://coveralls.io/builds/10271462)

Coverage decreased (-0.05%) to 55.699% when pulling **6ffff01c483eef4a24b9010445932aa32cf5aa9f on jtatia:TRUNK-4916** into **10787d2b5970288354bc9d6940a3240c3dda0ea7 on openmrs:master**.

@mavrk, thanks for your PR! By analyzing the history of the files in this pull request, we identified @bmamlin, @dkayiwa and @lluismf to be potential reviewers.

[![Coverage Status](https://coveralls.io/builds/10272281/badge)](https://coveralls.io/builds/10272281)

Coverage decreased (-0.02%) to 55.729% when pulling **11c2cc0e9dba167c516f813aa32b691a80c698a7 on mavrk:TRUNK-5036** into **10787d2b5970288354bc9d6940a3240c3dda0ea7 on openmrs:master**.

@hilz041, thanks for your PR! By analyzing the history of the files in this pull request, we identified @bmamlin, @rkorytkowski and @karrtikiyer-tw to be potential reviewers.
I have added JUnit @should annotation according to code comments.

[![Coverage Status](https://coveralls.io/builds/10273040/badge)](https://coveralls.io/builds/10273040)

Coverage decreased (-0.1%) to 55.65% when pulling **d709007898afe9360803b9b97c02c77299803d2a on hilz041:TRUNK-248** into **10787d2b5970288354bc9d6940a3240c3dda0ea7 on openmrs:master**.

I'm not interested in the project from a development point of view. I prefer different technologies.

In my opinion have a strong development process can be a benefit, but by forcing people to create accounts, write tickets, etc. is not working for the people that are just passing thru and fixing things on the fly. Based on the statistics of the linux kernel this long tail is doing a significant amount of work. IMHO you should try to understand how you can proceed with the one time committers and how you can convert them into an often committer.
@patrickpl your suggestion makes a lot of sense!
We are definitely going to look into it and make it easier for contributors who may not go through the process of creating accounts and tickets.

And to give an example of what we could do, i have created this ticket for your work: https://issues.openmrs.org/browse/TRUNK-5070
Then on the ticket, i have linked to your merged pull request.

Does this sound right to you? 😊 
Thanks again for the contribution! 👍 
Yes, sounds good. Don't get me wrong I understand the process and the benefits (we are using a similar one in the company). It is just that for some people/work it is not optimal. Good luck!
@patrickpl i fully understand you and completely agree! 😊 
@cioan, thanks for your PR! By analyzing the history of the files in this pull request, we identified @bmamlin to be a potential reviewer.
@PKatGITHUB, thanks for your PR! By analyzing the history of the files in this pull request, we identified @bmamlin, @bharatak and @preethi29 to be potential reviewers.

[![Coverage Status](https://coveralls.io/builds/10279369/badge)](https://coveralls.io/builds/10279369)

Coverage increased (+0.04%) to 55.751% when pulling **8fefe7faed4c3b4f93b1effd8d982adaf91db91a on PKatGITHUB:TRUNK-5058** into **e59ad961841ae9f65cfc751bb5fe3ceddf95d1bb on openmrs:master**.

@cioan do you mind squashing the commits into one?
All set. Thanks @dkayiwa !
@dkayiwa  please have a look at it.
@teleivo what do you think of this? :)
@PKatGITHUB, thanks for your PR! By analyzing the history of the files in this pull request, we identified @bmamlin, @dkayiwa and @Magicpotatoes2 to be potential reviewers.

[![Coverage Status](https://coveralls.io/builds/10294415/badge)](https://coveralls.io/builds/10294415)

Coverage decreased (-0.1%) to 55.613% when pulling **562e2f75c200422f4dd6ab70b25d7da9ef166af5 on PKatGITHUB:TRUNK-5035** into **5c9d4cf46ea5dd8b7e43f8ed4ab1c716ad122728 on openmrs:master**.

Is the JIRA ticket link on this pull request correct?

[![Coverage Status](https://coveralls.io/builds/10295272/badge)](https://coveralls.io/builds/10295272)

Coverage decreased (-0.04%) to 55.687% when pulling **f5d981669994a6049ea4730087654af58a59befd on PKatGITHUB:TRUNK-5035** into **5c9d4cf46ea5dd8b7e43f8ed4ab1c716ad122728 on openmrs:master**.

@dkayiwa yes the ticket name is TRUNK-5035.

Does the JIRA ticket link on this pull request look correct? 😊 
Are you looking at the link below "Related Issue"

[![Coverage Status](https://coveralls.io/builds/10295380/badge)](https://coveralls.io/builds/10295380)

Coverage decreased (-0.03%) to 55.7% when pulling **f5d981669994a6049ea4730087654af58a59befd on PKatGITHUB:TRUNK-5035** into **5c9d4cf46ea5dd8b7e43f8ed4ab1c716ad122728 on openmrs:master**.

I put a comment on the ticket.
@dkayiwa can you please tell me where i am wrong?

Can you read from the top of this page and tell me what you see?
@dkayiwa  updated it.
Thank you very much for your help.
And sorry for the inconvinience.
@hilz041 i have noticed that just replacing the TODO with @should annotations would make us lose the ability to search for missing tests using TODOs. So my recommendation is that the @should annotations should be added together with the missing tests.
@dkayiwa is this one fine?

Did you get a chance to look at this? https://wiki.openmrs.org/display/docs/Pull+Request+Tips
@dkayiwa i read it... and have followed each guideline.
Am i still missing something?

@dkayiwa added a comment. if thats done then it can be merged
@teleivo  ok i am doing it


![Codacy](https://www.codacy.com/assets/images/favicon.png) Here is an overview of what got changed by this pull request:


```diff

Complexity increasing per file
==============================
- api/src/main/java/org/openmrs/api/impl/ObsServiceImpl.java  1
         
```


See the complete overview on [Codacy](https://www.codacy.com/app/infrastructure/openmrs-core/pullRequest?prid=529876&bid=4221833)
        

[![Coverage Status](https://coveralls.io/builds/10299829/badge)](https://coveralls.io/builds/10299829)

Coverage increased (+0.02%) to 55.724% when pulling **a6078a5a5db7b25d6b53cd0dcac8ac1cf706b6ab on PKatGITHUB:TRUNK-5058** into **e59ad961841ae9f65cfc751bb5fe3ceddf95d1bb on openmrs:master**.

@florianschmitt, thanks for your PR! By analyzing the history of the files in this pull request, we identified @chethandeshpande, @bmamlin and @Magicpotatoes2 to be potential reviewers.

![Codacy](https://www.codacy.com/assets/images/favicon.png) Here is an overview of what got changed by this pull request:


```diff

Issues
======
+ Solved 3
- Added 19
           

Complexity increasing per file
==============================
- api/src/test/java/org/openmrs/validator/VisitValidatorTest.java  6
         

Complexity decreasing per file
==============================
+ api/src/main/java/org/openmrs/BaseCustomizableMetadata.java  -18
+ api/src/main/java/org/openmrs/BaseCustomizableData.java  -18
+ api/src/main/java/org/openmrs/Concept.java  -3
         

Clones removed
==============
+ api/src/main/java/org/openmrs/BaseCustomizableMetadata.java  -3
+ api/src/main/java/org/openmrs/BaseCustomizableData.java  -3
         
```


See the complete overview on [Codacy](https://www.codacy.com/app/infrastructure/openmrs-core/pullRequest?prid=532210&bid=4227507)
        
This is why we didn't use codacy in the past...

cc/ @teleivo, @dkayiwa 
@getshravan, thanks for your PR! By analyzing the history of the files in this pull request, we identified @ys-achinta to be a potential reviewer.
found some issues in my changes so closing this pull request
will create a new pull request
I think if you add a ruleset.xml file with exclude rules of the test folder, the "Method names should not contain underscores" issue could be suppressed. See [here](http://pmd.sourceforge.net/pmd-5.1.1/howtomakearuleset.html) and [here](https://support.codacy.com/hc/en-us/articles/207994335-Code-Patterns)
@florianschmitt we need to configure codacy. discussion is here https://talk.openmrs.org/t/codacy-in-openmrs-core-prs/5708/24
@mavrk, thanks for your PR! By analyzing the history of the files in this pull request, we identified @bmamlin, @michaelhofer-slg and @vishnuraom to be potential reviewers.

![Codacy](https://www.codacy.com/assets/images/favicon.png) Here is an overview of what got changed by this pull request:


```diff

Issues
======
- Added 17
           

Complexity increasing per file
==============================
- api/src/test/java/org/openmrs/api/impl/ConceptServiceImplTest.java  15
         

Complexity decreasing per file
==============================
+ api/src/main/java/org/openmrs/api/impl/ConceptServiceImpl.java  -1
         
```


See the complete overview on [Codacy](https://www.codacy.com/app/infrastructure/openmrs-core/pullRequest?prid=533445&bid=4231172)
        
@reubenvarghese1, thanks for your PR! By analyzing the history of the files in this pull request, we identified @wluyima and @rkorytkowski to be potential reviewers.
@gichangi, thanks for your PR! By analyzing the history of the files in this pull request, we identified @bmamlin and @dkayiwa to be potential reviewers.
@gichangi this pull request has lots of merge conflicts. Did you get a chance to look at this? https://wiki.openmrs.org/display/docs/Pull+Request+Tips
@getshravan, thanks for your PR! By analyzing the history of the files in this pull request, we identified @ys-achinta to be a potential reviewer.
How do i ignore/delete the commit# 0351600. I would like you to consider only commit 07d132e for merge
@getshravan did you get a chance to look at this? https://wiki.openmrs.org/display/docs/Pull+Request+Tips
@reubenvarghese1 did you actually test this out and confirm that it fixes the reported problem?

[![Coverage Status](https://coveralls.io/builds/10334457/badge)](https://coveralls.io/builds/10334457)

Coverage decreased (-0.1%) to 55.6% when pulling **a74a94a6b5e2a6b696fd8eb9bb952a405d093fca on reubenvarghese1:master** into **9aaf508a29f783339d61077b252b33009e5a4ed6 on openmrs:master**.


[![Coverage Status](https://coveralls.io/builds/10334882/badge)](https://coveralls.io/builds/10334882)

Coverage decreased (-0.02%) to 55.684% when pulling **a74a94a6b5e2a6b696fd8eb9bb952a405d093fca on reubenvarghese1:master** into **9aaf508a29f783339d61077b252b33009e5a4ed6 on openmrs:master**.

Yes @dkayiwa  , I manually ran the test again and also deleted my existing installation of OpenMRS and also wiped all the databases or anything that came with it and then did a fresh install . I also took a video for you to see and tell me as to whether that's what we want .By the way, could you re-run the coveralls test ? It was last run an hr ago and hence it still fails in spite of the Travis CI build has now passing .The issue was at my side and on a little more inspection of the code, I realised that I had not typecaste an object into a Number before treating it like a number :-)
@reubenvarghese1  without your changes, are you able to easily reproduce the reported problem?
@dkayiwa  Yes ,I am able to. I feel what you said (about him converting it into a set whereas the test expects an ordered set) is the solution of the problem. Jai also tried it without including my changes and it fails. But I wonder about the reason due to which it does not always fail

[![Coverage Status](https://coveralls.io/builds/10336830/badge)](https://coveralls.io/builds/10336830)

Coverage increased (+0.009%) to 55.718% when pulling **4f7ad97d406688a121f94da559ed49e743473d78 on reubenvarghese1:master** into **9aaf508a29f783339d61077b252b33009e5a4ed6 on openmrs:master**.

@reubenvarghese1, thanks for your PR! By analyzing the history of the files in this pull request, we identified @bmamlin, @lluismf and @preethi29 to be potential reviewers.

[![Coverage Status](https://coveralls.io/builds/10337090/badge)](https://coveralls.io/builds/10337090)

Coverage remained the same at 55.708% when pulling **a7fd398f39e465dde1d120dbc787f9d6fb70df46 on reubenvarghese1:master** into **9aaf508a29f783339d61077b252b33009e5a4ed6 on openmrs:master**.

@reubenvarghese1, thanks for your PR! By analyzing the history of the files in this pull request, we identified @wluyima and @rkorytkowski to be potential reviewers.

[![Coverage Status](https://coveralls.io/builds/10337397/badge)](https://coveralls.io/builds/10337397)

Coverage increased (+0.02%) to 55.7% when pulling **299710d65bea9bf5dd49daed9eb7fc23b0f5f2f3 on reubenvarghese1:master** into **df4621c1928148d6a3c417c9fdee4004904fb63e on openmrs:master**.

@dkayiwa  Have you had a chance to look at this PR?

[![Coverage Status](https://coveralls.io/builds/10345329/badge)](https://coveralls.io/builds/10345329)

Coverage decreased (-0.03%) to 55.689% when pulling **0cc50bcbf58c85a4b0c37155a704ca76425b4689 on tmarzeion:TRUNK-5027** into **a9a1fcee01ff6a8d40af6440be014a3b208ecc52 on openmrs:master**.


![Codacy](https://www.codacy.com/assets/images/favicon.png) Here is an overview of what got changed by this pull request:


```diff

Complexity increasing per file
==============================
- api/src/main/java/org/openmrs/obs/handler/AbstractHandler.java  8
         

Clones added
============
- api/src/test/java/org/openmrs/obs/ImageHandlerTest.java  8
- api/src/test/java/org/openmrs/obs/MediaHandlerTest.java  8
- api/src/test/java/org/openmrs/obs/BinaryDataHandlerTest.java  7
- api/src/test/java/org/openmrs/obs/BinaryStreamHandlerTest.java  6
- api/src/test/java/org/openmrs/obs/TextHandlerTest.java  7
         
```


See the complete overview on [Codacy](https://www.codacy.com/app/infrastructure/openmrs-core/pullRequest?prid=529880&bid=4221838)
        

[![Coverage Status](https://coveralls.io/builds/10345534/badge)](https://coveralls.io/builds/10345534)

Coverage decreased (-0.06%) to 55.652% when pulling **3b6bc9d39184456d6bdc415c0e6f94cb1e0de76f on tmarzeion:TRUNK-5027** into **a9a1fcee01ff6a8d40af6440be014a3b208ecc52 on openmrs:master**.

@teleivo, thanks for your PR! By analyzing the history of the files in this pull request, we identified @bmamlin, @riipeplum and @rkorytkowski to be potential reviewers.
@dkayiwa I've applied changes according to Your review :)
Please take a look on that when You will have some time :)
@dkayiwa , are you ok with the latest iteration here (the change in `AbstractHandler`)?
@teleivo, thanks for your PR! By analyzing the history of the files in this pull request, we identified @bwolfe, @rkorytkowski and @kishoreyekkanti to be potential reviewers.

[![Coverage Status](https://coveralls.io/builds/10364472/badge)](https://coveralls.io/builds/10364472)

Coverage decreased (-0.009%) to 55.698% when pulling **80234c679f046475f87edfe06ce6ba59722cae6d on teleivo:TRUNK-5078** into **bb984630defa435fd40ce7167372be543ba9eaae on openmrs:master**.

@mks-d you still need to follow our process as tipped here https://wiki.openmrs.org/display/docs/Pull+Request+Tips 😊 
@teleivo, thanks for your PR! By analyzing the history of the files in this pull request, we identified @bmamlin, @rkorytkowski and @patrickpl to be potential reviewers.
@mks-d, thanks for your PR! By analyzing the history of the files in this pull request, we identified @bmamlin, @dkayiwa and @bharatak to be potential reviewers.
@mks-d, thanks for your PR! By analyzing the history of the files in this pull request, we identified @bmamlin, @wluyima and @bharatak to be potential reviewers.
@teleivo, thanks for your PR! By analyzing the history of the files in this pull request, we identified @rkorytkowski, @patrickpl and @sunbiz to be potential reviewers.
@mks-d did you take a look at this? https://wiki.openmrs.org/display/docs/Pull+Request+Tips
The same applies to https://github.com/openmrs/openmrs-core/pull/2020
@mks-d did you take a look at this? https://wiki.openmrs.org/display/docs/Pull+Request+Tips
The same applies to #2020
@reubenvarghese1, thanks for your PR! By analyzing the history of the files in this pull request, we identified @bmamlin, @jdegraft and @sunbiz to be potential reviewers.

[![Coverage Status](https://coveralls.io/builds/10383209/badge)](https://coveralls.io/builds/10383209)

Changes Unknown when pulling **a429c2bf6d58b636a0a3061d545ff037c5aed32c on reubenvarghese1:master** into ** on openmrs:master**.

You also need to take care of MigrateAllergiesChangeSet
@dkayiwa yes I did so please point me right to the missed requirements because I fail to identify it/them.
@dkayiwa  Thanks for pointing that out. Done :-)

[![Coverage Status](https://coveralls.io/builds/10391124/badge)](https://coveralls.io/builds/10391124)

Coverage increased (+0.01%) to 55.71% when pulling **a3b06e278c3f52eb97b3112e72bb92c59ac55cd1 on reubenvarghese1:master** into **c09d7dfe8b1c0dd0bc9f150f86ef6d90f12f6790 on openmrs:master**.

You had not assigned yourself to TRUNK-5077 and hit the code review button. But now you have done it. Thanks! 😊 
@teleivo, thanks for your PR! By analyzing the history of the files in this pull request, we identified @bmamlin to be a potential reviewer.
@teleivo, thanks for your PR! By analyzing the history of the files in this pull request, we identified @bmamlin to be a potential reviewer.
@dkayiwa I broke the build because of the license header in the checkstyle.xml, you were to quick with merging :) I am pretty sure this fixes it but lets wait if travis agrees :)
I had seen the travis failure, but it looked something else from the travis log. Did not look related to the changes in the commit. 😊 

[![Coverage Status](https://coveralls.io/builds/10398125/badge)](https://coveralls.io/builds/10398125)

Changes Unknown when pulling **86ca77b1145aab5a24be8e91815d765d0a8a7311 on teleivo:TRUNK-5085** into ** on openmrs:master**.


![Codacy](https://www.codacy.com/assets/images/favicon.png) Here is an overview of what got changed by this pull request:


```diff

Complexity decreasing per file
==============================
+ api/src/main/java/org/openmrs/util/databasechange/MigrateAllergiesChangeSet.java  -1
         
```


See the complete overview on [Codacy](https://www.codacy.com/app/openmrs/openmrs-core/pullRequest?prid=539614&bid=4248260)
        

[![Coverage Status](https://coveralls.io/builds/10398558/badge)](https://coveralls.io/builds/10398558)

Coverage decreased (-0.04%) to 55.71% when pulling **7e426eda72c4bb2bfbd3a600504ec6651b01e8e2 on reubenvarghese1:master** into **42a4d721e52b3e87f6286f02c52d7a738eb42a39 on openmrs:master**.

Some existing implementations stored allergies that look like these: https://github.com/openmrs/openmrs-core/blob/1.9.x/api/src/main/java/org/openmrs/activelist/AllergyType.java
You need to take care of upgrades from such.
@teleivo, thanks for your PR! By analyzing the history of the files in this pull request, we identified @bmamlin to be a potential reviewer.

[![Coverage Status](https://coveralls.io/builds/10400475/badge)](https://coveralls.io/builds/10400475)

Coverage increased (+0.003%) to 55.751% when pulling **ee5373c0828944857b7b241eda0d491be49b2ff4 on teleivo:TRUNK-5085** into **42a4d721e52b3e87f6286f02c52d7a738eb42a39 on openmrs:master**.

I'm really sorry I took time because I was tied up with my exams :(
I think this should fix it

Please review

[![Coverage Status](https://coveralls.io/builds/10402564/badge)](https://coveralls.io/builds/10402564)

Coverage increased (+0.01%) to 55.755% when pulling **d0c83cbf142b7f743314b6b0bcc68b05b23800ca on yvsssantosh:TRUNK-4939** into **0b59a781f80265f75ac5c2f33f164414b33d0553 on openmrs:master**.


[![Coverage Status](https://coveralls.io/builds/10402673/badge)](https://coveralls.io/builds/10402673)

Coverage decreased (-0.02%) to 55.727% when pulling **d0c83cbf142b7f743314b6b0bcc68b05b23800ca on yvsssantosh:TRUNK-4939** into **0b59a781f80265f75ac5c2f33f164414b33d0553 on openmrs:master**.

@reubenvarghese1 am closing this pull request because the changes need to go to the master branch.
I'm pretty sure the Travis failure is unrelated to this ticket. I'm rerunning it.

[![Coverage Status](https://coveralls.io/builds/10403256/badge)](https://coveralls.io/builds/10403256)

Coverage decreased (-0.0004%) to 55.708% when pulling **07d132e2603534305bbbff61172457b2a754a83b on getshravan:master** into **9aaf508a29f783339d61077b252b33009e5a4ed6 on openmrs:master**.


[![Coverage Status](https://coveralls.io/builds/10403731/badge)](https://coveralls.io/builds/10403731)

Coverage decreased (-0.01%) to 55.734% when pulling **4f6d107d261f25e17fdad40e9707dddc35672db2 on yvsssantosh:TRUNK-4939** into **0b59a781f80265f75ac5c2f33f164414b33d0553 on openmrs:master**.


[![Coverage Status](https://coveralls.io/builds/10403871/badge)](https://coveralls.io/builds/10403871)

Coverage decreased (-0.03%) to 55.718% when pulling **4f6d107d261f25e17fdad40e9707dddc35672db2 on yvsssantosh:TRUNK-4939** into **0b59a781f80265f75ac5c2f33f164414b33d0553 on openmrs:master**.

@getshravan we merge PRs with only one commit. Try to squash your commits into one. Like @dkayiwa said, have a look at https://wiki.openmrs.org/display/docs/Pull+Request+Tips and squash your commits :)
Also change your PR title to TRUNK 5056 : *Issue description*
I'm confused by this changeset and PR. This RA ticket should not require any changes to openmrs-core.

The idea is that openmrs-core supports these AllergenTypes, but that the UI was designed for only 3. We want to leave the UI basically looking the same as it did with the release of RefApp 2.4, but it needs to handle a different back-end structure.
PS- I think this PR should be closed, insofar as it's about RA-1283, and not about a core ticket.
I am new to git. Do i need to close the current pull request and after squashing create a new pull request?

[![Coverage Status](https://coveralls.io/builds/10410919/badge)](https://coveralls.io/builds/10410919)

Coverage decreased (-0.04%) to 55.705% when pulling **8d27727cb3ce77237bdfb8c8bc9faf3ff70e0953 on getshravan:master** into **0b59a781f80265f75ac5c2f33f164414b33d0553 on openmrs:master**.

I squashed the commits.. please verify and let me know if i am not doing it right. 

[![Coverage Status](https://coveralls.io/builds/10411069/badge)](https://coveralls.io/builds/10411069)

Coverage decreased (-0.03%) to 55.717% when pulling **2aadea236e630b350fc4f63dbb5223bf7dec9c7f on getshravan:master** into **0b59a781f80265f75ac5c2f33f164414b33d0553 on openmrs:master**.

@mks-d, thanks for your PR! By analyzing the history of the files in this pull request, we identified @dkayiwa, @bmamlin and @ShekharReddy4 to be potential reviewers.

[![Coverage Status](https://coveralls.io/builds/10415043/badge)](https://coveralls.io/builds/10415043)

Coverage decreased (-0.006%) to 55.739% when pulling **526844e6d208da1751c922246a15ecc8096667db on mekomsolutions:2.1_TRUNK-5077** into **0b59a781f80265f75ac5c2f33f164414b33d0553 on openmrs:master**.

@teleivo, thanks for your PR! By analyzing the history of the files in this pull request, we identified @bmamlin, @riipeplum and @ddworken to be potential reviewers.
@teleivo, thanks for your PR! By analyzing the history of the files in this pull request, we identified @bmamlin, @riipeplum and @ddworken to be potential reviewers.
Than you @dkayiwa !
@mks-d are you planning to do one for 1.11.x?
@teleivo, thanks for your PR! By analyzing the history of the files in this pull request, we identified @bmamlin to be a potential reviewer.

[![Coverage Status](https://coveralls.io/builds/10420742/badge)](https://coveralls.io/builds/10420742)

Coverage decreased (-0.02%) to 55.714% when pulling **7cb0d1f0b90917f1aa52e90691048eafac5cfd47 on getshravan:master** into **8fb29b9917a44500b81350b5d5d0b3da5a87d61a on openmrs:master**.

Also there is no need to give such a lengthy title TRUNK 5056 : Use apache StringUtils in OrderSetServiceImpl would do just fine
I made changes as per @mavrk  comments and also added 3 extra junit tests around the change i have made to see if that increases the test coverage. Not sure why still the coverage is  down by -0.02%.  Any idea on why the coverage has gone down?
Don't worry much about coverage for this issue and I think the tests you've added are similar so only one test would be fine. However, let's see what @ivange94 has to say
@getshravan to see what reduces your test coverage just click on the details next to coverage/coveralls. But I don't think you need to worry about that. The change you making literrally needs no test implemented. I will assume that logic is already tested so all your change has to ensure is that existing tests don't break which from travis they don't. I looked at the coverage details and it has to do with other files that were not properly tested so you shouldn't bother about that. 
oops sorry about the comment above about merge conflicts(deleted it). It was not for you.

[![Coverage Status](https://coveralls.io/builds/10423649/badge)](https://coveralls.io/builds/10423649)

Coverage decreased (-0.01%) to 55.722% when pulling **0552089ce14c1c9fe07d18ff9ba504e425d50e81 on getshravan:master** into **30de1f8186c40343056c55071cdd6720aee2dfc4 on openmrs:master**.

I removed the test cases based on @ivange94 comments
@mks-d, thanks for your PR! By analyzing the history of the files in this pull request, we identified @bmamlin to be a potential reviewer.
Yes I just did it at [#2039](https://github.com/openmrs/openmrs-core/pull/2039).
But you said you would do 1.12.x right?
Yes i have cherry-picked to 1.12.x.
Thanks 👍 
@mavrk, thanks for your PR! By analyzing the history of the files in this pull request, we identified @bmamlin, @michaelhofer-slg and @vishnuraom to be potential reviewers.

![Codacy](https://www.codacy.com/assets/images/favicon.png) Here is an overview of what got changed by this pull request:


```diff

Complexity decreasing per file
==============================
+ api/src/main/java/org/openmrs/api/impl/ConceptServiceImpl.java  -1
         
```


See the complete overview on [Codacy](https://www.codacy.com/app/openmrs/openmrs-core/pullRequest?prid=544692&bid=4263469)
        

[![Coverage Status](https://coveralls.io/builds/10435859/badge)](https://coveralls.io/builds/10435859)

Coverage increased (+0.2%) to 55.929% when pulling **b7b11cad050501952ef4dd9afb3d19acf86fddea on mavrk:TRUNK-5066** into **d041208d3d538a07a01450999ab03bde27d52a19 on openmrs:master**.

@mavrk good job! please incorporate my suggestions. also click on the coveralls badge that coveralls added in a comment above and check the coverage of ConceptServiceImpl you can see that coverage increased which is great! but I am sure you can add a few more tests. the lines you missed are shown in red. thanks a lot for your effort!!!
@teleivo, thanks for your PR! By analyzing the history of the files in this pull request, we identified @bmamlin, @riipeplum and @ddworken to be potential reviewers.
@teleivo I think the retireDrug(Drug, String) and unretireDrug(Drug) methods in ConceptServiceImpl are ambiguous. Any idea?
@mavrk explain what you mean by ambiguous?
@teleivo The string argument passed in retireDrug() is not used anywhere
@mavrk good catch, please create a jira issue that this parameter is unused and should either be removed (new method without the unused parameter, deprecation annotation on the current method + reference) or the param should be used.

and what about unretireDrug(Drug)?
@teleivo They both had the same method body and that confused me. However, Robby O' Connor cleared that up for me
@mavrk great!

but if the parameter is unused please do

create a jira issue that this parameter is unused and should either be removed (new method without the unused parameter, deprecation annotation on the current method + reference) or the param should be used.
I am creating that issue
@teleivo, thanks for your PR! By analyzing the history of the files in this pull request, we identified @bmamlin to be a potential reviewer.

[![Coverage Status](https://coveralls.io/builds/10449817/badge)](https://coveralls.io/builds/10449817)

Coverage decreased (-0.009%) to 55.716% when pulling **71c165ff21960fb5deb945bd5391cfbf847f05b5 on teleivo:TRUNK-5091** into **bae2781ab12664b1b308246be934842ef737607f on openmrs:master**.

@teleivo, thanks for your PR! By analyzing the history of the files in this pull request, we identified @bmamlin, @riipeplum and @ddworken to be potential reviewers.
@mavrk, thanks for your PR! By analyzing the history of the files in this pull request, we identified @bmamlin, @michaelhofer-slg and @vishnuraom to be potential reviewers.

[![Coverage Status](https://coveralls.io/builds/10451104/badge)](https://coveralls.io/builds/10451104)

Coverage increased (+0.02%) to 55.753% when pulling **05e1d9c286bc28a6637b1b1dc820d69a558e0ae0 on teleivo:TRUNK-5088** into **7110de102e4b5bacfa5b0be94a9d1fb317a62caf on openmrs:master**.


[![Coverage Status](https://coveralls.io/builds/10451306/badge)](https://coveralls.io/builds/10451306)

Coverage increased (+0.3%) to 55.994% when pulling **aa86490923261c05364557c6f3fe8cfbe4eb6c61 on mavrk:TRUNK-5066** into **7110de102e4b5bacfa5b0be94a9d1fb317a62caf on openmrs:master**.

@teleivo Sorry I had to create a new PR. My SourceTree crashed and the two heads won't match. There are still some "reds lines" in coverage review which are mostly logs. However, there are still one or two methods I have no idea how to write a test about.
@teleivo, thanks for your PR! By analyzing the history of the files in this pull request, we identified @bmamlin, @djazayeri and @riipeplum to be potential reviewers.

[![Coverage Status](https://coveralls.io/builds/10451608/badge)](https://coveralls.io/builds/10451608)

Coverage increased (+0.009%) to 55.744% when pulling **b3eebbfc1406cd4d373f8ae2ea4421af12937bca on teleivo:TRUNK-5088** into **c8d0c2bccbe3f7a8ba62bd2d2fcfff45b5dd9890 on openmrs:master**.

@mavrk no worries!

one question: are you using https://wiki.openmrs.org/display/docs/Generate+Test+Case+Plugin ?
reading your tests I dont think you do.
if not please do. this will generate the test boilerplate in the correct format for you from the @ should annotations in the ConceptService class

some more tests:
* retireConcept() has an if block that is not tested. seems like you retire a concept that is already retired but no concept that is not yet retired. thus the if block is not entered.
* add test for getAllDrugs()
* add test for getAllConceptClasses()
* add test for getAllConceptDatatypes()
* add test for getSetsContainingConcept() ensure that it returns an empty list

...
@teleivo Thanks :)
@teleivo I am getting a 404 for the webpage given in the setup instructions
@mavrk try again. i dont. maybe it was just currently not available
@lluismf there is something weird happening. if you click on the details button for codacy in the checks section with codacy, travis, coverall you end up at https://www.codacy.com/app/lluismf/openmrs-core/pullRequest?prid=546068

instead of here https://www.codacy.com/app/openmrs/openmrs-core/dashboard

and because you have different settings the PR fails

see yours: https://www.codacy.com/app/lluismf/openmrs-core/pullRequest?prid=546068
see openmrs: https://www.codacy.com/app/openmrs/openmrs-core/pullRequest?prid=546008
@vshl, thanks for your PR! By analyzing the history of the files in this pull request, we identified @bmamlin, @suniala and @mogoodrich to be potential reviewers.

[![Coverage Status](https://coveralls.io/builds/10463442/badge)](https://coveralls.io/builds/10463442)

Coverage increased (+0.01%) to 55.74% when pulling **e3b662f2ea85185c58bb35fa66d2f7027697606a on vshl:TRUNK-4906-Expanded-Cohort-Details** into **402d6650f51e7e074447f3961c7e619578649ff0 on openmrs:master**.

@mavrk did you get a chance to install the plugin and update/enhance your tests?
@teleivo are these the new codacy rules at work? 😊 
@dkayiwa yes, to strict? I agree with all of them.
@teleivo Sorry I had my classes today. I'll try to install that plugin once again. Is there any other link to that? The one on the wiki seems to be broken.
@dkayiwa can you help us out, the url to the eclipse plugin shown here https://wiki.openmrs.org/display/docs/Generate+Test+Case+Plugin

is broken. where can we get the plugin? is this related to the move from nexus to jfrog artifactory?
@teleivo Until the link is fixed I can manually look at the @should annotations and make the changes. Or can I use a different plugin?
There is a JUnit Test generator plugin on the official eclipse marketplace
@teleivo Only a few methods in ConceptServiceImpl.java have @should annotations so the plugin doesn't generate a test body for all methods.
@mavrk have you looked in the inferface ConceptService, thats where the @should annotations are. If they are missing which is probably so since you add tests that are missing, please add them. thanks a loooooooot!!! :)
@teleivo ConceptServiceImpl has only @see annotations, I'll add @should from ConceptService, finish the tests and update the PR
@mavrk just to prevent any misunderstanding :)

ConceptServiceImpl has the @see that is correct, since it is an implementation of the interface ConceptService it refers to its javadocs of the interface it implements. The @should annotations are on the interface ConceptService. Some might be missing since tests were missing. Please add the tests as you've done (fixing their style and adding some more as we discussed), and add the missing @should annotations in the interface ConceptService not the implemenation class. You can check other services like the PatientService with its PatientServiceImpl and see that this is how it is done.

@teleivo Sure, just now I realized that I wrote 'from' instead of 'to' :P. I understood your point the first time you made it and I've started making changes. Thanks for your help :)
@ILauerIV, thanks for your PR! By analyzing the history of the files in this pull request, we identified @dkayiwa, @bmamlin and @suniala to be potential reviewers.
@teleivo, thanks for your PR! By analyzing the history of the files in this pull request, we identified @Izaron, @dszafranek and @bmamlin to be potential reviewers.

![Codacy](https://www.codacy.com/assets/images/favicon.png) Here is an overview of what got changed by this pull request:


```diff

Issues
======
+ Solved 4
           
```


See the complete overview on [Codacy](https://www.codacy.com/app/openmrs/openmrs-core/pullRequest?prid=549238&bid=4277241)
        

[![Coverage Status](https://coveralls.io/builds/10486510/badge)](https://coveralls.io/builds/10486510)

Coverage increased (+0.009%) to 55.734% when pulling **c200cc9209b2e9b9639fe6811e39f22317ee3ccf on teleivo:TRUNK-5086** into **887aaae6e0dfe395b18593386435feb76da19457 on openmrs:master**.

@ILauerIV thanks for your contribution!!

* please take the time to read all of https://wiki.openmrs.org/display/docs/Pull+Request+Tips

* can you please check that your IDE settings are according to this [guide](https://wiki.openmrs.org/display/docs/Coding+Conventions#CodingConventions-IDE-configHowToConfigureYourIDE) your formatting is off

* please run the [tests locally](https://github.com/openmrs/openmrs-core#build-command) first to see if your changes work. and if your PR causes the build to fail, see travis error above please check why it failed. this is your responsibility.

* you are using the old style of unit tests. please check https://wiki.openmrs.org/display/docs/Generate+Test+Case+Plugin




@teleivo, thanks for your PR! By analyzing the history of the files in this pull request, we identified @bmamlin, @rkorytkowski and @suniala to be potential reviewers.

![Codacy](https://www.codacy.com/assets/images/favicon.png) Here is an overview of what got changed by this pull request:


```diff

Issues
======
+ Solved 7
           

Clones removed
==============
+ api/src/main/java/org/openmrs/BaseCustomizableMetadata.java  -1
         
```


See the complete overview on [Codacy](https://www.codacy.com/app/openmrs/openmrs-core/pullRequest?prid=549307&bid=4277550)
        

[![Coverage Status](https://coveralls.io/builds/10487453/badge)](https://coveralls.io/builds/10487453)

Coverage decreased (-0.003%) to 55.74% when pulling **4fa82423d7e9ad0b52afdc0f1eaca3b5f7a9f743 on teleivo:TRUNK-5097** into **3ca8a248a8b80104943f726632cd278b6db12f09 on openmrs:master**.

@teleivo, thanks for your PR! By analyzing the history of the files in this pull request, we identified @bmamlin, @rkorytkowski and @tomaszmueller to be potential reviewers.

![Codacy](https://www.codacy.com/assets/images/favicon.png) Here is an overview of what got changed by this pull request:


```diff

Issues
======
- Added 41
           

Clones added
============
- api/src/main/java/org/openmrs/PersonAddress.java  1
- api/src/main/java/org/openmrs/Location.java  1
- api/src/main/java/org/openmrs/ConceptDescription.java  1
- api/src/main/java/org/openmrs/BaseOpenmrsMetadata.java  2
- api/src/main/java/org/openmrs/BaseOpenmrsData.java  2
         
```


See the complete overview on [Codacy](https://www.codacy.com/app/openmrs/openmrs-core/pullRequest?prid=549363&bid=4277696)
        

[![Coverage Status](https://coveralls.io/builds/10487963/badge)](https://coveralls.io/builds/10487963)

Coverage decreased (-0.03%) to 55.722% when pulling **4d3954b5df582b357f562f1b837391881af220b2 on teleivo:TRUNK-5098** into **4791a15f97d7fc3bc95fe5ce60e20aae7dacae10 on openmrs:master**.


![Codacy](https://www.codacy.com/assets/images/favicon.png) Here is an overview of what got changed by this pull request:


```diff

Issues
======
- Added 35
           

Complexity increasing per file
==============================
- api/src/main/java/org/openmrs/obs/handler/AbstractHandler.java  8
         
```


See the complete overview on [Codacy](https://www.codacy.com/app/openmrs/openmrs-core/pullRequest?prid=506212&bid=4156722)
        
@teleivo, thanks for your PR! By analyzing the history of the files in this pull request, we identified @bmamlin, @suniala and @wluyima to be potential reviewers.

[![Coverage Status](https://coveralls.io/builds/10488304/badge)](https://coveralls.io/builds/10488304)

Coverage decreased (-0.003%) to 55.719% when pulling **ffa5e6f814e3a049c798f35139211f98e7f9a9b8 on teleivo:TRUNK-5086** into **236144acf4fbb9f2445914874996dd367f7ab71e on openmrs:master**.


[![Coverage Status](https://coveralls.io/builds/10488359/badge)](https://coveralls.io/builds/10488359)

Coverage decreased (-0.04%) to 55.683% when pulling **395c2a0e4c04fad2de254c520c8afbbdfb62c5e2 on tmarzeion:TRUNK-5027** into **236144acf4fbb9f2445914874996dd367f7ab71e on openmrs:master**.

@teleivo, thanks for your PR! By analyzing the history of the files in this pull request, we identified @owolabileg, @lluismf and @bmamlin to be potential reviewers.

[![Coverage Status](https://coveralls.io/builds/10488943/badge)](https://coveralls.io/builds/10488943)

Coverage increased (+0.003%) to 55.725% when pulling **0c7113b6ed7941c2579b90fb7b874af442d4cc6d on teleivo:replace-old-junit** into **863f98b4612ef59496e9844eec9b87c0ea4f3ddd on openmrs:master**.

@teleivo, thanks for your PR! By analyzing the history of the files in this pull request, we identified @bmamlin, @rkorytkowski and @dkayiwa to be potential reviewers.

![Codacy](https://www.codacy.com/assets/images/favicon.png) Here is an overview of what got changed by this pull request:


```diff

Issues
======
+ Solved 4
           
```


See the complete overview on [Codacy](https://www.codacy.com/app/openmrs/openmrs-core/pullRequest?prid=549512&bid=4277969)
        

[![Coverage Status](https://coveralls.io/builds/10489199/badge)](https://coveralls.io/builds/10489199)

Coverage decreased (-0.02%) to 55.716% when pulling **897056239bbf6bc36ed0a5c7f74ce0fd8e9904bb on teleivo:TRUNK-5102** into **7d9a823ca4ca5a2e0bb2bc9f651e2a52d83b8c0b on openmrs:master**.

@teleivo In this updated PR I've updated only a few tests. I just wanted to see if I am going in the right direction or not

[![Coverage Status](https://coveralls.io/builds/10496041/badge)](https://coveralls.io/builds/10496041)

Coverage increased (+0.3%) to 55.975% when pulling **44877687da9ef9fbf6c4b174071c4f68d70d850e on mavrk:TRUNK-5066** into **bad48e459ae74698a0f95c52d1238474c49ccd12 on openmrs:master**.


[![Coverage Status](https://coveralls.io/builds/10496054/badge)](https://coveralls.io/builds/10496054)

Coverage increased (+0.3%) to 56.0% when pulling **44877687da9ef9fbf6c4b174071c4f68d70d850e on mavrk:TRUNK-5066** into **bad48e459ae74698a0f95c52d1238474c49ccd12 on openmrs:master**.


[![Coverage Status](https://coveralls.io/builds/10506444/badge)](https://coveralls.io/builds/10506444)

Coverage increased (+0.009%) to 55.737% when pulling **fe145176b445bc3abb98cf42384fd4110bbbf6e7 on teleivo:hibernate-jointype** into **1cf8d690a4e5a6addcc428c823d836075dad763d on openmrs:master**.

@ILauerIV please read the docs I posted in my previous comment, follow the tips and check your changes locally before you push so they conform with whats explained in the docs. if you have specific questions or problems just post here in a comment or ask on http://talk.openmrs.org/ and you'll get help :)

@vshl did you get a chance to incorporate the comments? if so please update this PR by pushing your changes
@teleivo Thanks for your feedback. I know it must be hard for you to review a beginner like me. But, I ensure you I am learning from these mistakes and won't repeat them in future.
@mavrk don't worry!! It was a lot to learn for me as well and I am still learning sooo much. Dont fear to ask anyone here or on http://talk.openmrs.org/ or irc. We are happy you found this community and hope you are having fun and will stick around 😄
@teleivo Yes, I am still working on it.

[![Coverage Status](https://coveralls.io/builds/10514341/badge)](https://coveralls.io/builds/10514341)

Coverage increased (+0.3%) to 56.024% when pulling **25e49fce9a8cca8191dcd23ae61624719b8f016d on mavrk:TRUNK-5066** into **ef9a176871db1ccf254358d9e479ff0d2a8db4e4 on openmrs:master**.

@teleivo have a look

[![Coverage Status](https://coveralls.io/builds/10525760/badge)](https://coveralls.io/builds/10525760)

Coverage decreased (-0.02%) to 55.713% when pulling **1a2cd5380c7281e59ca4bfc44e034d6eb5b0f75b on teleivo:TRUNK-5108** into **d2596e37d3c9206bc0e12e8499a17bec88bd073d on openmrs:master**.

@teleivo, thanks for your PR! By analyzing the history of the files in this pull request, we identified @bmamlin, @riipeplum and @ddworken to be potential reviewers.

[![Coverage Status](https://coveralls.io/builds/10527684/badge)](https://coveralls.io/builds/10527684)

Coverage increased (+0.3%) to 56.03% when pulling **5dc1d2e4112267ea6c68b51dd09a828b2d0df40d on mavrk:TRUNK-5066** into **89e0fb7ab92937233db2e10cf037e68f8f515dbc on openmrs:master**.

@lluismf can you please please check why codacy comments end up at your account?

https://www.codacy.com/app/lluismf/openmrs-core/pullRequest?prid=546068

you have a different coding pattern setting than

https://www.codacy.com/app/openmrs/openmrs-core/dashboard

which is why the check on this PR failed
@SwathiVarkala, thanks for your PR! By analyzing the history of the files in this pull request, we identified @bmamlin, @dkayiwa and @bharatak to be potential reviewers.

[![Coverage Status](https://coveralls.io/builds/10528693/badge)](https://coveralls.io/builds/10528693)

Coverage increased (+0.05%) to 55.761% when pulling **d4b5633b728b7de7c6239eb561d41b6870e10fc0 on SwathiVarkala:2.1.x** into **49c990d32cf699789981d3920e1a562ede1d74e6 on openmrs:2.1.x**.


[![Coverage Status](https://coveralls.io/builds/10529335/badge)](https://coveralls.io/builds/10529335)

Coverage increased (+0.03%) to 55.739% when pulling **edafc8b43489e37c7a1a46ee57319bb3c5e8a243 on SwathiVarkala:2.1.x** into **49c990d32cf699789981d3920e1a562ede1d74e6 on openmrs:2.1.x**.


![Codacy](https://www.codacy.com/assets/images/favicon.png) Here is an overview of what got changed by this pull request:


```diff

Issues
======
+ Solved 7
           
```


See the complete overview on [Codacy](https://www.codacy.com/app/openmrs/openmrs-core/pullRequest?prid=546008&bid=4268148)
        

[![Coverage Status](https://coveralls.io/builds/10529400/badge)](https://coveralls.io/builds/10529400)

Coverage increased (+0.3%) to 56.052% when pulling **f80d37b0db2d44184c3dd71155113266f4a2bb3d on mavrk:TRUNK-5066** into **89e0fb7ab92937233db2e10cf037e68f8f515dbc on openmrs:master**.


[![Coverage Status](https://coveralls.io/builds/10529442/badge)](https://coveralls.io/builds/10529442)

Coverage increased (+0.3%) to 56.052% when pulling **f80d37b0db2d44184c3dd71155113266f4a2bb3d on mavrk:TRUNK-5066** into **89e0fb7ab92937233db2e10cf037e68f8f515dbc on openmrs:master**.


[![Coverage Status](https://coveralls.io/builds/10529458/badge)](https://coveralls.io/builds/10529458)

Coverage increased (+0.3%) to 56.015% when pulling **f80d37b0db2d44184c3dd71155113266f4a2bb3d on mavrk:TRUNK-5066** into **89e0fb7ab92937233db2e10cf037e68f8f515dbc on openmrs:master**.

@mavrk awesome!! thanks!! happy weekend :)
@teleivo Thanks to you. You helped me so much and I learned a lot :)
@teleivo, thanks for your PR! By analyzing the history of the files in this pull request, we identified @bmamlin, @suniala and @vishnuraom to be potential reviewers.

[![Coverage Status](https://coveralls.io/builds/10531295/badge)](https://coveralls.io/builds/10531295)

Coverage increased (+0.02%) to 56.052% when pulling **39db1e0dc5ab24f962df3ab83140b1691db2076a on teleivo:baseopenmrsmetadata-deprecated** into **66de0820117a024a56a78de94b794e61eeacf0e5 on openmrs:master**.


[![Coverage Status](https://coveralls.io/builds/10531408/badge)](https://coveralls.io/builds/10531408)

Coverage decreased (-0.02%) to 56.018% when pulling **39db1e0dc5ab24f962df3ab83140b1691db2076a on teleivo:baseopenmrsmetadata-deprecated** into **66de0820117a024a56a78de94b794e61eeacf0e5 on openmrs:master**.

@teleivo, thanks for your PR! By analyzing the history of the files in this pull request, we identified @jdegraft, @bmamlin and @suniala to be potential reviewers.

[![Coverage Status](https://coveralls.io/builds/10531908/badge)](https://coveralls.io/builds/10531908)

Coverage increased (+0.003%) to 56.021% when pulling **8ffaa4fd3d905eda628af8f453339112afafbed8 on teleivo:TRUNK-5106** into **365f7551680de241c36ed93f08d51097c37bf0e5 on openmrs:master**.

@teleivo, thanks for your PR! By analyzing the history of the files in this pull request, we identified @jdegraft, @bmamlin and @suniala to be potential reviewers.

[![Coverage Status](https://coveralls.io/builds/10532150/badge)](https://coveralls.io/builds/10532150)

Coverage increased (+0.02%) to 56.033% when pulling **dc5b043a3cb13e44f4454a3c2e7e22f0ce557448 on teleivo:TRUNK-5111** into **3bf7c4d2948ba9b3609a223bdbef5f5b1b1842fc on openmrs:master**.


[![Coverage Status](https://coveralls.io/builds/10533239/badge)](https://coveralls.io/builds/10533239)

Coverage increased (+0.03%) to 56.037% when pulling **cd85f6cfa601ef5e8d090aa62a0c175ed56e9bbc on florianschmitt:TRUNK-4924** into **d4f5750dc69659566d829aef6910a259885478d4 on openmrs:master**.

I deleted my Codacy account (reason: annoying interface), I hope the problem is fixed now :-)
@lluismf haha, that bad 👎 thanks, hope so.
@wluyima , thanks for the comments. done those.

[![Coverage Status](https://coveralls.io/builds/10534110/badge)](https://coveralls.io/builds/10534110)

Coverage increased (+0.01%) to 55.721% when pulling **6a68e2c49696dea4b650cf46cce28ed5a6b19482 on SwathiVarkala:2.1.x** into **49c990d32cf699789981d3920e1a562ede1d74e6 on openmrs:2.1.x**.

@mavrk, thanks for your PR! By analyzing the history of the files in this pull request, we identified @bmamlin, @dkayiwa and @rkorytkowski to be potential reviewers.

![Codacy](https://www.codacy.com/assets/images/favicon.png) Here is an overview of what got changed by this pull request:


```diff

Issues
======
- Added 3
           

Complexity increasing per file
==============================
- web/src/main/java/org/openmrs/web/Listener.java  2
- web/src/main/java/org/openmrs/module/web/WebModuleUtil.java  1
- api/src/main/java/org/openmrs/util/OpenmrsUtil.java  1
- api/src/main/java/org/openmrs/module/ModuleFactory.java  1
- api/src/main/java/org/openmrs/module/ModuleClassLoader.java  2
         
```


See the complete overview on [Codacy](https://www.codacy.com/app/openmrs/openmrs-core/pullRequest?prid=554059&bid=4289369)
        

[![Coverage Status](https://coveralls.io/builds/10534666/badge)](https://coveralls.io/builds/10534666)

Coverage decreased (-0.03%) to 55.983% when pulling **89d1136abebb6c396ea338d9c3058f34976c14e5 on mavrk:TRUNK-5042** into **d4f5750dc69659566d829aef6910a259885478d4 on openmrs:master**.


![Codacy](https://www.codacy.com/assets/images/favicon.png) Here is an overview of what got changed by this pull request:


```diff

Complexity increasing per file
==============================
- api/src/main/java/org/openmrs/validator/VisitValidator.java  13
         
```


See the complete overview on [Codacy](https://www.codacy.com/app/openmrs/openmrs-core/pullRequest?prid=484786&bid=4091184)
        
@getshravan, thanks for your PR! By analyzing the history of the files in this pull request, we identified @bmamlin, @teleivo and @lluismf to be potential reviewers.

[![Coverage Status](https://coveralls.io/builds/10538939/badge)](https://coveralls.io/builds/10538939)

Coverage increased (+0.02%) to 56.031% when pulling **588edddcbaa00aea60d65a70624f53316e5930e4 on getshravan:master** into **d4f5750dc69659566d829aef6910a259885478d4 on openmrs:master**.

@wluyima , Did those changes.

[![Coverage Status](https://coveralls.io/builds/10542129/badge)](https://coveralls.io/builds/10542129)

Coverage increased (+0.03%) to 55.737% when pulling **21225c255023f91c68b7466b1cdd6779fba7b598 on SwathiVarkala:2.1.x** into **49c990d32cf699789981d3920e1a562ede1d74e6 on openmrs:2.1.x**.

@mavrk, thanks for your PR! By analyzing the history of the files in this pull request, we identified @bmamlin, @dkayiwa and @rkorytkowski to be potential reviewers.

[![Coverage Status](https://coveralls.io/builds/10545934/badge)](https://coveralls.io/builds/10545934)

Coverage decreased (-0.04%) to 55.89% when pulling **9b4df93a007ae8171d5bec1ca56c5a9e7bbb9a22 on mavrk:TRUNK-5042** into **1a413763067ea6dda819314816db344ee3d60d76 on openmrs:master**.


![Codacy](https://www.codacy.com/assets/images/favicon.png) Here is an overview of what got changed by this pull request:


```diff

Issues
======
+ Solved 10
           

Complexity increasing per file
==============================
- web/src/main/java/org/openmrs/web/Listener.java  2
- web/src/main/java/org/openmrs/module/web/WebModuleUtil.java  1
- api/src/main/java/org/openmrs/util/OpenmrsUtil.java  1
- api/src/main/java/org/openmrs/module/ModuleFactory.java  1
- api/src/main/java/org/openmrs/module/ModuleClassLoader.java  2
         
```


See the complete overview on [Codacy](https://www.codacy.com/app/openmrs/openmrs-core/pullRequest?prid=554923&bid=4292045)
        

[![Coverage Status](https://coveralls.io/builds/10546030/badge)](https://coveralls.io/builds/10546030)

Coverage decreased (-0.04%) to 55.89% when pulling **97dca063900a8121f7e4faaaca3ab5ccb326f6e1 on mavrk:TRUNK-5042** into **1a413763067ea6dda819314816db344ee3d60d76 on openmrs:master**.


[![Coverage Status](https://coveralls.io/builds/10548216/badge)](https://coveralls.io/builds/10548216)

Coverage increased (+0.02%) to 55.941% when pulling **54d1d302cc8a0b0d483ed9291f470cff399a1b72 on jtatia:TRUNK-4954** into **ce7772d59b091f17c26c6a40cc930bf779a528d7 on openmrs:master**.


[![Coverage Status](https://coveralls.io/builds/10548633/badge)](https://coveralls.io/builds/10548633)

Coverage increased (+0.05%) to 55.974% when pulling **73fa21f020ca130c65170cbb334c373a70558b9b on vshl:TRUNK-4906-Expanded-Cohort-Details** into **ce7772d59b091f17c26c6a40cc930bf779a528d7 on openmrs:master**.


[![Coverage Status](https://coveralls.io/builds/10548718/badge)](https://coveralls.io/builds/10548718)

Coverage increased (+0.02%) to 55.937% when pulling **4a08ef4a0dff2b96834de14826e0a70faa2c8ff5 on vshl:TRUNK-4906-Expanded-Cohort-Details** into **ce7772d59b091f17c26c6a40cc930bf779a528d7 on openmrs:master**.

@teleivo, thanks for your PR! By analyzing the history of the files in this pull request, we identified @bmamlin and @patrickpl to be potential reviewers.

[![Coverage Status](https://coveralls.io/builds/10559394/badge)](https://coveralls.io/builds/10559394)

Coverage decreased (-0.003%) to 55.917% when pulling **60e8ae52887b6974bb6c62386c2f0888fe03f2d1 on teleivo:TRUNK-5088** into **ce7772d59b091f17c26c6a40cc930bf779a528d7 on openmrs:master**.

@pushpa446, thanks for your PR! By analyzing the history of the files in this pull request, we identified @bmamlin, @suniala and @lluismf to be potential reviewers.

![Codacy](https://www.codacy.com/assets/images/favicon.png) Here is an overview of what got changed by this pull request:


```diff

Issues
======
+ Solved 1
- Added 4
           
```


See the complete overview on [Codacy](https://www.codacy.com/app/openmrs/openmrs-core/pullRequest?prid=556489&bid=4297180)
        

[![Coverage Status](https://coveralls.io/builds/10563827/badge)](https://coveralls.io/builds/10563827)

Coverage increased (+0.002%) to 55.932% when pulling **2b45b33ccf8c0d78daea763404d32bd6fc89df11 on pushpa446:bahmniOpenmrsUpgrade** into **448c8b6260f3921aff465af481c3da13ed977884 on openmrs:master**.


[![Coverage Status](https://coveralls.io/builds/10573776/badge)](https://coveralls.io/builds/10573776)

Coverage decreased (-0.09%) to 55.83% when pulling **6ff8acb6f621a426957a17f1a3a69d634c07c73d on jtatia:TRUNK-4954** into **8935c8da0219d48e3c51eb1ee76a450f51b36c40 on openmrs:master**.

@mddubey, thanks for your PR! By analyzing the history of the files in this pull request, we identified @dkayiwa, @bmamlin and @suniala to be potential reviewers.

[![Coverage Status](https://coveralls.io/builds/10577905/badge)](https://coveralls.io/builds/10577905)

Coverage increased (+0.01%) to 55.942% when pulling **75ebb6c26cffb1b3af8d6b80f72e2e938cd30cc6 on pushpa446:bahmniOpenmrsUpgrade** into **b5ae1b0dc924091dca98823b6de3d5e8084259bc on openmrs:master**.

To help the reviewer find my changes, I've flagged them.

[![Coverage Status](https://coveralls.io/builds/10586549/badge)](https://coveralls.io/builds/10586549)

Coverage decreased (-0.02%) to 55.911% when pulling **f1cfa24258ed1e9eecf65104c16ac7270c9aeb4f on mavrk:TRUNK-5042** into **b5ae1b0dc924091dca98823b6de3d5e8084259bc on openmrs:master**.


![Codacy](https://www.codacy.com/assets/images/favicon.png) Here is an overview of what got changed by this pull request:


```diff

Issues
======
- Added 1
           

Complexity increasing per file
==============================
- api/src/main/java/org/openmrs/api/impl/EncounterServiceImpl.java  6
         
```


See the complete overview on [Codacy](https://www.codacy.com/app/openmrs/openmrs-core/pullRequest?prid=557678&bid=4300056)
        

[![Coverage Status](https://coveralls.io/builds/10597192/badge)](https://coveralls.io/builds/10597192)

Coverage increased (+0.07%) to 55.997% when pulling **3beeb761bb337b681ff5e4492fd134ed519dd69c on mddubey:patient-merge-obs-group-problem** into **b5ae1b0dc924091dca98823b6de3d5e8084259bc on openmrs:master**.

@Nuwantha, thanks for your PR! By analyzing the history of the files in this pull request, we identified @bmamlin, @dkayiwa and @lluismf to be potential reviewers.

[![Coverage Status](https://coveralls.io/builds/10597588/badge)](https://coveralls.io/builds/10597588)

Coverage increased (+0.01%) to 56.007% when pulling **0c38f772b015aa00ea168390d77edefccccd63c3 on Nuwantha:TRUNK-5032** into **819be1714b4a229422aaad62b28749564b0c0f50 on openmrs:master**.

@mavrk can you please add tests. the code in some parts you have to change is hard to read and overly complicated I think we should refactor it. If you can supply tests first in one PR, that we'll merge and see the code is covered and than add your changes in the next PR, that would be awesome!

Sorry I didnt specify this in the issue but I feel this makes more sense one PR with tests and then PR with changes.

Since you are testing with files and dirs you should look into junits rules, especially TemporaryFolder like https://github.com/junit-team/junit4/wiki/Rules this will take care of removing directories you only need for testing.

If we do it this way I'm sure that for example the [ModuleClassLoader](https://github.com/openmrs/openmrs-core/blob/master/api/src/main/java/org/openmrs/module/ModuleClassLoader.java#L117-L124) can be simplified with for example the commons FileUtils we already use in this class like shown here http://stackoverflow.com/a/12938808

this way we get rid of the potential null pointer exception, increase code coverage, make the code more readable and remove duplication :)


@mavrk and please dont "flag" your changes, it just clutters the diff and makes it harder for the reviewer. we see your changes :)
@Ankitkumar94, thanks for your PR! By analyzing the history of the files in this pull request, we identified @samshuster, @bmamlin and @teleivo to be potential reviewers.
@teleivo, thanks for your PR! By analyzing the history of the files in this pull request, we identified @bmamlin, @rkorytkowski and @dkayiwa to be potential reviewers.

![Codacy](https://www.codacy.com/assets/images/favicon.png) Here is an overview of what got changed by this pull request:


```diff

Issues
======
+ Solved 4
           
```


See the complete overview on [Codacy](https://www.codacy.com/app/openmrs/openmrs-core/pullRequest?prid=560444&bid=4307033)
        

[![Coverage Status](https://coveralls.io/builds/10605225/badge)](https://coveralls.io/builds/10605225)

Coverage decreased (-0.04%) to 55.957% when pulling **d43ce19c062232b9aa3065d4b7e5a4804db18c3c on teleivo:TRUNK-5114** into **819be1714b4a229422aaad62b28749564b0c0f50 on openmrs:master**.

@Ankitkumar94, thanks for your PR! By analyzing the history of the files in this pull request, we identified @bmamlin, @teleivo and @Magicpotatoes2 to be potential reviewers.
@Ankitkumar94  did u see the build failures ??

![Codacy](https://www.codacy.com/assets/images/favicon.png) Here is an overview of what got changed by this pull request:


```diff

Issues
======
- Added 4
           

Complexity decreasing per file
==============================
+ api/src/main/java/org/openmrs/api/impl/PersonServiceImpl.java  -7
         
```


See the complete overview on [Codacy](https://www.codacy.com/app/openmrs/openmrs-core/pullRequest?prid=560638&bid=4307492)
        
@Ankitkumar94, thanks for your PR! By analyzing the history of the files in this pull request, we identified @bmamlin, @teleivo and @Magicpotatoes2 to be potential reviewers.
@ILauerIV are you still working on this?
@Ankitkumar94 

* please take the time to read all of https://wiki.openmrs.org/display/docs/Pull+Request+Tips
(you have multiple commits in your PR, please squash them into one)
* please check that your IDE settings; see https://wiki.openmrs.org/display/docs/How-To+Setup+And+Use+Your+IDE
(your formatting is off)
* build your code locally 'mvn clean package' (it failed on travis ci see below)
* and check the PR description. you added your text in comments, so we didnt see what you wrote.
@Ankitkumar94 you need to squash your commits.

please also check 
https://issues.openmrs.org/browse/TRUNK-5055

I updated the issue description so I hope it is clear whats to be done

![Codacy](https://www.codacy.com/assets/images/favicon.png) Here is an overview of what got changed by this pull request:


```diff

Complexity decreasing per file
==============================
+ api/src/main/java/org/openmrs/api/impl/PersonServiceImpl.java  -7
         
```


See the complete overview on [Codacy](https://www.codacy.com/app/openmrs/openmrs-core/pullRequest?prid=560753&bid=4307800)
        
@Ankitkumar94, thanks for your PR! By analyzing the history of the files in this pull request, we identified @bmamlin, @teleivo and @Magicpotatoes2 to be potential reviewers.
@Ankitkumar94, thanks for your PR! By analyzing the history of the files in this pull request, we identified @bmamlin, @teleivo and @Magicpotatoes2 to be potential reviewers.

[![Coverage Status](https://coveralls.io/builds/10610667/badge)](https://coveralls.io/builds/10610667)

Coverage increased (+0.01%) to 56.007% when pulling **29f84dcdf1afaadc0c889068ec77030abe0b7ab0 on Ankitkumar94:master** into **819be1714b4a229422aaad62b28749564b0c0f50 on openmrs:master**.

@jtatia yes....I saw the build failures.....I already closed this pull request.......Actually, I was just practicing on how to send the pull requests.......Sorry for bothering !!

[![Coverage Status](https://coveralls.io/builds/10618836/badge)](https://coveralls.io/builds/10618836)

Coverage decreased (-0.1%) to 55.897% when pulling **0129dda660de09c63bce93f1a4b5bc95bf486b30 on vshl:TRUNK-4906-Expanded-Cohort-Details** into **819be1714b4a229422aaad62b28749564b0c0f50 on openmrs:master**.


![Codacy](https://www.codacy.com/assets/images/favicon.png) Here is an overview of what got changed by this pull request:


```diff

Complexity decreasing per file
==============================
+ api/src/main/java/org/openmrs/api/impl/PersonServiceImpl.java  -7
         
```


See the complete overview on [Codacy](https://www.codacy.com/app/openmrs/openmrs-core/pullRequest?prid=561041&bid=4308446)
        
@mddubey, thanks for your PR! By analyzing the history of the files in this pull request, we identified @bmamlin, @teleivo and @suniala to be potential reviewers.

[![Coverage Status](https://coveralls.io/builds/10619601/badge)](https://coveralls.io/builds/10619601)

Coverage decreased (-0.003%) to 55.991% when pulling **ddd3d08362c24a741e4cd6c3384cc05ca9573239 on mddubey:TRUNK-5112** into **819be1714b4a229422aaad62b28749564b0c0f50 on openmrs:master**.

Closing this pull request, A new pull request is created [here](https://github.com/openmrs/openmrs-core/pull/2074) for same.

[![Coverage Status](https://coveralls.io/builds/10619846/badge)](https://coveralls.io/builds/10619846)

Coverage increased (+0.006%) to 56.0% when pulling **697e65f0b7974caba85262629d2854ba2a7903f4 on mddubey:TRUNK-5112** into **819be1714b4a229422aaad62b28749564b0c0f50 on openmrs:master**.

@wluyima I have a question. If I have to use the REST API for the `memberships`, since the current behavior is /cohort/UUID/member/patientID, I do need to create new endpoints for memberships in particular? I have this requirement in a module that I am working on. I can theoretically create the endpoints in the module?
@Ankitkumar94, thanks for your PR! By analyzing the history of the files in this pull request, we identified @teleivo, @bmamlin and @Magicpotatoes2 to be potential reviewers.

[![Coverage Status](https://coveralls.io/builds/10625876/badge)](https://coveralls.io/builds/10625876)

Coverage increased (+0.02%) to 56.011% when pulling **3a270f1189001293c5bc745da933fc0b9f0f363a on Ankitkumar94:master** into **819be1714b4a229422aaad62b28749564b0c0f50 on openmrs:master**.


[![Coverage Status](https://coveralls.io/builds/10626575/badge)](https://coveralls.io/builds/10626575)

Coverage decreased (-0.002%) to 55.992% when pulling **ebae2cfd65ab28c224597e0caaeaaa64a4c30d18 on mddubey:TRUNK-5112** into **819be1714b4a229422aaad62b28749564b0c0f50 on openmrs:master**.


[![Coverage Status](https://coveralls.io/builds/10627383/badge)](https://coveralls.io/builds/10627383)

Coverage decreased (-0.01%) to 55.983% when pulling **2f9fad3bf732f6c5d92d8526a759ba7355796629 on mddubey:TRUNK-5112** into **819be1714b4a229422aaad62b28749564b0c0f50 on openmrs:master**.

@mddubey

* first setup your IDE (so that it orders, removes unused imports, formats ....) see here:
https://wiki.openmrs.org/display/docs/How-To+Setup+And+Use+Your+IDE

* second in this wiki you"ll find the instructions on how you can run the checks codacy does locally
https://wiki.openmrs.org/display/docs/Java+Conventions

if you setup your IDE correctly you might still get comments from codacy but they should not be that many as when you push and didnt properly format, organize your imports.

Actually the current behavior is `/ws/rest/v1/cohort/{uuid}/member,` in the updated rest module it would be `/ws/rest/v1/cohort/{uuid}/membership`, it means you would add a CohortMembershipResource2_1 subresource, I recall as if we already had a design discussion of what the rest service should be. May be we can bring up it again

[![Coverage Status](https://coveralls.io/builds/10628195/badge)](https://coveralls.io/builds/10628195)

Coverage decreased (-0.01%) to 55.98% when pulling **b7a6730c257e8c7328d304a83ea5db8283e089da on mddubey:TRUNK-5112** into **819be1714b4a229422aaad62b28749564b0c0f50 on openmrs:master**.

@tadeitto done with the changes. One thing I am not getting, the code-coverage is changing Even I don't change anything specifically. E.g.:- I just removed the comments and changed the name of methods it got changed. How actually we calculate that ? I am not sure.
@teleivo this was a huge commit! 
Did you use some sort of tool to automate the changes? Or did you manually do them one by one? 😊 
@dkayiwa I used Eclipse's file find/replace + the Eclipse "clean up" to organize the imports. This worked for most of the changes. I had to adapt a few of the `log.error(exception)` which needs to be `log.error("message", exception)` and `log.fatal()` which needs markers now. I will post a how to or write up a wiki for it tomorrow :)
I can see that you are an eclipse fun, just like me. Do you just hate intelliJ? 😊 
@Nuwantha, thanks for your PR! By analyzing the history of the files in this pull request, we identified @bmamlin, @teleivo and @aj-jaswanth to be potential reviewers.

[![Coverage Status](https://coveralls.io/builds/10637746/badge)](https://coveralls.io/builds/10637746)

Coverage increased (+0.03%) to 55.9% when pulling **6ceb4fccdae4db35dd97cc8b78af38cc0c187d53 on Nuwantha:TRUNK-5057** into **f10df70b6f1cee6206eb55cf3b5d3f329d0be07a on openmrs:master**.


[![Coverage Status](https://coveralls.io/builds/10638016/badge)](https://coveralls.io/builds/10638016)

Coverage increased (+0.04%) to 55.912% when pulling **f1c72954f0074288e846289512dd15e747187aff on mddubey:TRUNK-5112** into **f10df70b6f1cee6206eb55cf3b5d3f329d0be07a on openmrs:master**.


[![Coverage Status](https://coveralls.io/builds/10638220/badge)](https://coveralls.io/builds/10638220)

Coverage increased (+0.02%) to 55.888% when pulling **5bb3d31014b7e68b88a1d0c78e9dbe14500bf7b4 on Nuwantha:TRUNK-5057** into **f10df70b6f1cee6206eb55cf3b5d3f329d0be07a on openmrs:master**.


[![Coverage Status](https://coveralls.io/builds/10638315/badge)](https://coveralls.io/builds/10638315)

Coverage increased (+0.03%) to 55.9% when pulling **ced7edc8773a5f5a2754d6cc7ec57128303900e6 on vshl:TRUNK-4906-Expanded-Cohort-Details** into **f10df70b6f1cee6206eb55cf3b5d3f329d0be07a on openmrs:master**.


[![Coverage Status](https://coveralls.io/builds/10638410/badge)](https://coveralls.io/builds/10638410)

Coverage increased (+0.06%) to 55.928% when pulling **d56efff2a5e72c0058f083d32bbe5e9c825f3122 on Nuwantha:TRUNK-5057** into **f10df70b6f1cee6206eb55cf3b5d3f329d0be07a on openmrs:master**.


[![Coverage Status](https://coveralls.io/builds/10638444/badge)](https://coveralls.io/builds/10638444)

Coverage increased (+0.03%) to 55.9% when pulling **c2ef0218e315203975979b85c0131c25105c4fe3 on vshl:TRUNK-4906-Expanded-Cohort-Details** into **f10df70b6f1cee6206eb55cf3b5d3f329d0be07a on openmrs:master**.

@pushpa446, thanks for your PR! By analyzing the history of the files in this pull request, we identified @bmamlin, @Magicpotatoes2 and @chethandeshpande to be potential reviewers.

[![Coverage Status](https://coveralls.io/builds/10639991/badge)](https://coveralls.io/builds/10639991)

Coverage decreased (-0.01%) to 55.718% when pulling **873634337c59fc22870c48a7a9fc22d3bec3eac3 on pushpa446:conversion** into **7b1d96a60b8286d55a810d7724e2c37af65a72e4 on openmrs:2.1.x**.


[![Coverage Status](https://coveralls.io/builds/10641639/badge)](https://coveralls.io/builds/10641639)

Coverage increased (+0.05%) to 55.915% when pulling **4cbad96c4b7e24fdd0a18d3758229638156765db on Ankitkumar94:master** into **f10df70b6f1cee6206eb55cf3b5d3f329d0be07a on openmrs:master**.

There is already a PersonServiceTest, I don't see the point of having also a PersonServiceImplTest.  
@dkayiwa I think Eclipse UI is less bloated and has some nice clean up features, but IntelliJ is way better at importing projects and keeping it in sync with changes in maven pom's. Eclipse keeps crashing at the moment, so I move quickly from liking to disliking 😭 🤕 😄 

![Codacy](https://www.codacy.com/assets/images/favicon.png) Here is an overview of what got changed by this pull request:


```diff

Complexity decreasing per file
==============================
+ api/src/main/java/org/openmrs/api/impl/PersonServiceImpl.java  -7
         
```


See the complete overview on [Codacy](https://www.codacy.com/app/openmrs/openmrs-core/pullRequest?prid=562696&bid=4315616)
        

[![Coverage Status](https://coveralls.io/builds/10660246/badge)](https://coveralls.io/builds/10660246)

Coverage increased (+0.05%) to 55.918% when pulling **578d84c84164f599bafaddc421673e6239bc0e9b on Ankitkumar94:master** into **f10df70b6f1cee6206eb55cf3b5d3f329d0be07a on openmrs:master**.


[![Coverage Status](https://coveralls.io/builds/10660528/badge)](https://coveralls.io/builds/10660528)

Coverage increased (+0.03%) to 55.896% when pulling **c185f1001b39ebeeee23f77e3ae39475d5434d0f on florianschmitt:TRUNK-4924** into **f10df70b6f1cee6206eb55cf3b5d3f329d0be07a on openmrs:master**.

@Ankitkumar94, thanks for your PR! By analyzing the history of the files in this pull request, we identified @bmamlin, @teleivo and @Magicpotatoes2 to be potential reviewers.

[![Coverage Status](https://coveralls.io/builds/10662656/badge)](https://coveralls.io/builds/10662656)

Coverage increased (+0.1%) to 56.012% when pulling **c31cfa95011db369777be8cdec42fb7aab43c50b on Ankitkumar94:master** into **f10df70b6f1cee6206eb55cf3b5d3f329d0be07a on openmrs:master**.


![Codacy](https://www.codacy.com/assets/images/favicon.png) Here is an overview of what got changed by this pull request:


```diff

Complexity decreasing per file
==============================
+ api/src/main/java/org/openmrs/api/impl/PersonServiceImpl.java  -8
         
```


See the complete overview on [Codacy](https://www.codacy.com/app/openmrs/openmrs-core/pullRequest?prid=566332&bid=4325651)
        

[![Coverage Status](https://coveralls.io/builds/10667541/badge)](https://coveralls.io/builds/10667541)

Coverage increased (+0.2%) to 56.027% when pulling **794d25782e7b71b3e664126f4556586feaac0a51 on Ankitkumar94:master** into **f10df70b6f1cee6206eb55cf3b5d3f329d0be07a on openmrs:master**.

@Ankitkumar94, thanks for your PR! By analyzing the history of the files in this pull request, we identified @bmamlin, @teleivo and @Magicpotatoes2 to be potential reviewers.

![Codacy](https://www.codacy.com/assets/images/favicon.png) Here is an overview of what got changed by this pull request:


```diff

Complexity decreasing per file
==============================
+ api/src/main/java/org/openmrs/api/impl/PersonServiceImpl.java  -8
         
```


See the complete overview on [Codacy](https://www.codacy.com/app/openmrs/openmrs-core/pullRequest?prid=566733&bid=4326857)
        

[![Coverage Status](https://coveralls.io/builds/10667964/badge)](https://coveralls.io/builds/10667964)

Coverage increased (+0.02%) to 55.892% when pulling **279e4733df19bc6cc19fd8c537098fe74137ae04 on Ankitkumar94:master** into **f10df70b6f1cee6206eb55cf3b5d3f329d0be07a on openmrs:master**.

@Ankitkumar94 thank you and congrats on your PR!
@teleivo thank you !!
@pushpa446 is there an issue for this?
if so please
* change your commit title to use the issue number and description
* add the issue in the PR description
@mavrk are you going to continue work on this? you havent responded to my comments and you would also need to rebase on the latest master since there are merge conflicts

[![Coverage Status](https://coveralls.io/builds/10673670/badge)](https://coveralls.io/builds/10673670)

Coverage increased (+0.05%) to 55.939% when pulling **b9e4524f5e39b636d070a17a309a6bf2c6dd09ce on Nuwantha:TRUNK-5057** into **19fee504b0448031e58ba2a04dbb68de4f9f3062 on openmrs:master**.


[![Coverage Status](https://coveralls.io/builds/10673763/badge)](https://coveralls.io/builds/10673763)

Coverage increased (+0.2%) to 56.05% when pulling **c4df43bd848265635d2a31d4c10f44ee1702f0a7 on Nuwantha:TRUNK-5057** into **19fee504b0448031e58ba2a04dbb68de4f9f3062 on openmrs:master**.

@teleivo I changed the code according to your review. could you check that ?
@teleivo, thanks for your PR! By analyzing the history of the files in this pull request, we identified @bmamlin, @samshuster and @djazayeri to be potential reviewers.

![Codacy](https://www.codacy.com/assets/images/favicon.png) Here is an overview of what got changed by this pull request:


```diff

Complexity decreasing per file
==============================
+ api/src/main/java/org/openmrs/validator/PersonValidator.java  -1
         
```


See the complete overview on [Codacy](https://www.codacy.com/app/openmrs/openmrs-core/pullRequest?prid=567355&bid=4328366)
        

[![Coverage Status](https://coveralls.io/builds/10674866/badge)](https://coveralls.io/builds/10674866)

Coverage increased (+0.03%) to 55.918% when pulling **76b93340b7de6501cbda337278b53ee2583c8531 on teleivo:TRUNK-5114** into **19fee504b0448031e58ba2a04dbb68de4f9f3062 on openmrs:master**.

Hi @teleivo, the issue is resloved and it is in the master https://github.com/openmrs/openmrs-core/commit/b5ae1b0dc924091dca98823b6de3d5e8084259bc.  

It would be helpful if this fix is in the 2.1.x as well since we upgraded to 2.1.0-SNAPSHOT. 
@teleivo, thanks for your PR! By analyzing the history of the files in this pull request, we identified @bmamlin, @riipeplum and @ddworken to be potential reviewers.

[![Coverage Status](https://coveralls.io/builds/10676973/badge)](https://coveralls.io/builds/10676973)

Coverage increased (+0.02%) to 55.916% when pulling **abce0a4873e5f50a6105f6e6563e16553e52c9c1 on florianschmitt:TRUNK-4924** into **0c0bf8b20d41367abf41bfa67701222eb47b74e7 on openmrs:master**.

@Nuwantha also please rebase on latest master
@teleivo, thanks for your PR! By analyzing the history of the files in this pull request, we identified @bmamlin, @suniala and @dkayiwa to be potential reviewers.

![Codacy](https://www.codacy.com/assets/images/favicon.png) Here is an overview of what got changed by this pull request:


```diff

Complexity decreasing per file
==============================
+ api/src/main/java/org/openmrs/Concept.java  -3
+ api/src/main/java/org/openmrs/BaseCustomizableMetadata.java  -18
+ api/src/main/java/org/openmrs/BaseCustomizableData.java  -18
         
```


See the complete overview on [Codacy](https://www.codacy.com/app/openmrs/openmrs-core/pullRequest?prid=537266&bid=4242652)
        

[![Coverage Status](https://coveralls.io/builds/10678315/badge)](https://coveralls.io/builds/10678315)

Coverage increased (+0.02%) to 55.909% when pulling **f7f83d7c00e9cd6b8a161b58cda0df1d794065e1 on teleivo:remove-unused** into **0c0bf8b20d41367abf41bfa67701222eb47b74e7 on openmrs:master**.

@teleivo, thanks for your PR! By analyzing the history of the files in this pull request, we identified @ivange94, @bmamlin and @suniala to be potential reviewers.

[![Coverage Status](https://coveralls.io/builds/10678534/badge)](https://coveralls.io/builds/10678534)

Coverage decreased (-0.03%) to 55.884% when pulling **1bd8ab503ad35d9c8bfebdfe01e1154e11c2fb3b on teleivo:TRUNK-5104** into **b8a19169dc83e58ab06987ea3cfc8819f9d89417 on openmrs:master**.

@teleivo, thanks for your PR! By analyzing the history of the files in this pull request, we identified @bmamlin, @suniala and @wluyima to be potential reviewers.
Sorry @teleivo I was very busy these past 5 days. I am continuing work on this as soon as possible.
@tmarzeion are you still working on this? By the way, did you see the merge conflicts?
@yvsssantosh did you see the merge conflicts?
@jtatia are you still working on this?
@jtatia did you see the merge conflicts?

[![Coverage Status](https://coveralls.io/builds/10691147/badge)](https://coveralls.io/builds/10691147)

Coverage increased (+0.02%) to 55.929% when pulling **dab067582bcdf9d5c698b7305feb99229d5e6c58 on vshl:TRUNK-4906-Expanded-Cohort-Details** into **b50ee678f10d776b22e3198fe018e121c55ad425 on openmrs:master**.

Sorry about the mess. I am having a large amount of trouble working with git and trying to both update the code to be line with the the master branch and squashing commits. The issue with the new empty class is that it was created by the testing coverage plugin when inserted the should commands. I copied the result of this program unto the test class. I think my problem was that I was not writing the @should on PersonService and instead on PersonServiceImpl. 

![Codacy](https://www.codacy.com/assets/images/favicon.png) Here is an overview of what got changed by this pull request:


```diff

Complexity decreasing per file
==============================
+ api/src/main/java/org/openmrs/api/impl/PersonServiceImpl.java  -8
         
```


See the complete overview on [Codacy](https://www.codacy.com/app/openmrs/openmrs-core/pullRequest?prid=548676&bid=4275504)
        

[![Coverage Status](https://coveralls.io/builds/10692518/badge)](https://coveralls.io/builds/10692518)

Coverage increased (+0.2%) to 56.06% when pulling **e3a7dcf60998cb5cc6be67e061fa8c66990ac323 on ILauerIV:Trunk-5064** into **b50ee678f10d776b22e3198fe018e121c55ad425 on openmrs:master**.

I have implemented most of the code comments with the exception of the method that my work mate is working on. I am still working on implementing the proper exception catching.  Thanks for the help. I will probably need more.
@dkayiwa Yeah I'm working on them :)
I cherry-picked @lluismf 's original commit (instead of merging this PR).
https://github.com/openmrs/openmrs-core/commit/4299fc085a433d3a8a570c01654d93f25971bebf

Thanks @pushpa446! Next time please clean up the text of the PR to indicate _why_ you're not checking all the boxes. (Your actual PR was fine, but someone who just glances at the PR's comments would not know this.)

[![Coverage Status](https://coveralls.io/builds/10700708/badge)](https://coveralls.io/builds/10700708)

Coverage increased (+0.01%) to 55.921% when pulling **deed24e61c638d9214486851362b6e401dc6627c on teleivo:ide-templates** into **b50ee678f10d776b22e3198fe018e121c55ad425 on openmrs:master**.


![Codacy](https://www.codacy.com/assets/images/favicon.png) Here is an overview of what got changed by this pull request:


```diff

Complexity increasing per file
==============================
- api/src/main/java/org/openmrs/api/impl/OrderServiceImpl.java  8
         
```


See the complete overview on [Codacy](https://www.codacy.com/app/openmrs/openmrs-core/pullRequest?prid=564139&bid=4318287)
        
@teleivo  Thank you for valuable comments. I did all the requested changes. Could you check it ?


![Codacy](https://www.codacy.com/assets/images/favicon.png) Here is an overview of what got changed by this pull request:


```diff

Complexity increasing per file
==============================
- api/src/main/java/org/openmrs/api/impl/EncounterServiceImpl.java  4
         
```


See the complete overview on [Codacy](https://www.codacy.com/app/openmrs/openmrs-core/pullRequest?prid=561846&bid=4310489)
        

[![Coverage Status](https://coveralls.io/builds/10712713/badge)](https://coveralls.io/builds/10712713)

Coverage increased (+0.02%) to 55.907% when pulling **feeeaf23a5ebb94589147a6353feca79b5e88d79 on mddubey:TRUNK-5112** into **30b724f57fccf95fdb02c91a7724af9f09db988b on openmrs:master**.

merge conflict resolved. pr ready to be merged :)
@dkayiwa the latest changes to the pr haven't been reviewed

[![Coverage Status](https://coveralls.io/builds/10730144/badge)](https://coveralls.io/builds/10730144)

Coverage decreased (-0.1%) to 55.947% when pulling **43a15d02bce735965d4063d921b8c452dca66859 on jtatia:TRUNK-4916** into **44623ad5e8cff62b7dfb45b02319e2ad3d6dc5a1 on openmrs:master**.

@jtatia yes because you had not requested for code review on the ticket.
@teleivo, thanks for your PR! By analyzing the history of the files in this pull request, we identified @bmamlin, @jdegraft and @suniala to be potential reviewers.

[![Coverage Status](https://coveralls.io/builds/10734695/badge)](https://coveralls.io/builds/10734695)

Coverage decreased (-0.1%) to 55.941% when pulling **43ec77ae834a0dc1a5c66c383c4b724b007c0e3c on teleivo:isbirthdateestimated-deprecated** into **4eee46b7747005e2733383efa0a4feb914ec10e2 on openmrs:master**.

@teleivo, thanks for your PR! By analyzing the history of the files in this pull request, we identified @bmamlin, @reubenvarghese1 and @suniala to be potential reviewers.

[![Coverage Status](https://coveralls.io/builds/10735185/badge)](https://coveralls.io/builds/10735185)

Coverage decreased (-0.003%) to 55.938% when pulling **d7f70a64d875f82d1d055524c08a9698e15b681e on teleivo:deprecated-isdead** into **2e33a0682f21079c21767ee46ac437be20261ded on openmrs:master**.

@teleivo, thanks for your PR! By analyzing the history of the files in this pull request, we identified @bmamlin and @lluismf to be potential reviewers.
@teleivo, thanks for your PR! By analyzing the history of the files in this pull request, we identified @bmamlin, @dkayiwa and @macorrales to be potential reviewers.

[![Coverage Status](https://coveralls.io/builds/10736297/badge)](https://coveralls.io/builds/10736297)

Coverage increased (+0.02%) to 55.95% when pulling **334c55b36cc6de1dc6cbd87049ae5f71a0843962 on teleivo:deprecated-ishidden** into **bb9321da42788a5b91d0d4220588cb8a33bf8092 on openmrs:master**.


[![Coverage Status](https://coveralls.io/builds/10736336/badge)](https://coveralls.io/builds/10736336)

Coverage increased (+0.02%) to 55.944% when pulling **51d6f0289fe43b00b14b779a485a9e03a6ff8cb7 on teleivo:deprecated-isallowdecimal** into **bb9321da42788a5b91d0d4220588cb8a33bf8092 on openmrs:master**.


![Codacy](https://www.codacy.com/assets/images/favicon.png) Here is an overview of what got changed by this pull request:


```diff

Issues
======
+ Solved 2
           
```


See the complete overview on [Codacy](https://www.codacy.com/app/openmrs/openmrs-core/pullRequest?prid=559723&bid=4304881)
        

[![Coverage Status](https://coveralls.io/builds/10736937/badge)](https://coveralls.io/builds/10736937)

Coverage decreased (-0.02%) to 55.92% when pulling **fa6e8aef66a05cda08e6c24579fe18b122282ab5 on Nuwantha:TRUNK-5032** into **2e33a0682f21079c21767ee46ac437be20261ded on openmrs:master**.

Hii @teleivo I am working on this issue. Its just that the deadline for GSoC proposal is near and I am unable to devote as much time to this issue as I would love to. I hope you understand :)
@Nuwantha, thanks for your PR! By analyzing the history of the files in this pull request, we identified @bmamlin, @teleivo and @rkorytkowski to be potential reviewers.

[![Coverage Status](https://coveralls.io/builds/10739547/badge)](https://coveralls.io/builds/10739547)

Coverage increased (+0.03%) to 56.049% when pulling **267ff60884e062671ccea1dcc380d8c6b56bb77e on Nuwantha:TRUNK-5046** into **1621e97525303065647d930823ac3b747ef201ff on openmrs:master**.


[![Coverage Status](https://coveralls.io/builds/10743311/badge)](https://coveralls.io/builds/10743311)

Coverage decreased (-0.08%) to 55.944% when pulling **9fd5bafcd8ea4d807a5c5038de53b322828f2317 on teleivo:TRUNK-5126** into **1621e97525303065647d930823ac3b747ef201ff on openmrs:master**.

@teleivo, thanks for your PR! By analyzing the history of the files in this pull request, we identified @rkorytkowski, @patrickpl and @sunbiz to be potential reviewers.

[![Coverage Status](https://coveralls.io/builds/10743979/badge)](https://coveralls.io/builds/10743979)

Coverage increased (+0.1%) to 56.064% when pulling **6c9e31161914c28a05538fac655b6b0e01efbc4b on teleivo:lambdaj** into **f953060955fdac3905628c19cb58faee54f91ed2 on openmrs:master**.


[![Coverage Status](https://coveralls.io/builds/10773089/badge)](https://coveralls.io/builds/10773089)

Coverage increased (+0.02%) to 55.936% when pulling **a1ace9d60fb3c90afa4430d31de423b6fa53014a on jtatia:TRUNK-4954** into **daba0256b7cf360824aebb3ff176d5937c862e46 on openmrs:master**.

@getshravan are you still working on this?
@yvsssantosh how is this going? 😊 
@teleivo, thanks for your PR! By analyzing the history of the files in this pull request, we identified @bmamlin, @suniala and @dkayiwa to be potential reviewers.

[![Coverage Status](https://coveralls.io/builds/10789301/badge)](https://coveralls.io/builds/10789301)

Coverage increased (+0.03%) to 55.956% when pulling **ed51bbfcfe247a5677b9750f3a3f58ec9477eb7a on teleivo:TRUNK-5122** into **2b29a62ba43216c06c46ba43010b546c74f712be on openmrs:master**.


[![Coverage Status](https://coveralls.io/builds/10789304/badge)](https://coveralls.io/builds/10789304)

Coverage increased (+0.02%) to 55.95% when pulling **ed51bbfcfe247a5677b9750f3a3f58ec9477eb7a on teleivo:TRUNK-5122** into **2b29a62ba43216c06c46ba43010b546c74f712be on openmrs:master**.


[![Coverage Status](https://coveralls.io/builds/10794672/badge)](https://coveralls.io/builds/10794672)

Coverage increased (+0.02%) to 55.947% when pulling **e48cfbd15cb8e0c63e75798572f2a17ff7f58682 on vshl:TRUNK-4906-Expanded-Cohort-Details** into **5fff3ec71c0ad078f34a5fc187ca0266dce4f025 on openmrs:master**.

yes, @djazayeri comments on the task, i need to make modifications
@Nuwantha are you still working on this?
@teleivo, thanks for your PR! By analyzing the history of the files in this pull request, we identified @bmamlin, @lluismf and @suniala to be potential reviewers.
@JudeNiroshan, thanks for your PR! By analyzing the history of the files in this pull request, we identified @bmamlin, @teleivo and @wluyima to be potential reviewers.

[![Coverage Status](https://coveralls.io/builds/10805480/badge)](https://coveralls.io/builds/10805480)

Coverage decreased (-0.04%) to 55.91% when pulling **4bbfc6f4855abfe15c065b1a090c227f6d130130 on teleivo:encountervalidator-test** into **2012ab3494795b7656ef4d2542d4f67ee10b168f on openmrs:master**.

@sumanmaity112, thanks for your PR! By analyzing the history of the files in this pull request, we identified @bmamlin, @teleivo and @suniala to be potential reviewers.
Would you please, revert this change? I need another fix that 1 somehow missed. Please bear with me. Apologies for my mistake

[![Coverage Status](https://coveralls.io/builds/10805552/badge)](https://coveralls.io/builds/10805552)

Coverage increased (+0.1%) to 56.051% when pulling **4bbfc6f4855abfe15c065b1a090c227f6d130130 on teleivo:encountervalidator-test** into **2012ab3494795b7656ef4d2542d4f67ee10b168f on openmrs:master**.


[![Coverage Status](https://coveralls.io/builds/10805630/badge)](https://coveralls.io/builds/10805630)

Coverage decreased (-0.008%) to 55.939% when pulling **6b305db75a5b15275c9ebbafe9b0d5d8966fb9c5 on sumanmaity112:TRUNK-5120** into **2012ab3494795b7656ef4d2542d4f67ee10b168f on openmrs:master**.

@JudeNiroshan  this pr hasn't been merged. If u want to make any changes, then you can do so locally and push them into your fork branch. any changes will be reflected in this pr. Do remember to squash you're commits before pushing :-)
@teleivo, thanks for your PR! By analyzing the history of the files in this pull request, we identified @bmamlin, @suniala and @fanyui to be potential reviewers.

[![Coverage Status](https://coveralls.io/builds/10807346/badge)](https://coveralls.io/builds/10807346)

Coverage increased (+0.02%) to 55.953% when pulling **5c6969404794b45244994c25ece8868d08f6b44e on teleivo:personnamevalidator-test** into **66b9f0f7e42928598e603edb73bb16cf9f91f944 on openmrs:master**.

@JudeNiroshan you said you configured your IDE but I think you didnt format your changes. If you remove one if and thus reduce nesting this should also show in the body within the former if that can now be indented less. please format your changes
We tried to write unit test but were unable to write a test for this situation
@teleivo, thanks for your PR! By analyzing the history of the files in this pull request, we identified @bmamlin and @lluismf to be potential reviewers.

[![Coverage Status](https://coveralls.io/builds/10808415/badge)](https://coveralls.io/builds/10808415)

Coverage decreased (-0.01%) to 55.931% when pulling **58f4e9b08a2f505efe5f741d0ea014c6adb43786 on teleivo:alertvalidatortest** into **f42c653594b3f69227c1e40b0f9b861d29d4fbd7 on openmrs:master**.

@teleivo, thanks for your PR! By analyzing the history of the files in this pull request, we identified @jdegraft and @lluismf to be potential reviewers.

[![Coverage Status](https://coveralls.io/builds/10809875/badge)](https://coveralls.io/builds/10809875)

Coverage increased (+0.03%) to 55.968% when pulling **c064839b4a8b820d15430c95b0f64976eea92497 on teleivo:allergyvalidatortest** into **22d97e747655322d2309e0c21b580f4472535550 on openmrs:master**.

@teleivo  Since academic work I was unable to work on the issue last 5days. Sorry for delay. Could you check this?

[![Coverage Status](https://coveralls.io/builds/10810566/badge)](https://coveralls.io/builds/10810566)

Coverage decreased (-0.01%) to 55.927% when pulling **b3025918096d002bbd19b5edc066bedeed4113e6 on Nuwantha:TRUNK-5046** into **22d97e747655322d2309e0c21b580f4472535550 on openmrs:master**.

@teleivo, thanks for your PR! By analyzing the history of the files in this pull request, we identified @lluismf and @bmamlin to be potential reviewers.
@Nuwantha please be more thorough before asking for a review

[![Coverage Status](https://coveralls.io/builds/10811695/badge)](https://coveralls.io/builds/10811695)

Coverage increased (+0.2%) to 56.107% when pulling **eb56f8ccc8026473eb42f443fcba819a22f89e93 on teleivo:baseattributetypevalidatortest** into **83b0f68f6fc266e36d213238db217c9fbe53d084 on openmrs:master**.

@JudeNiroshan, thanks for your PR! By analyzing the history of the files in this pull request, we identified @bmamlin and @tomaszmueller to be potential reviewers.

[![Coverage Status](https://coveralls.io/builds/10812298/badge)](https://coveralls.io/builds/10812298)

Coverage increased (+0.04%) to 56.028% when pulling **405c76787bb1e832f7a09ba2b959d0de083006aa on JudeNiroshan:TRUNK-5031** into **a0cd91742cf61738a7d48fda1ac8fdd111469614 on openmrs:master**.

@teleivo, thanks for your PR! By analyzing the history of the files in this pull request, we identified @vshl and @lluismf to be potential reviewers.

[![Coverage Status](https://coveralls.io/builds/10812856/badge)](https://coveralls.io/builds/10812856)

Coverage increased (+0.02%) to 56.008% when pulling **d36e84be5afb578d2994b61faaa080c78d974319 on teleivo:cohortvalidatortest** into **a0cd91742cf61738a7d48fda1ac8fdd111469614 on openmrs:master**.


[![Coverage Status](https://coveralls.io/builds/10812963/badge)](https://coveralls.io/builds/10812963)

Coverage increased (+0.03%) to 56.011% when pulling **d36e84be5afb578d2994b61faaa080c78d974319 on teleivo:cohortvalidatortest** into **a0cd91742cf61738a7d48fda1ac8fdd111469614 on openmrs:master**.


[![Coverage Status](https://coveralls.io/builds/10813372/badge)](https://coveralls.io/builds/10813372)

Coverage decreased (-0.005%) to 56.028% when pulling **81a5e3c8ad46fa421a17ca5be6fd25992358f8e2 on JudeNiroshan:TRUNK-5031** into **e2a5df531ed0827595c8edab9ca7b5b76a6b00f1 on openmrs:master**.


![Codacy](https://www.codacy.com/assets/images/favicon.png) Here is an overview of what got changed by this pull request:


```diff

Issues
======
+ Solved 4
- Added 30
           

Complexity decreasing per file
==============================
+ api/src/main/java/org/openmrs/api/impl/AdministrationServiceImpl.java  -1
         
```


See the complete overview on [Codacy](https://www.codacy.com/app/openmrs/openmrs-core/pullRequest?prid=580243&bid=4366772)
        
@JudeNiroshan, thanks for your PR! By analyzing the history of the files in this pull request, we identified @bmamlin and @tomaszmueller to be potential reviewers.

[![Coverage Status](https://coveralls.io/builds/10821666/badge)](https://coveralls.io/builds/10821666)

Coverage increased (+0.09%) to 56.126% when pulling **3e9defdc296a7d4296732a89082b9f8c166f2da9 on JudeNiroshan:TRUNK-5031** into **e2a5df531ed0827595c8edab9ca7b5b76a6b00f1 on openmrs:master**.

@JudeNiroshan, thanks for your PR! By analyzing the history of the files in this pull request, we identified @bmamlin, @teleivo and @wluyima to be potential reviewers.

![Codacy](https://www.codacy.com/assets/images/favicon.png) Here is an overview of what got changed by this pull request:


```diff

Issues
======
+ Solved 7
           
```


See the complete overview on [Codacy](https://www.codacy.com/app/openmrs/openmrs-core/pullRequest?prid=582072&bid=4371316)
        

[![Coverage Status](https://coveralls.io/builds/10822048/badge)](https://coveralls.io/builds/10822048)

Coverage decreased (-0.03%) to 56.0% when pulling **159fbf073713408b9b60776c68b0fee7162679a9 on JudeNiroshan:TRUNK-5034** into **e2a5df531ed0827595c8edab9ca7b5b76a6b00f1 on openmrs:master**.

@JudeNiroshan, thanks for your PR! By analyzing the history of the files in this pull request, we identified @bmamlin, @teleivo and @wluyima to be potential reviewers.

![Codacy](https://www.codacy.com/assets/images/favicon.png) Here is an overview of what got changed by this pull request:


```diff

Issues
======
+ Solved 7
           
```


See the complete overview on [Codacy](https://www.codacy.com/app/openmrs/openmrs-core/pullRequest?prid=582163&bid=4371519)
        

[![Coverage Status](https://coveralls.io/builds/10823039/badge)](https://coveralls.io/builds/10823039)

Coverage decreased (-0.04%) to 55.994% when pulling **5415df045aec2722b064c8f8dcb6624824e47f26 on JudeNiroshan:TRUNK-5034** into **e2a5df531ed0827595c8edab9ca7b5b76a6b00f1 on openmrs:master**.

@JudeNiroshan, thanks for your PR! By analyzing the history of the files in this pull request, we identified @bmamlin, @teleivo and @wluyima to be potential reviewers.

![Codacy](https://www.codacy.com/assets/images/favicon.png) Here is an overview of what got changed by this pull request:


```diff

Issues
======
+ Solved 7
- Added 1
           
```


See the complete overview on [Codacy](https://www.codacy.com/app/openmrs/openmrs-core/pullRequest?prid=582272&bid=4371757)
        

[![Coverage Status](https://coveralls.io/builds/10823882/badge)](https://coveralls.io/builds/10823882)

Coverage decreased (-0.02%) to 56.012% when pulling **8be229a978fe9add1836271055b8bc56c3f8ee2a on JudeNiroshan:TRUNK-4987** into **e2a5df531ed0827595c8edab9ca7b5b76a6b00f1 on openmrs:master**.

@JudeNiroshan please squash your commits and rebase on the latest master(see PR checklist above). And why are there tests added. Tests are always great but are these yours?
@teleivo, thanks for your PR! By analyzing the history of the files in this pull request, we identified @chethandeshpande and @lluismf to be potential reviewers.

[![Coverage Status](https://coveralls.io/builds/10825501/badge)](https://coveralls.io/builds/10825501)

Coverage decreased (-0.01%) to 56.02% when pulling **d6c2b56988f5d54427d765664a7f8e8789ca1170 on teleivo:conceptattributevalidatortest** into **e2a5df531ed0827595c8edab9ca7b5b76a6b00f1 on openmrs:master**.

@teleivo, thanks for your PR! By analyzing the history of the files in this pull request, we identified @bmamlin and @suniala to be potential reviewers.

[![Coverage Status](https://coveralls.io/builds/10825704/badge)](https://coveralls.io/builds/10825704)

Coverage increased (+0.01%) to 56.008% when pulling **a05edb057fc321facbbeefe4af43111eb97f9532 on teleivo:TRUNK-5135** into **2f3ac9f9552d1db039baef2d13be83509f069798 on openmrs:master**.

@JudeNiroshan, thanks for your PR! By analyzing the history of the files in this pull request, we identified @bmamlin, @teleivo and @reubenvarghese1 to be potential reviewers.

![Codacy](https://www.codacy.com/assets/images/favicon.png) Here is an overview of what got changed by this pull request:


```diff

Issues
======
- Added 6
           

Complexity increasing per file
==============================
- api/src/main/java/org/openmrs/api/impl/ProgramWorkflowServiceImpl.java  2
         
```


See the complete overview on [Codacy](https://www.codacy.com/app/openmrs/openmrs-core/pullRequest?prid=582554&bid=4372895)
        
@teleivo I saw the coverage has decreased. That's why I went through and try to add some more in order to get apporved my PR.

[![Coverage Status](https://coveralls.io/builds/10826062/badge)](https://coveralls.io/builds/10826062)

Coverage increased (+0.01%) to 56.035% when pulling **10b426924cfda48d4fc900065e1cfbb796171fc3 on JudeNiroshan:TRUNK-5053** into **2accd9373498e53f8c2ae066b615917989a231b3 on openmrs:master**.

@JudeNiroshan thanks for the tests, nice! Please address my comments and this one should be good to merge.

![Codacy](https://www.codacy.com/assets/images/favicon.png) Here is an overview of what got changed by this pull request:


```diff

Issues
======
+ Solved 20
           

Complexity increasing per file
==============================
- api/src/main/java/org/openmrs/hl7/impl/HL7ServiceImpl.java  4
         

Complexity decreasing per file
==============================
+ api/src/main/java/org/openmrs/api/db/hibernate/HibernateObsDAO.java  -1
         
```


See the complete overview on [Codacy](https://www.codacy.com/app/openmrs/openmrs-core/pullRequest?prid=574062&bid=4345459)
        
@teleivo, thanks for your PR! By analyzing the history of the files in this pull request, we identified @bmamlin, @suniala and @ShekharReddy4 to be potential reviewers.

[![Coverage Status](https://coveralls.io/builds/10852232/badge)](https://coveralls.io/builds/10852232)

Coverage increased (+0.02%) to 56.027% when pulling **da03399f6535bcb9cc329322c07da372a2633a79 on getshravan:master** into **d4f5750dc69659566d829aef6910a259885478d4 on openmrs:master**.


[![Coverage Status](https://coveralls.io/builds/10852566/badge)](https://coveralls.io/builds/10852566)

Coverage decreased (-0.03%) to 55.996% when pulling **956424420b23350856fff302a3261fdea86bbb91 on teleivo:error-matchers** into **363d0e25e807b4a92f78bb158ff52a34fce6a618 on openmrs:master**.


[![Coverage Status](https://coveralls.io/builds/10852681/badge)](https://coveralls.io/builds/10852681)

Coverage increased (+0.1%) to 56.131% when pulling **956424420b23350856fff302a3261fdea86bbb91 on teleivo:error-matchers** into **363d0e25e807b4a92f78bb158ff52a34fce6a618 on openmrs:master**.


[![Coverage Status](https://coveralls.io/builds/10852972/badge)](https://coveralls.io/builds/10852972)

Coverage remained the same at 56.027% when pulling **4985500ea10d91b7dc970294b5bbebf167cb6c39 on teleivo:error-matchers** into **363d0e25e807b4a92f78bb158ff52a34fce6a618 on openmrs:master**.


[![Coverage Status](https://coveralls.io/builds/10853006/badge)](https://coveralls.io/builds/10853006)

Coverage increased (+0.02%) to 56.033% when pulling **e8002577a354f92479d326e75a529427ddb6155d on getshravan:master** into **d4f5750dc69659566d829aef6910a259885478d4 on openmrs:master**.


[![Coverage Status](https://coveralls.io/builds/10853093/badge)](https://coveralls.io/builds/10853093)

Coverage remained the same at 56.027% when pulling **4985500ea10d91b7dc970294b5bbebf167cb6c39 on teleivo:error-matchers** into **363d0e25e807b4a92f78bb158ff52a34fce6a618 on openmrs:master**.


![Codacy](https://www.codacy.com/assets/images/favicon.png) Here is an overview of what got changed by this pull request:


```diff

Issues
======
+ Solved 1
           

Complexity decreasing per file
==============================
+ api/src/main/java/org/openmrs/api/impl/GlobalLocaleList.java  -1
         
```


See the complete overview on [Codacy](https://www.codacy.com/app/openmrs/openmrs-core/pullRequest?prid=554386&bid=4290387)
        

[![Coverage Status](https://coveralls.io/builds/10855349/badge)](https://coveralls.io/builds/10855349)

Coverage increased (+0.003%) to 56.011% when pulling **9d35e4ba035241563c14c7b31d375d37291d7ed4 on getshravan:master** into **d4f5750dc69659566d829aef6910a259885478d4 on openmrs:master**.

I have committed my changes but not able to squash my commits
@getshravan, thanks for your PR! By analyzing the history of the files in this pull request, we identified @bmamlin, @teleivo and @lluismf to be potential reviewers.

![Codacy](https://www.codacy.com/assets/images/favicon.png) Here is an overview of what got changed by this pull request:


```diff

Issues
======
+ Solved 1
           

Complexity decreasing per file
==============================
+ api/src/main/java/org/openmrs/api/impl/GlobalLocaleList.java  -1
         
```


See the complete overview on [Codacy](https://www.codacy.com/app/openmrs/openmrs-core/pullRequest?prid=586129&bid=4384811)
        

[![Coverage Status](https://coveralls.io/builds/10859044/badge)](https://coveralls.io/builds/10859044)

Coverage increased (+0.009%) to 56.027% when pulling **b9589d927f486dbad7300ae54f474cecf00cf30a on getshravan:myopenmrs** into **ae5770cc3a86897618f70a60f69fc598d64234e0 on openmrs:master**.


[![Coverage Status](https://coveralls.io/builds/10859741/badge)](https://coveralls.io/builds/10859741)

Coverage increased (+0.003%) to 56.02% when pulling **f25c72a2c5754456d3a5c4991720c41b1ad66cab on jtatia:TRUNK-4916** into **ae5770cc3a86897618f70a60f69fc598d64234e0 on openmrs:master**.


![Codacy](https://www.codacy.com/assets/images/favicon.png) Here is an overview of what got changed by this pull request:


```diff

Complexity increasing per file
==============================
- api/src/main/java/org/openmrs/api/impl/ObsServiceImpl.java  2
         

Complexity decreasing per file
==============================
+ api/src/main/java/org/openmrs/api/impl/PersonServiceImpl.java  -8
         
```


See the complete overview on [Codacy](https://www.codacy.com/app/openmrs/openmrs-core/pullRequest?prid=520644&bid=4195124)
        

[![Coverage Status](https://coveralls.io/builds/10860529/badge)](https://coveralls.io/builds/10860529)

Coverage decreased (-0.01%) to 56.005% when pulling **7d5cac654ff5fa1272473115d0820d8185f74e07 on jtatia:TRUNK-4916** into **ae5770cc3a86897618f70a60f69fc598d64234e0 on openmrs:master**.


[![Coverage Status](https://coveralls.io/builds/10860534/badge)](https://coveralls.io/builds/10860534)

Coverage decreased (-0.02%) to 55.999% when pulling **7d5cac654ff5fa1272473115d0820d8185f74e07 on jtatia:TRUNK-4916** into **ae5770cc3a86897618f70a60f69fc598d64234e0 on openmrs:master**.

@vixus0, thanks for your PR! By analyzing the history of the files in this pull request, we identified @bmamlin, @rkorytkowski and @karrtikiyer-tw to be potential reviewers.

[![Coverage Status](https://coveralls.io/builds/10869205/badge)](https://coveralls.io/builds/10869205)

Coverage increased (+0.01%) to 56.03% when pulling **6bd017a503bb5492ff08a7bc95e0e10ae9fbe567 on vixus0:trunk-248** into **ae5770cc3a86897618f70a60f69fc598d64234e0 on openmrs:master**.

@MatMoore, thanks for your PR! By analyzing the history of the files in this pull request, we identified @bmamlin, @teleivo and @tanayabh to be potential reviewers.

[![Coverage Status](https://coveralls.io/builds/10869523/badge)](https://coveralls.io/builds/10869523)

Coverage decreased (-0.02%) to 56.002% when pulling **25af6217b2f29e2bae3822e2b9809981ab9314ab on vixus0:trunk-248** into **ae5770cc3a86897618f70a60f69fc598d64234e0 on openmrs:master**.


[![Coverage Status](https://coveralls.io/builds/10869567/badge)](https://coveralls.io/builds/10869567)

Coverage increased (+0.009%) to 56.027% when pulling **a42ef6b5f296580d5d02ea7902630efd971bc9fa on MatMoore:TRUNK-248** into **ae5770cc3a86897618f70a60f69fc598d64234e0 on openmrs:master**.

@MatMoore I dont know. @dkayiwa do you know more about where this class is used? And what we should do with it?

[![Coverage Status](https://coveralls.io/builds/10869908/badge)](https://coveralls.io/builds/10869908)

Coverage increased (+0.1%) to 56.128% when pulling **c5e5a6c21d5159c43de40ce192dfb382297ed6f9 on vixus0:trunk-248** into **ae5770cc3a86897618f70a60f69fc598d64234e0 on openmrs:master**.

@annashipman, thanks for your PR! By analyzing the history of the files in this pull request, we identified @bmamlin, @rkorytkowski and @teleivo to be potential reviewers.

[![Coverage Status](https://coveralls.io/builds/10870454/badge)](https://coveralls.io/builds/10870454)

Coverage decreased (-0.03%) to 55.993% when pulling **f884591b3ac6ff962add17dc1f2823032d399e73 on annashipman:TRUNK-248** into **63447994445a90b09e488372a801630905422025 on openmrs:master**.


[![Coverage Status](https://coveralls.io/builds/10870481/badge)](https://coveralls.io/builds/10870481)

Coverage increased (+0.01%) to 56.034% when pulling **f3149eaa4f64c342e61c4a3473f509fb391f28c7 on DataMinerUK:TRUNK-248** into **63447994445a90b09e488372a801630905422025 on openmrs:master**.


![Codacy](https://www.codacy.com/assets/images/favicon.png) Here is an overview of what got changed by this pull request:


```diff

Issues
======
+ Solved 1
           

Complexity decreasing per file
==============================
+ api/src/main/java/org/openmrs/propertyeditor/LocationEditor.java  -2
         
```


See the complete overview on [Codacy](https://www.codacy.com/app/openmrs/openmrs-core/pullRequest?prid=587540&bid=4387946)
        
@teleivo, thanks for your PR! By analyzing the history of the files in this pull request, we identified @bmamlin, @suniala and @lluismf to be potential reviewers.

[![Coverage Status](https://coveralls.io/builds/10871544/badge)](https://coveralls.io/builds/10871544)

Coverage increased (+0.1%) to 56.114% when pulling **8d9af2c31a96860ca5c3e68acdd461defb0668a2 on DataMinerUK:TRUNK-248** into **e7fb074c40150458b86795de7dd47fb7d9c78197 on openmrs:master**.


[![Coverage Status](https://coveralls.io/builds/10871616/badge)](https://coveralls.io/builds/10871616)

Coverage increased (+0.04%) to 56.03% when pulling **ab5b9ac57be9a7935262a0ba62852c957445f1fe on teleivo:globalerrors-matcher** into **e7fb074c40150458b86795de7dd47fb7d9c78197 on openmrs:master**.

@davbo, thanks for your PR! By analyzing the history of the files in this pull request, we identified @bmamlin, @suniala and @dkayiwa to be potential reviewers.

[![Coverage Status](https://coveralls.io/builds/10872338/badge)](https://coveralls.io/builds/10872338)

Changes Unknown when pulling **a8f89b771e71977c0e3b2e85e52466527150efce on davbo:TRUNK-248** into ** on openmrs:master**.

@MalshaL, thanks for your PR! By analyzing the history of the files in this pull request, we identified @bmamlin, @teleivo and @Ankitkumar94 to be potential reviewers.
@teleivo, thanks for your PR! By analyzing the history of the files in this pull request, we identified @bmamlin, @lluismf and @suniala to be potential reviewers.

[![Coverage Status](https://coveralls.io/builds/10886024/badge)](https://coveralls.io/builds/10886024)

Changes Unknown when pulling **e4cb346ee8c63915c1261e8412340b8d0eb6ae16 on teleivo:fix-conceptvalidatortest** into ** on openmrs:master**.


[![Coverage Status](https://coveralls.io/builds/10886942/badge)](https://coveralls.io/builds/10886942)

Changes Unknown when pulling **07a8a4f5a570cd62ba6889dbdf28e6aae14944da on MalshaL:master** into ** on openmrs:master**.


[![Coverage Status](https://coveralls.io/builds/10886944/badge)](https://coveralls.io/builds/10886944)

Coverage increased (+0.03%) to 56.071% when pulling **54d663de1283cfd49a816c2be475aea28582eb24 on vshl:TRUNK-4906-Expanded-Cohort-Details** into **0bae18e5ddfbb9d01825de58b4c89a0a246b92c6 on openmrs:master**.

@MalshaL, thanks for your PR! By analyzing the history of the files in this pull request, we identified @bmamlin, @teleivo and @jdegraft to be potential reviewers.

[![Coverage Status](https://coveralls.io/builds/10888166/badge)](https://coveralls.io/builds/10888166)

Coverage increased (+0.03%) to 56.062% when pulling **d6a601477dd7f2bbe363dc5db927586442093fc5 on MalshaL:TRUNK-5045** into **0bae18e5ddfbb9d01825de58b4c89a0a246b92c6 on openmrs:master**.

@suthagar23, thanks for your PR! By analyzing the history of the files in this pull request, we identified @bmamlin, @dkayiwa and @teleivo to be potential reviewers.

[![Coverage Status](https://coveralls.io/builds/10891232/badge)](https://coveralls.io/builds/10891232)

Coverage decreased (-0.02%) to 56.064% when pulling **b6aefccba4af46fc654ff94c98b4ab084ec21d39 on suthagar23:TRUNK-324** into **bdc81ac166ff6dbbfddc46e2d5d400cda2deac51 on openmrs:master**.


![Codacy](https://www.codacy.com/assets/images/favicon.png) Here is an overview of what got changed by this pull request:


```diff

Complexity increasing per file
==============================
- api/src/main/java/org/openmrs/api/impl/EncounterServiceImpl.java  3
         
```


See the complete overview on [Codacy](https://www.codacy.com/app/openmrs/openmrs-core/pullRequest?prid=589117&bid=4391879)
        

[![Coverage Status](https://coveralls.io/builds/10891854/badge)](https://coveralls.io/builds/10891854)

Coverage increased (+0.01%) to 56.092% when pulling **58d64b75647d6ef8b19b914fee146c2564dded16 on suthagar23:TRUNK-324** into **bdc81ac166ff6dbbfddc46e2d5d400cda2deac51 on openmrs:master**.

@suthagar23, thanks for your PR! By analyzing the history of the files in this pull request, we identified @bmamlin, @dkayiwa and @teleivo to be potential reviewers.

![Codacy](https://www.codacy.com/assets/images/favicon.png) Here is an overview of what got changed by this pull request:


```diff

Complexity increasing per file
==============================
- api/src/main/java/org/openmrs/api/impl/VisitServiceImpl.java  2
- api/src/main/java/org/openmrs/api/impl/EncounterServiceImpl.java  3
         
```


See the complete overview on [Codacy](https://www.codacy.com/app/openmrs/openmrs-core/pullRequest?prid=589199&bid=4392125)
        

[![Coverage Status](https://coveralls.io/builds/10892243/badge)](https://coveralls.io/builds/10892243)

Coverage increased (+0.1%) to 56.179% when pulling **329f893c30cbbff19d24f8eed7de168c266196f7 on suthagar23:TRUNK-5052** into **bdc81ac166ff6dbbfddc46e2d5d400cda2deac51 on openmrs:master**.

@suthagar23, thanks for your PR! By analyzing the history of the files in this pull request, we identified @bmamlin, @dkayiwa and @teleivo to be potential reviewers.

[![Coverage Status](https://coveralls.io/builds/10892506/badge)](https://coveralls.io/builds/10892506)

Coverage decreased (-0.0001%) to 56.082% when pulling **b9adf2a09a784b20e7a0365e7a66f7258696560a on suthagar23:TRUNK-5050** into **bdc81ac166ff6dbbfddc46e2d5d400cda2deac51 on openmrs:master**.


![Codacy](https://www.codacy.com/assets/images/favicon.png) Here is an overview of what got changed by this pull request:


```diff

Issues
======
- Added 1
           

Complexity increasing per file
==============================
- api/src/main/java/org/openmrs/api/impl/VisitServiceImpl.java  2
- api/src/main/java/org/openmrs/api/impl/EncounterServiceImpl.java  3
         
```


See the complete overview on [Codacy](https://www.codacy.com/app/openmrs/openmrs-core/pullRequest?prid=589225&bid=4392172)
        
@suthagar23, thanks for your PR! By analyzing the history of the files in this pull request, we identified @bmamlin, @dkayiwa and @teleivo to be potential reviewers.

[![Coverage Status](https://coveralls.io/builds/10892566/badge)](https://coveralls.io/builds/10892566)

Coverage decreased (-0.03%) to 56.054% when pulling **7bc064091891a0aa3e0c2acd4af9ce8ae4cd1299 on suthagar23:TRUNK-5050** into **bdc81ac166ff6dbbfddc46e2d5d400cda2deac51 on openmrs:master**.


![Codacy](https://www.codacy.com/assets/images/favicon.png) Here is an overview of what got changed by this pull request:


```diff

Issues
======
- Added 1
           

Complexity increasing per file
==============================
- api/src/main/java/org/openmrs/api/impl/VisitServiceImpl.java  3
- api/src/main/java/org/openmrs/api/impl/EncounterServiceImpl.java  3
         
```


See the complete overview on [Codacy](https://www.codacy.com/app/openmrs/openmrs-core/pullRequest?prid=589237&bid=4392194)
        
@suthagar23, thanks for your PR! By analyzing the history of the files in this pull request, we identified @bmamlin, @dkayiwa and @teleivo to be potential reviewers.

[![Coverage Status](https://coveralls.io/builds/10892725/badge)](https://coveralls.io/builds/10892725)

Coverage decreased (-0.01%) to 56.07% when pulling **64fcbc2f24a5d65e336992cc5288b01722871ba5 on suthagar23:TRUNK-5062** into **bdc81ac166ff6dbbfddc46e2d5d400cda2deac51 on openmrs:master**.


[![Coverage Status](https://coveralls.io/builds/10892768/badge)](https://coveralls.io/builds/10892768)

Coverage increased (+0.007%) to 56.089% when pulling **bb85bae28020b4499a23fa2c2b1c55549e959449 on suthagar23:TRUNK-5062** into **bdc81ac166ff6dbbfddc46e2d5d400cda2deac51 on openmrs:master**.


[![Coverage Status](https://coveralls.io/builds/10893007/badge)](https://coveralls.io/builds/10893007)

Coverage increased (+0.01%) to 56.095% when pulling **85b5630a14bbeb81f588c4fc95b01ab9bae3a2a2 on suthagar23:TRUNK-5062** into **bdc81ac166ff6dbbfddc46e2d5d400cda2deac51 on openmrs:master**.


[![Coverage Status](https://coveralls.io/builds/10893055/badge)](https://coveralls.io/builds/10893055)

Coverage decreased (-0.002%) to 56.08% when pulling **93c1585761ebf7a215d5822938adc073271b85c1 on suthagar23:TRUNK-5062** into **bdc81ac166ff6dbbfddc46e2d5d400cda2deac51 on openmrs:master**.


![Codacy](https://www.codacy.com/assets/images/favicon.png) Here is an overview of what got changed by this pull request:


```diff

Complexity increasing per file
==============================
- api/src/main/java/org/openmrs/api/impl/EncounterServiceImpl.java  3
         
```


See the complete overview on [Codacy](https://www.codacy.com/app/openmrs/openmrs-core/pullRequest?prid=589242&bid=4392200)
        

[![Coverage Status](https://coveralls.io/builds/10893143/badge)](https://coveralls.io/builds/10893143)

Coverage increased (+0.004%) to 56.086% when pulling **9704360de23452774863aa1cea5e3444d7fbb46e on suthagar23:TRUNK-5062** into **bdc81ac166ff6dbbfddc46e2d5d400cda2deac51 on openmrs:master**.


[![Coverage Status](https://coveralls.io/builds/10919976/badge)](https://coveralls.io/builds/10919976)

Coverage increased (+0.005%) to 56.088% when pulling **d1ba0c0d750f8c0cf9b29a5adb3f30e303aa8696 on MalshaL:master** into **bdc81ac166ff6dbbfddc46e2d5d400cda2deac51 on openmrs:master**.


![Codacy](https://www.codacy.com/assets/images/favicon.png) Here is an overview of what got changed by this pull request:


```diff

Issues
======
- Added 2
           

Complexity increasing per file
==============================
- api/src/main/java/org/openmrs/validator/ObsValidator.java  2
         
```


See the complete overview on [Codacy](https://www.codacy.com/app/openmrs/openmrs-core/pullRequest?prid=513402&bid=4175883)
        
@djazayeri, thanks for your PR! By analyzing the history of the files in this pull request, we identified @bmamlin, @dkayiwa and @tobivogel to be potential reviewers.

![Codacy](https://www.codacy.com/assets/images/favicon.png) Here is an overview of what got changed by this pull request:


```diff

Complexity increasing per file
==============================
- api/src/main/java/org/openmrs/Obs.java  4
         
```


See the complete overview on [Codacy](https://www.codacy.com/app/openmrs/openmrs-core/pullRequest?prid=593156&bid=4402301)
        

[![Coverage Status](https://coveralls.io/builds/10933369/badge)](https://coveralls.io/builds/10933369)

Coverage increased (+0.04%) to 56.127% when pulling **6ae7b20bdbdb3be033babb62343481b28d96b165 on TRUNK-4976** into **04e93137944f1e84c7dc31b286cf8f763d5e4adf on master**.

Is client code the one expected to change the status to amended when an Obs is edited?
@wluyima, Burke and I discussed this on the design call yesterday, and we think it would be better if the API sets this automatically. I'm viewing that as a nice-to-have for now, and as it is now the code doesn't do this, and the client is expected to set this field.
Okay, thanks!
@suthagar23 are you working on this? We have a lot of PRs open and would like to merge them
@suthagar23 please can you please take some time to read
* https://wiki.openmrs.org/display/docs/Pull+Request+Tips
* and look at other PRs as well (you should not remove the pull request template, this makes it harder for us to review when you dont link the issue in the template)
@suthagar23 you have 7 commits in here, with this are mixing issues which is why we cannot merge as on PR should fix one issue only. please fix, thank you :)
@ShruthiPitta, thanks for your PR! By analyzing the history of the files in this pull request, we identified @vshl, @WolfSchlegel and @dkayiwa to be potential reviewers.

[![Coverage Status](https://coveralls.io/builds/10940109/badge)](https://coveralls.io/builds/10940109)

Coverage increased (+0.02%) to 55.75% when pulling **278482a30ad78ec87d4f8c70ce6de8e53155c0ca on ShruthiPitta:TRUNK-5140** into **c52f3c6c6600c2ef07e5a9d8a1ceef00a5b5d05b on openmrs:2.1.x**.


[![Coverage Status](https://coveralls.io/builds/10942327/badge)](https://coveralls.io/builds/10942327)

Coverage increased (+0.01%) to 56.144% when pulling **9192554ce710d04e125a596ae84e0205cc6c4910 on MalshaL:master** into **97c176be614acdb843e8906c6f97615d37735fcd on openmrs:master**.


[![Coverage Status](https://coveralls.io/builds/10942624/badge)](https://coveralls.io/builds/10942624)

Coverage increased (+0.01%) to 56.144% when pulling **a4f7044579be718e9a17962d42934363b122ffe7 on MalshaL:TRUNK-5045** into **97c176be614acdb843e8906c6f97615d37735fcd on openmrs:master**.


![Codacy](https://www.codacy.com/assets/images/favicon.png) Here is an overview of what got changed by this pull request:


```diff

Complexity increasing per file
==============================
- api/src/main/java/org/openmrs/api/impl/PatientServiceImpl.java  4
         
```


See the complete overview on [Codacy](https://www.codacy.com/app/openmrs/openmrs-core/pullRequest?prid=588863&bid=4391141)
        

![Codacy](https://www.codacy.com/assets/images/favicon.png) Here is an overview of what got changed by this pull request:


```diff

Complexity increasing per file
==============================
- api/src/main/java/org/openmrs/api/impl/PersonServiceImpl.java  2
         
```


See the complete overview on [Codacy](https://www.codacy.com/app/openmrs/openmrs-core/pullRequest?prid=588515&bid=4390414)
        
@MatMoore @teleivo for platform service methods, you can not know which modules are using them  because module authors are not required to host them under the openmrs github organisation. Besides, modules are not required to be open source. 😊 
The TODO requires a unit test for the case where containingAnyFormField is not empty.
@sumanmaity112, thanks for your PR! By analyzing the history of the files in this pull request, we identified @bmamlin, @teleivo and @suniala to be potential reviewers.

[![Coverage Status](https://coveralls.io/builds/10956394/badge)](https://coveralls.io/builds/10956394)

Coverage decreased (-0.04%) to 56.09% when pulling **aac4c35417568fa828956edff8ab3992e88e82c0 on sumanmaity112:TRUNK-5120** into **97c176be614acdb843e8906c6f97615d37735fcd on openmrs:master**.

In the pre condition we are just checking if the column exists or not. We are not checking the length of the column. Checked other existing similar migrations. They are doing the same. 
@teleivo I have made the necessary modifications. Could you please review the PR? Thank you.
@teleivo I have made the necessary modifications. Could you please review the PR? Thank you.

[![Coverage Status](https://coveralls.io/builds/11022867/badge)](https://coveralls.io/builds/11022867)

Coverage increased (+0.1%) to 56.29% when pulling **64ecfb5f29321d301259cfbb30bb3a7416f9f2e4 on vshl:TRUNK-4906-Expanded-Cohort-Details** into **d148b6740412e23cabaee827ad02d8b6a8030b6e on openmrs:master**.

@ShruthiPitta, thanks for your PR! By analyzing the history of the files in this pull request, we identified @bmamlin, @Magicpotatoes2 and @chethandeshpande to be potential reviewers.
Do you happen to have a test for this?

[![Coverage Status](https://coveralls.io/builds/11035349/badge)](https://coveralls.io/builds/11035349)

Coverage increased (+0.02%) to 55.814% when pulling **43a9ea5d81915aabe2cb9d4674599e96bb2d197e on ShruthiPitta:TRUNK-5144** into **fc0fe488960c8f2799d721865bcacf31d15da3cd on openmrs:2.1.x**.

Oop! Sorry I was looking at this old PR, ignore my new comments on this
@abarne, thanks for your PR! By analyzing the history of the files in this pull request, we identified @bmamlin, @teleivo and @dkayiwa to be potential reviewers.

[![Coverage Status](https://coveralls.io/builds/11047678/badge)](https://coveralls.io/builds/11047678)

Coverage decreased (-0.06%) to 56.086% when pulling **2311ede63b0164cfdb8bfeaf75075326f29454fc on abarne:TRUNK-5033** into **d148b6740412e23cabaee827ad02d8b6a8030b6e on openmrs:master**.


[![Coverage Status](https://coveralls.io/builds/11050520/badge)](https://coveralls.io/builds/11050520)

Coverage decreased (-0.08%) to 55.716% when pulling **7e088aca7caf2866ee65f81838e5fb3b547b7e95 on ShruthiPitta:TRUNK-5144** into **fc0fe488960c8f2799d721865bcacf31d15da3cd on openmrs:2.1.x**.

@dkayiwa Added test to reproduce the issue.
@mavrk are you still working on this? I see merge conflicts.
@Nuwantha are you still working on this? I see merge conflicts.
Hi @dkayiwa, yes I am still working on this. I am resolving those conflicts and making changes. There are some more additions which @teleivo suggested, I am making them as well.
Thanks @dkayiwa, that makes sense. In that case I'll try and write a unit test based on the current implementation 🙂 

[![Coverage Status](https://coveralls.io/builds/11103787/badge)](https://coveralls.io/builds/11103787)

Coverage decreased (-0.1%) to 55.679% when pulling **7e088aca7caf2866ee65f81838e5fb3b547b7e95 on ShruthiPitta:TRUNK-5144** into **fc0fe488960c8f2799d721865bcacf31d15da3cd on openmrs:2.1.x**.

Made changes as per https://talk.openmrs.org/t/trunk-5144-concept-save-for-coded-concept-throws-hibernate-exception/11059/3

[![Coverage Status](https://coveralls.io/builds/11107241/badge)](https://coveralls.io/builds/11107241)

Coverage increased (+0.1%) to 55.713% when pulling **6c63e53ceaa0a6aa8e8be7d3eafaf5f026b6e5b6 on ShruthiPitta:TRUNK-5144** into **5ba724cf1871066cd041054057b052320ff5cb8e on openmrs:2.1.x**.

@djazayeri updated as per your suggestions 

[![Coverage Status](https://coveralls.io/builds/11107393/badge)](https://coveralls.io/builds/11107393)

Coverage increased (+0.1%) to 55.707% when pulling **14bb4283b41aff29e701ec21d0d52a31c6a041e5 on ShruthiPitta:TRUNK-5144** into **5ba724cf1871066cd041054057b052320ff5cb8e on openmrs:2.1.x**.


[![Coverage Status](https://coveralls.io/builds/11107401/badge)](https://coveralls.io/builds/11107401)

Coverage increased (+0.08%) to 55.682% when pulling **14bb4283b41aff29e701ec21d0d52a31c6a041e5 on ShruthiPitta:TRUNK-5144** into **5ba724cf1871066cd041054057b052320ff5cb8e on openmrs:2.1.x**.

@MatMoore I am closing this PR for now since we have many PRs open and it becomes messy for us reviewers :) Please fell free to reopen the PR when you have added the tests. Thank you very much for your contribution!
@Nuwantha I am closing this PR for now since we have many PRs open and it becomes messy for us reviewers :) Please fell free to reopen the PR when you are ready (rebase on latest master, squash commits). Thank you very much for your contribution!
@JudeNiroshan I am closing this PR for now since we have many PRs open and it becomes messy for us reviewers :) Please fell free to create a new PR when you have addressed my comments. Thank you very much for your contribution!
@JudeNiroshan you need to remove one of your commits. you have two commits for separate issues.
@JudeNiroshan I am closing this PR for now since we have many PRs open and it becomes messy for us reviewers :) Please fell free to create a new PR when you have addressed my comments. Thank you very much for your contribution!
Can you fix the ticket url on this pull request?
@suthagar23 can you squash these commits into one as advised at https://wiki.openmrs.org/display/docs/Pull+Request+Tips
@suthagar23 can you squash these commits into one as advised at https://wiki.openmrs.org/display/docs/Pull+Request+Tips
@suthagar23 can you squash these commits into one as advised at https://wiki.openmrs.org/display/docs/Pull+Request+Tips
@suthagar23 can you squash these commits into one as advised at https://wiki.openmrs.org/display/docs/Pull+Request+Tips
@jtatia did you see the merge conflicts on this?
@tmarzeion will reopen when you get back to finish it up.
Fixed the ticket URL. Didn't notice I left out the number.
Yes, im the middle of semester exams and project submissions and hence have not been able to address this. ill resolve this bug as quickly as possible after the exams are done. :) 
@teleivo no problem 🙂 

@dkayiwa I had another look at this today, and I think the behavior is tested, but the test is at the service level, and it only covers the case where the parameter is passed in and actually matches a form field.

https://github.com/openmrs/openmrs-core/blob/master/api/src/test/java/org/openmrs/api/FormServiceTest.java#L296

There isn't a test case for the form DAO itself, but I don't think there's value in creating one that just duplicates what's tested at the service level. I'm not very familiar with Java/OpenMRS conventions for testing though - what do you think?

I could expand the FormServiceTest to cover a few more cases, if that would be useful?
I think we mainly test via the service layer. Adding some more cases to the
existing tests that are not yet covered is useful :)

Am 17.04.2017 20:24 schrieb "Mat" <notifications@github.com>:

> @teleivo <https://github.com/teleivo> no problem 🙂
>
> @dkayiwa <https://github.com/dkayiwa> I had another look at this today,
> and I think the behavior is tested, but the test is at the service level,
> and it only covers the case where the parameter is passed in and actually
> matches a form field.
>
> https://github.com/openmrs/openmrs-core/blob/master/api/
> src/test/java/org/openmrs/api/FormServiceTest.java#L296
>
> There isn't a test case for the form DAO itself, but I don't think there's
> value in creating one that duplicates what's tested at the service level.
> I'm not very familiar with Java/OpenMRS conventions for testing though -
> what do you think?
>
> I could expand the FormServiceTest to cover a few more cases, if that
> would be useful?
>
> —
> You are receiving this because you were mentioned.
> Reply to this email directly, view it on GitHub
> <https://github.com/openmrs/openmrs-core/pull/2117#issuecomment-294551111>,
> or mute the thread
> <https://github.com/notifications/unsubscribe-auth/AEcfmNWIyyu7gPtorEIP-brOC35lrotCks5rw65fgaJpZM4MvwsO>
> .
>


[![Coverage Status](https://coveralls.io/builds/11116677/badge)](https://coveralls.io/builds/11116677)

Coverage increased (+0.09%) to 56.214% when pulling **f5db654e8cd50abaf73aa2c13f566c53d60b76bc on vshl:TRUNK-4906-Expanded-Cohort-Details** into **2aed0560d7acc2039c23377a0fa3c89d928083c6 on openmrs:master**.


[![Coverage Status](https://coveralls.io/builds/11118303/badge)](https://coveralls.io/builds/11118303)

Coverage increased (+0.1%) to 56.226% when pulling **7770508202090cf70a5c92c9c3a9823747f9dea1 on vshl:TRUNK-4906-Expanded-Cohort-Details** into **2aed0560d7acc2039c23377a0fa3c89d928083c6 on openmrs:master**.


![Codacy](https://www.codacy.com/assets/images/favicon.png) Here is an overview of what got changed by this pull request:


```diff

Issues
======
+ Solved 11
           

Complexity increasing per file
==============================
- api/src/main/java/org/openmrs/validator/CohortValidator.java  3
- api/src/main/java/org/openmrs/CohortMembership.java  15
- api/src/main/java/org/openmrs/api/db/hibernate/HibernateCohortDAO.java  1
- api/src/main/java/org/openmrs/Cohort.java  7
         
```


See the complete overview on [Codacy](https://www.codacy.com/app/openmrs/openmrs-core/pullRequest?prid=547216&bid=4271179)
        

[![Coverage Status](https://coveralls.io/builds/11118571/badge)](https://coveralls.io/builds/11118571)

Coverage increased (+0.2%) to 56.305% when pulling **96bb6f755f0e6b580ae2ff425852b8b07e3c9111 on vshl:TRUNK-4906-Expanded-Cohort-Details** into **2aed0560d7acc2039c23377a0fa3c89d928083c6 on openmrs:master**.

@suthagar23 please reopen the PR when you are ready and have addressed our comments. take the time to go through https://github.com/openmrs/openmrs-core#developer-guides
and I also suggest you try the tutorials: https://try.github.io and http://gitreal.codeschool.com/
@suthagar23 same as https://github.com/openmrs/openmrs-core/pull/2129
same comments as https://github.com/openmrs/openmrs-core/pull/2129
same comments as https://github.com/openmrs/openmrs-core/pull/2129
@JudeNiroshan can you please make my requested change so I can merge this. thank you!
@abarne please update your PR title + description to our convention. see for example this one https://github.com/openmrs/openmrs-core/pull/2107
@MalshaL, thanks for your PR! By analyzing the history of the files in this pull request, we identified @bmamlin, @teleivo and @lluismf to be potential reviewers.

[![Coverage Status](https://coveralls.io/builds/11138418/badge)](https://coveralls.io/builds/11138418)

Coverage increased (+0.006%) to 56.133% when pulling **cebc97e0f8bee2f6f64240fc4a7dc21fe92e33e6 on MalshaL:TRUNK-5134** into **2aed0560d7acc2039c23377a0fa3c89d928083c6 on openmrs:master**.


![Codacy](https://www.codacy.com/assets/images/favicon.png) Here is an overview of what got changed by this pull request:


```diff

Issues
======
+ Solved 7
- Added 1
           

Complexity increasing per file
==============================
- api/src/main/java/org/openmrs/util/OpenmrsConstants.java  2
         
```


See the complete overview on [Codacy](https://www.codacy.com/app/openmrs/openmrs-core/pullRequest?prid=604610&bid=4438610)
        

[![Coverage Status](https://coveralls.io/builds/11138701/badge)](https://coveralls.io/builds/11138701)

Coverage decreased (-0.04%) to 56.105% when pulling **6aed33f9a6d3099da059fcb7dd6956f2e2bad5a0 on abarne:TRUNK-5033** into **d148b6740412e23cabaee827ad02d8b6a8030b6e on openmrs:master**.


[![Coverage Status](https://coveralls.io/builds/11150162/badge)](https://coveralls.io/builds/11150162)

Coverage increased (+0.1%) to 55.707% when pulling **d963af8b68b86a339a2e5c2bedf4e39255948add on ShruthiPitta:TRUNK-5144** into **5ba724cf1871066cd041054057b052320ff5cb8e on openmrs:2.1.x**.

As I'm looking to implement the REST web service sub-resource for cohort member, I believe I need to have getCohortMembershipByUuid(String) and voidCohortMembership(CohortMembership) in CohortService.
(I can add these myself after this is merged if need be.)
I guess, I doubt though if we've had to do the same for all the other child collections
Merged at 9ae34fc55b87d25c9ce20967cafc926ba8cb0571
@florianschmitt are you still working on this?

[![Coverage Status](https://coveralls.io/builds/11189307/badge)](https://coveralls.io/builds/11189307)

Coverage increased (+0.003%) to 56.262% when pulling **ee03c541ae5bc2bc3ce39be9e6e2f44333e4f634 on wisogetnid:trunk248** into **9d1ddad682ecf4104699d061cf2c4d7e84687c8a on openmrs:master**.


[![Coverage Status](https://coveralls.io/builds/11189685/badge)](https://coveralls.io/builds/11189685)

Coverage decreased (-0.03%) to 56.229% when pulling **4519e35b7c944841223becae8f32366cd179ac22 on wisogetnid:trunk248** into **9d1ddad682ecf4104699d061cf2c4d7e84687c8a on openmrs:master**.

@birgitta410, thanks for your PR! By analyzing the history of the files in this pull request, we identified @bmamlin, @suniala and @dkayiwa to be potential reviewers.

[![Coverage Status](https://coveralls.io/builds/11193508/badge)](https://coveralls.io/builds/11193508)

Coverage decreased (-0.01%) to 56.247% when pulling **b8d1ea53779c668db91596be7619ea43ad6904e7 on birgitta410:TRUNK-5069** into **9d1ddad682ecf4104699d061cf2c4d7e84687c8a on openmrs:master**.


[![Coverage Status](https://coveralls.io/builds/11193638/badge)](https://coveralls.io/builds/11193638)

Coverage remained the same at 56.241% when pulling **3c5ab54ad6ea3624f1afb8373b968a2a632be679 on fruether:TRUNK-5064** into **3efee206ceae5d0dd41d9f3f8138f8895754e91c on openmrs:master**.

@fruether, thanks for your PR! By analyzing the history of the files in this pull request, we identified @bmamlin, @suniala and @teleivo to be potential reviewers.

[![Coverage Status](https://coveralls.io/builds/11194092/badge)](https://coveralls.io/builds/11194092)

Coverage decreased (-0.09%) to 56.281% when pulling **1434a0409ec7e736405f7ac8128497b72c12a62f on fruether:TRUNK-5064** into **7fef9da77042736b2b4dcce7ae340f0861638837 on openmrs:master**.

@fruether, thanks for your PR! By analyzing the history of the files in this pull request, we identified @bmamlin, @suniala and @teleivo to be potential reviewers.

[![Coverage Status](https://coveralls.io/builds/11194539/badge)](https://coveralls.io/builds/11194539)

Coverage decreased (-0.006%) to 56.385% when pulling **0ec45d50ae5e550874cee70f14cf416a1760a19a on fruether:TRUNK-5064** into **7ce201ac7adc5a5e84ad335e3efca8f480fdbe17 on openmrs:master**.


[![Coverage Status](https://coveralls.io/builds/11194558/badge)](https://coveralls.io/builds/11194558)

Coverage decreased (-0.02%) to 56.367% when pulling **0ec45d50ae5e550874cee70f14cf416a1760a19a on fruether:TRUNK-5064** into **7ce201ac7adc5a5e84ad335e3efca8f480fdbe17 on openmrs:master**.

@teleivo, thanks for your PR! By analyzing the history of the files in this pull request, we identified @bmamlin, @suniala and @lluismf to be potential reviewers.

[![Coverage Status](https://coveralls.io/builds/11194744/badge)](https://coveralls.io/builds/11194744)

Coverage decreased (-0.1%) to 56.376% when pulling **a91ee405f14b03614ec89f7123c873f3b469a3a2 on teleivo:TRUNK-5064** into **ecfe01efeef9fe79fefb64cc4d254c4f25010b2b on openmrs:master**.

@birgitta410, thanks for your PR! By analyzing the history of the files in this pull request, we identified @bmamlin, @suniala and @dkayiwa to be potential reviewers.
@fruether, thanks for your PR! By analyzing the history of the files in this pull request, we identified @bmamlin, @teleivo and @MalshaL to be potential reviewers.

[![Coverage Status](https://coveralls.io/builds/11195031/badge)](https://coveralls.io/builds/11195031)

Coverage increased (+0.003%) to 56.41% when pulling **bd32c99aa62fdfc315c2d0d9c6822a53c9f27ea8 on birgitta410:TRUNK-5069-2** into **c2f7c0d594e513b546f39f1e7e6bcfa82b6a3c6d on openmrs:master**.


![Codacy](https://www.codacy.com/assets/images/favicon.png) Here is an overview of what got changed by this pull request:


```diff

Issues
======
- Added 6
           

Complexity increasing per file
==============================
- api/src/main/java/org/openmrs/api/impl/PersonServiceImpl.java  1
         
```


See the complete overview on [Codacy](https://www.codacy.com/app/openmrs/openmrs-core/pullRequest?prid=618969&bid=4476735)
        

[![Coverage Status](https://coveralls.io/builds/11195046/badge)](https://coveralls.io/builds/11195046)

Coverage decreased (-0.04%) to 56.365% when pulling **d2160559c6feaf878723ba3aee0b6edfcc8f1bd3 on fruether:TRUNK-5064** into **c2f7c0d594e513b546f39f1e7e6bcfa82b6a3c6d on openmrs:master**.


[![Coverage Status](https://coveralls.io/builds/11195061/badge)](https://coveralls.io/builds/11195061)

Coverage increased (+0.1%) to 56.503% when pulling **d2160559c6feaf878723ba3aee0b6edfcc8f1bd3 on fruether:TRUNK-5064** into **c2f7c0d594e513b546f39f1e7e6bcfa82b6a3c6d on openmrs:master**.

@fruether, thanks for your PR! By analyzing the history of the files in this pull request, we identified @bmamlin, @suniala and @teleivo to be potential reviewers.

[![Coverage Status](https://coveralls.io/builds/11195464/badge)](https://coveralls.io/builds/11195464)

Coverage increased (+0.006%) to 56.413% when pulling **a11702bc405f0c6b821428e1db362808f0221593 on fruether:test** into **c2f7c0d594e513b546f39f1e7e6bcfa82b6a3c6d on openmrs:master**.


[![Coverage Status](https://coveralls.io/builds/11195584/badge)](https://coveralls.io/builds/11195584)

Coverage increased (+0.01%) to 56.399% when pulling **1d49557dabf0464b8984df4cdc0d07247c89731b on fruether:TRUNK-5064** into **40276e1f83aa02270dbb654b8ba78951d1a24689 on openmrs:master**.


[![Coverage Status](https://coveralls.io/builds/11195588/badge)](https://coveralls.io/builds/11195588)

Changes Unknown when pulling **9ce5e373fbe59df59a1bd7340f4be8bf4aaba276 on fruether:TRUNK-5064** into ** on openmrs:master**.


![Codacy](https://www.codacy.com/assets/images/favicon.png) Here is an overview of what got changed by this pull request:


```diff

Issues
======
- Added 5
           

Complexity increasing per file
==============================
- api/src/main/java/org/openmrs/api/impl/PersonServiceImpl.java  1
         
```


See the complete overview on [Codacy](https://www.codacy.com/app/openmrs/openmrs-core/pullRequest?prid=619014&bid=4476813)
        

[![Coverage Status](https://coveralls.io/builds/11195629/badge)](https://coveralls.io/builds/11195629)

Coverage decreased (-0.02%) to 56.362% when pulling **fcdef64b636c1473159d8dab7c2149dcef090535 on fruether:TRUNK-5064** into **5f7588610e3abb8aee9b5ca0aec4be40ce96d7b6 on openmrs:master**.

@birgitta410, thanks for your PR! By analyzing the history of the files in this pull request, we identified @bmamlin, @teleivo and @suniala to be potential reviewers.

![Codacy](https://www.codacy.com/assets/images/favicon.png) Here is an overview of what got changed by this pull request:


```diff

Issues
======
- Added 19
           

Complexity decreasing per file
==============================
+ api/src/main/java/org/openmrs/api/impl/PatientServiceImpl.java  -5
         
```


See the complete overview on [Codacy](https://www.codacy.com/app/openmrs/openmrs-core/pullRequest?prid=619027&bid=4476834)
        

[![Coverage Status](https://coveralls.io/builds/11195699/badge)](https://coveralls.io/builds/11195699)

Coverage increased (+0.02%) to 56.402% when pulling **fcdef64b636c1473159d8dab7c2149dcef090535 on fruether:TRUNK-5064** into **5f7588610e3abb8aee9b5ca0aec4be40ce96d7b6 on openmrs:master**.


[![Coverage Status](https://coveralls.io/builds/11195726/badge)](https://coveralls.io/builds/11195726)

Coverage increased (+0.01%) to 56.396% when pulling **5964330d4326da889448883d55413285c0fc267d on birgitta410:TRUNK-5069-3** into **5f7588610e3abb8aee9b5ca0aec4be40ce96d7b6 on openmrs:master**.

@teleivo, thanks for your PR! By analyzing the history of the files in this pull request, we identified @bmamlin, @Ankitkumar94 and @MalshaL to be potential reviewers.

![Codacy](https://www.codacy.com/assets/images/favicon.png) Here is an overview of what got changed by this pull request:


```diff

Issues
======
+ Solved 1
           
```


See the complete overview on [Codacy](https://www.codacy.com/app/openmrs/openmrs-core/pullRequest?prid=619041&bid=4476852)
        

[![Coverage Status](https://coveralls.io/builds/11195867/badge)](https://coveralls.io/builds/11195867)

Coverage decreased (-0.03%) to 56.371% when pulling **e8745aa482e83749526d640162d2172355439ee0 on teleivo:TRUNK-5117** into **003ef8cf142679fb584a7d04faed5dfc29a2c958 on openmrs:master**.

@teleivo, thanks for your PR! By analyzing the history of the files in this pull request, we identified @bmamlin, @MalshaL and @Ankitkumar94 to be potential reviewers.
@meinsen, thanks for your PR! By analyzing the history of the files in this pull request, we identified @bmamlin, @suniala and @dkayiwa to be potential reviewers.

![Codacy](https://www.codacy.com/assets/images/favicon.png) Here is an overview of what got changed by this pull request:


```diff

Complexity decreasing per file
==============================
+ api/src/main/java/org/openmrs/api/impl/PersonServiceImpl.java  -1
         
```


See the complete overview on [Codacy](https://www.codacy.com/app/openmrs/openmrs-core/pullRequest?prid=619054&bid=4476884)
        

[![Coverage Status](https://coveralls.io/builds/11196002/badge)](https://coveralls.io/builds/11196002)

Coverage increased (+0.05%) to 56.433% when pulling **f2e8d0e13458c4a037805fc3ea9a68dc6076a498 on teleivo:TRUNK-5117** into **9b85c7a32eddf9a761a87883823c91ae358d3dd0 on openmrs:master**.


[![Coverage Status](https://coveralls.io/builds/11196011/badge)](https://coveralls.io/builds/11196011)

Coverage increased (+0.1%) to 56.522% when pulling **8d79f634e56214f35633d5483900bf9d0740f208 on meinsen:TRUNK-4050** into **9b85c7a32eddf9a761a87883823c91ae358d3dd0 on openmrs:master**.

@teleivo, thanks for your PR! By analyzing the history of the files in this pull request, we identified @bmamlin, @suniala and @lluismf to be potential reviewers.

[![Coverage Status](https://coveralls.io/builds/11196198/badge)](https://coveralls.io/builds/11196198)

Changes Unknown when pulling **643fe740eb23294e256693e78e8511ee74d4df0f on teleivo:TRUNK-5064** into ** on openmrs:master**.

@birgitta410, thanks for your PR! By analyzing the history of the files in this pull request, we identified @dkayiwa, @bmamlin and @suniala to be potential reviewers.

[![Coverage Status](https://coveralls.io/builds/11196278/badge)](https://coveralls.io/builds/11196278)

Changes Unknown when pulling **8b6749bed48e4cd682710d06e4ff1468add55da2 on birgitta410:TRUNK-5069-4** into ** on openmrs:master**.


[![Coverage Status](https://coveralls.io/builds/11196348/badge)](https://coveralls.io/builds/11196348)

Coverage increased (+0.03%) to 56.43% when pulling **15b0f7ae56e8f5856f745c1c2780b9cff64ec0ee on birgitta410:TRUNK-5069-4** into **c0514cca01d29f8f92cfaee238847a709a0fd6f3 on openmrs:master**.


![Codacy](https://www.codacy.com/assets/images/favicon.png) Here is an overview of what got changed by this pull request:


```diff

Issues
======
+ Solved 2
           
```


See the complete overview on [Codacy](https://www.codacy.com/app/openmrs/openmrs-core/pullRequest?prid=619055&bid=4476885)
        

[![Coverage Status](https://coveralls.io/builds/11197651/badge)](https://coveralls.io/builds/11197651)

Coverage increased (+0.05%) to 56.428% when pulling **9654a690509a2840d1f86b39a69444c6c6501f21 on meinsen:TRUNK-4050** into **9b85c7a32eddf9a761a87883823c91ae358d3dd0 on openmrs:master**.

@wisogetnid, thanks for your PR! By analyzing the history of the files in this pull request, we identified @bmamlin, @lluismf and @suniala to be potential reviewers.
Thanks for the useful comments, @teleivo!
Here's the new pull-request.
https://github.com/openmrs/openmrs-core/pull/2152
...it covers a bit more. Please let me know if I should keep the scope on only this class. =o)

[![Coverage Status](https://coveralls.io/builds/11201573/badge)](https://coveralls.io/builds/11201573)

Coverage increased (+0.03%) to 56.44% when pulling **9b5b6527c91fbdb5aab322662a3aec859454684c on wisogetnid:trunk-248** into **e09fe8da30de6f004cb18d72d9284276c360c0bd on openmrs:master**.

Ah crap...haven't read https://wiki.openmrs.org/display/docs/Pull+Request+Tips to the end...
Please excuse the second PR for the same ticket.
@meinsen you included a bunch of commits which are not yours, please rebase your work on the latest master

[![Coverage Status](https://coveralls.io/builds/11202245/badge)](https://coveralls.io/builds/11202245)

Coverage increased (+0.02%) to 56.431% when pulling **a6845e16b100399c2202fdbb5254cca7de218d15 on wisogetnid:trunk-248** into **e09fe8da30de6f004cb18d72d9284276c360c0bd on openmrs:master**.

@teleivo, thanks for your PR! By analyzing the history of the files in this pull request, we identified @bmamlin, @suniala and @lluismf to be potential reviewers.

[![Coverage Status](https://coveralls.io/builds/11202324/badge)](https://coveralls.io/builds/11202324)

Coverage decreased (-0.004%) to 56.404% when pulling **15ebe4d0def5425a77fdf4d98e7aea1460ce1241 on wisogetnid:trunk-248** into **e09fe8da30de6f004cb18d72d9284276c360c0bd on openmrs:master**.


[![Coverage Status](https://coveralls.io/builds/11202366/badge)](https://coveralls.io/builds/11202366)

Coverage decreased (-0.02%) to 56.39% when pulling **b94b9869ad2702fe40cd518ebdf7c741a8f8248f on teleivo:TRUNK-5064** into **e09fe8da30de6f004cb18d72d9284276c360c0bd on openmrs:master**.


[![Coverage Status](https://coveralls.io/builds/11202431/badge)](https://coveralls.io/builds/11202431)

Coverage decreased (-0.003%) to 56.405% when pulling **b94b9869ad2702fe40cd518ebdf7c741a8f8248f on teleivo:TRUNK-5064** into **e09fe8da30de6f004cb18d72d9284276c360c0bd on openmrs:master**.


[![Coverage Status](https://coveralls.io/builds/11203171/badge)](https://coveralls.io/builds/11203171)

Coverage decreased (-0.03%) to 56.407% when pulling **05049e010880b1256b82fed256bf513fc147140c on wisogetnid:trunk-248** into **adbb1a5703490087d57bd51d611963fd4739fd40 on openmrs:master**.


[![Coverage Status](https://coveralls.io/builds/11203172/badge)](https://coveralls.io/builds/11203172)

Coverage decreased (-0.03%) to 56.407% when pulling **05049e010880b1256b82fed256bf513fc147140c on wisogetnid:trunk-248** into **adbb1a5703490087d57bd51d611963fd4739fd40 on openmrs:master**.

@teleivo, thanks for your PR! By analyzing the history of the files in this pull request, we identified @bmamlin, @suniala and @lluismf to be potential reviewers.

[![Coverage Status](https://coveralls.io/builds/11206092/badge)](https://coveralls.io/builds/11206092)

Coverage increased (+0.01%) to 56.448% when pulling **30900b4e1368486cf5772a47957297100895142f on teleivo:TRUNK-5064** into **adbb1a5703490087d57bd51d611963fd4739fd40 on openmrs:master**.

@teleivo, thanks for your PR! By analyzing the history of the files in this pull request, we identified @bmamlin and @lluismf to be potential reviewers.

[![Coverage Status](https://coveralls.io/builds/11206407/badge)](https://coveralls.io/builds/11206407)

Coverage increased (+0.02%) to 56.485% when pulling **66d0d38c3df24354fc5d9680e7f690876c5ad325 on teleivo:usereditor-test** into **68e6aada7cc8ff5be16786be2ee6bd356b8e80fb on openmrs:master**.

@MalshaL are you still on this? would like to merge and not keep the PR open for so long
@teleivo, thanks for your PR! By analyzing the history of the files in this pull request, we identified @bmamlin and @lluismf to be potential reviewers.

[![Coverage Status](https://coveralls.io/builds/11206962/badge)](https://coveralls.io/builds/11206962)

Coverage increased (+0.02%) to 56.507% when pulling **0a7af1f17927b2880a3d0f49b78001ac9bb19f79 on teleivo:propertyeditor** into **2d16edd4b28c09ba7d6790e875df3b955d9a6e5e on openmrs:master**.

There is merge conflicts, @jtatia are you still working on this?
There is some merge conflicts in this PR, @yvsssantosh are you working on this?
@teleivo, thanks for your PR! By analyzing the history of the files in this pull request, we identified @bmamlin and @lluismf to be potential reviewers.

[![Coverage Status](https://coveralls.io/builds/11219729/badge)](https://coveralls.io/builds/11219729)

Coverage increased (+0.1%) to 56.74% when pulling **5c1ca751345ea4f09f52a95c5dad7b27594bcc04 on teleivo:TRUNK-5139** into **3814c44ac88784c4121b96cd903b37fe1fa7a4d8 on openmrs:master**.


[![Coverage Status](https://coveralls.io/builds/11219772/badge)](https://coveralls.io/builds/11219772)

Coverage decreased (-0.08%) to 56.54% when pulling **39a9aa1fa7618cd2ddc26a2bf90b007144da454a on wisogetnid:trunk-248** into **3814c44ac88784c4121b96cd903b37fe1fa7a4d8 on openmrs:master**.

@teleivo, thanks for your PR! By analyzing the history of the files in this pull request, we identified @bmamlin, @lluismf and @suniala to be potential reviewers.

[![Coverage Status](https://coveralls.io/builds/11225675/badge)](https://coveralls.io/builds/11225675)

Coverage increased (+0.2%) to 56.791% when pulling **f766133495c84912b7857c5ed2bf300fc7715cd8 on teleivo:TRUNK-5139** into **b99cdc85526c08e7f6da3f4aab5ae5666f184e63 on openmrs:master**.

@teleivo, thanks for your PR! By analyzing the history of the files in this pull request, we identified @lluismf and @bmamlin to be potential reviewers.

[![Coverage Status](https://coveralls.io/builds/11236895/badge)](https://coveralls.io/builds/11236895)

Changes Unknown when pulling **e5ea00d332582b76935dcf05adf5ffe24126c2a7 on teleivo:TRUNK-5139** into ** on openmrs:master**.

@teleivo, thanks for your PR! By analyzing the history of the files in this pull request, we identified @bmamlin and @lluismf to be potential reviewers.
@Ankitkumar94, thanks for your PR! By analyzing the history of the files in this pull request, we identified @bmamlin, @teleivo and @dkayiwa to be potential reviewers.

[![Coverage Status](https://coveralls.io/builds/11237377/badge)](https://coveralls.io/builds/11237377)

Coverage increased (+0.1%) to 56.995% when pulling **c631fe9d7ba909b35e0d095746d5d0bc2724af29 on teleivo:TRUNK-5139** into **7ccd5b39e749525f520fa01beb199062773efd58 on openmrs:master**.

@Ankitkumar94, thanks for your PR! By analyzing the history of the files in this pull request, we identified @bmamlin, @teleivo and @jtatia to be potential reviewers.

![Codacy](https://www.codacy.com/assets/images/favicon.png) Here is an overview of what got changed by this pull request:


```diff

Complexity increasing per file
==============================
- api/src/main/java/org/openmrs/api/impl/VisitServiceImpl.java  3
         
```


See the complete overview on [Codacy](https://www.codacy.com/app/openmrs/openmrs-core/pullRequest?prid=627366&bid=4499624)
        

[![Coverage Status](https://coveralls.io/builds/11273556/badge)](https://coveralls.io/builds/11273556)

Coverage increased (+0.01%) to 56.988% when pulling **29ad81d39ed89afc1a929e351c3f323c43da970c on Ankitkumar94:master** into **60b20987eefeb7085ff21de1f2d62f4624b232b1 on openmrs:master**.

@Ankitkumar94 thanks for your help! unfortunately you started with the last issue in a series of refactorings

please do the issues in order, they depend on each other as described:
https://issues.openmrs.org/browse/TRUNK-5049


@Ankitkumar94 just create a PR for the first 2 issues and rebase this one on top of them after I merged them. thanks a lot :)
@cioan, thanks for your PR! By analyzing the history of the files in this pull request, we identified @chethandeshpande, @bmamlin and @wluyima to be potential reviewers.
@teleivo  Can i create a PR having 3 commits each of them corresponding to the issues in this series of refractorings ? 
@Ankitkumar94, thanks for your PR! By analyzing the history of the files in this pull request, we identified @bmamlin, @teleivo and @jtatia to be potential reviewers.

[![Coverage Status](https://coveralls.io/builds/11277071/badge)](https://coveralls.io/builds/11277071)

Coverage increased (+0.1%) to 57.077% when pulling **013090d039b658884af0314d88a12729183ca2d2 on Ankitkumar94:TRUNK-5050** into **33f09c22718fce5e27e2aa1bd1ef406726e94e8f on openmrs:master**.

@Ankitkumar94, thanks for your PR! By analyzing the history of the files in this pull request, we identified @bmamlin, @teleivo and @jtatia to be potential reviewers.

![Codacy](https://www.codacy.com/assets/images/favicon.png) Here is an overview of what got changed by this pull request:


```diff

Issues
======
- Added 2
           

Complexity increasing per file
==============================
- api/src/main/java/org/openmrs/api/impl/VisitServiceImpl.java  1
         
```


See the complete overview on [Codacy](https://www.codacy.com/app/openmrs/openmrs-core/pullRequest?prid=627684&bid=4500393)
        

[![Coverage Status](https://coveralls.io/builds/11278464/badge)](https://coveralls.io/builds/11278464)

Coverage increased (+0.03%) to 56.979% when pulling **aff882f03240fe3dbe771e71e2ab2681e274d2af on Ankitkumar94:TRUNK-5051** into **33f09c22718fce5e27e2aa1bd1ef406726e94e8f on openmrs:master**.

@Ankitkumar94, thanks for your PR! By analyzing the history of the files in this pull request, we identified @bmamlin, @teleivo and @jtatia to be potential reviewers.

[![Coverage Status](https://coveralls.io/builds/11278976/badge)](https://coveralls.io/builds/11278976)

Coverage increased (+0.005%) to 56.951% when pulling **94114e75085a80a20bbb0c938025f837d42e055f on Ankitkumar94:TRUNK-5051** into **33f09c22718fce5e27e2aa1bd1ef406726e94e8f on openmrs:master**.


![Codacy](https://www.codacy.com/assets/images/favicon.png) Here is an overview of what got changed by this pull request:


```diff

Complexity increasing per file
==============================
- api/src/main/java/org/openmrs/api/impl/VisitServiceImpl.java  1
         
```


See the complete overview on [Codacy](https://www.codacy.com/app/openmrs/openmrs-core/pullRequest?prid=627738&bid=4500531)
        
@Ankitkumar94, thanks for your PR! By analyzing the history of the files in this pull request, we identified @bmamlin, @teleivo and @jtatia to be potential reviewers.

![Codacy](https://www.codacy.com/assets/images/favicon.png) Here is an overview of what got changed by this pull request:


```diff

Complexity increasing per file
==============================
- api/src/main/java/org/openmrs/api/impl/VisitServiceImpl.java  3
         
```


See the complete overview on [Codacy](https://www.codacy.com/app/openmrs/openmrs-core/pullRequest?prid=627792&bid=4500694)
        

[![Coverage Status](https://coveralls.io/builds/11279430/badge)](https://coveralls.io/builds/11279430)

Coverage increased (+0.03%) to 56.977% when pulling **c986ffdfc1600032bb4cc2e1d07e6b99c51d2686 on Ankitkumar94:TRUNK-5052** into **33f09c22718fce5e27e2aa1bd1ef406726e94e8f on openmrs:master**.

@Ankitkumar94 dont create all 3 PRs at once, they depend on each other. we have to merge the first one for TRUNK-5050, then you can create the second TRUNK-5051, then TRUNK-5052
@Ankitkumar94 dont create all 3 PRs at once, they depend on each other. we have to merge the first one for TRUNK-5050, then you can create the second TRUNK-5051, then TRUNK-5052
@Ankitkumar94 also please fill in the issue number in the PR template when you create a PR, this lets reviewers directly navigate to what you are working on. we are just a few, please help us out :)
@meinsen are you still working on this?
@MalshaL hope you are well! can you please tell us if you are still going to work on this, we need a few simple changes from you to get this merged. having to recheck with contributors on their PRs over and over again takes time of the few reviewers. please respond. thanks a lot!
@wisogetnid awesome, thanks!! can you please please :) if you find some time add more tests to the UserServiceTest, there are still a few things uncovered. Thank you very much for your help!

[![Coverage Status](https://coveralls.io/builds/11300693/badge)](https://coveralls.io/builds/11300693)

Changes Unknown when pulling **27db523b9444bfa490d3b9e26701907625e207d8 on teleivo:TRUNK-5139** into ** on openmrs:master**.


[![Coverage Status](https://coveralls.io/builds/11300731/badge)](https://coveralls.io/builds/11300731)

Coverage increased (+0.09%) to 57.1% when pulling **e9d460f52e6e93cc5b52d93622f5a289a7687f3a on teleivo:TRUNK-5139** into **4c73247fa509245fe312957974222c256813f8cf on openmrs:master**.

@teleivo, thanks for your PR! By analyzing the history of the files in this pull request, we identified @bmamlin and @suniala to be potential reviewers.

![Codacy](https://www.codacy.com/assets/images/favicon.png) Here is an overview of what got changed by this pull request:


```diff

Complexity decreasing per file
==============================
+ api/src/main/java/org/openmrs/propertyeditor/PersonEditor.java  -1
+ api/src/main/java/org/openmrs/propertyeditor/ConceptReferenceTermEditor.java  -1
+ api/src/main/java/org/openmrs/propertyeditor/ConceptMapTypeEditor.java  -1
         
```


See the complete overview on [Codacy](https://www.codacy.com/app/openmrs/openmrs-core/pullRequest?prid=629377&bid=4504711)
        

[![Coverage Status](https://coveralls.io/builds/11300760/badge)](https://coveralls.io/builds/11300760)

Coverage increased (+0.02%) to 57.118% when pulling **6d6e4a568901a3606a7e1538d18fe48b5eb77b06 on teleivo:TRUNK-5158** into **88bbb68b729f59b1ee67a4411b7ef5a971a06ed5 on openmrs:master**.

@Ankitkumar94, thanks for your PR! By analyzing the history of the files in this pull request, we identified @bmamlin, @teleivo and @jtatia to be potential reviewers.

[![Coverage Status](https://coveralls.io/builds/11301823/badge)](https://coveralls.io/builds/11301823)

Coverage decreased (-0.02%) to 57.104% when pulling **3dd6444e87121f0105222fd71e33f649f8accb63 on Ankitkumar94:TRUNK-5050** into **acf93745f5ce982d762974b5a0138feed1020e39 on openmrs:master**.

@Ankitkumar94 awesome! please at the paste in the issue number in the link provided in the PR template. thanks
@Ankitkumar94, thanks for your PR! By analyzing the history of the files in this pull request, we identified @bmamlin, @teleivo and @jtatia to be potential reviewers.

![Codacy](https://www.codacy.com/assets/images/favicon.png) Here is an overview of what got changed by this pull request:


```diff

Complexity increasing per file
==============================
- api/src/main/java/org/openmrs/api/impl/VisitServiceImpl.java  1
         
```


See the complete overview on [Codacy](https://www.codacy.com/app/openmrs/openmrs-core/pullRequest?prid=629426&bid=4504897)
        

[![Coverage Status](https://coveralls.io/builds/11302096/badge)](https://coveralls.io/builds/11302096)

Changes Unknown when pulling **bcc3b5492c07c41c93b6a047335c384ccc76ad40 on Ankitkumar94:TRUNK-5051** into ** on openmrs:master**.

thanks @Ankitkumar94 !
@Ankitkumar94, thanks for your PR! By analyzing the history of the files in this pull request, we identified @bmamlin, @teleivo and @jtatia to be potential reviewers.

![Codacy](https://www.codacy.com/assets/images/favicon.png) Here is an overview of what got changed by this pull request:


```diff

Complexity increasing per file
==============================
- api/src/main/java/org/openmrs/api/impl/VisitServiceImpl.java  2
         
```


See the complete overview on [Codacy](https://www.codacy.com/app/openmrs/openmrs-core/pullRequest?prid=629492&bid=4505037)
        

[![Coverage Status](https://coveralls.io/builds/11303281/badge)](https://coveralls.io/builds/11303281)

Coverage decreased (-0.02%) to 57.111% when pulling **f8f9f5a90de82ff3e2d9b349436f968d62d35e6a on Ankitkumar94:TRUNK-5052** into **8ad1f5b89579529b4086f1ae2d2ed63da36f830f on openmrs:master**.

@meinsen, thanks for your PR! By analyzing the history of the files in this pull request, we identified @bmamlin, @suniala and @dkayiwa to be potential reviewers.

[![Coverage Status](https://coveralls.io/builds/11305006/badge)](https://coveralls.io/builds/11305006)

Coverage decreased (-0.002%) to 57.128% when pulling **98be7080e49b477d54fc22ed286f853235d4f1c6 on meinsen:TRUNK-4050** into **8ad1f5b89579529b4086f1ae2d2ed63da36f830f on openmrs:master**.

@teleivo my sincere apologies for not being able to work on this due to an unavoidable circumstance. :( I will make the necessary changes and commit as soon as possible. 

[![Coverage Status](https://coveralls.io/builds/11307611/badge)](https://coveralls.io/builds/11307611)

Coverage decreased (-0.03%) to 57.097% when pulling **60d47dcee4e2ca130382b759a190e67014382059 on meinsen:TRUNK-4050** into **8ad1f5b89579529b4086f1ae2d2ed63da36f830f on openmrs:master**.

@Ankitkumar94, thanks for your PR! By analyzing the history of the files in this pull request, we identified @bmamlin, @teleivo and @jtatia to be potential reviewers.

![Codacy](https://www.codacy.com/assets/images/favicon.png) Here is an overview of what got changed by this pull request:


```diff

Complexity increasing per file
==============================
- api/src/main/java/org/openmrs/api/impl/VisitServiceImpl.java  2
         
```


See the complete overview on [Codacy](https://www.codacy.com/app/openmrs/openmrs-core/pullRequest?prid=629839&bid=4505841)
        

[![Coverage Status](https://coveralls.io/builds/11308888/badge)](https://coveralls.io/builds/11308888)

Coverage increased (+0.08%) to 57.208% when pulling **2c427a65637b4d4fa26178c094d2ec628db587ef on Ankitkumar94:TRUNK-5052** into **8ad1f5b89579529b4086f1ae2d2ed63da36f830f on openmrs:master**.

@Ankitkumar94 thanks!
just some comments:
* please add the issue number in the link in the PR template! so reviewers can quickly navigate to the jira issue
* no need to close a PR if you get review comments and adapted your commit, just do `git push --force` this will update the PR
@meinsen closing this one since you opened another one. please do this yourself if you wish to create a new PR for the same issue! if you want to update a PR there is no need to close/open a new one, just update your local commit and `git push --force` to update the PR
@JudeNiroshan please update your PR, or close it and free the issue so other people can work on it!!!
@teleivo, thanks for your PR! By analyzing the history of the files in this pull request, we identified @bmamlin, @chethandeshpande and @lluismf to be potential reviewers.
@teleivo thanks for the suggestions !!
Next time, for sure !!  :)

![Codacy](https://www.codacy.com/assets/images/favicon.png) Here is an overview of what got changed by this pull request:


```diff

Complexity decreasing per file
==============================
+ api/src/main/java/org/openmrs/propertyeditor/ConceptAttributeTypeEditor.java  -1
+ api/src/main/java/org/openmrs/propertyeditor/LocationTagEditor.java  -1
+ api/src/main/java/org/openmrs/propertyeditor/LocationAttributeTypeEditor.java  -1
         
```


See the complete overview on [Codacy](https://www.codacy.com/app/openmrs/openmrs-core/pullRequest?prid=629861&bid=4505876)
        

[![Coverage Status](https://coveralls.io/builds/11309207/badge)](https://coveralls.io/builds/11309207)

Coverage decreased (-0.1%) to 57.103% when pulling **fd9cfa9a9e4358d82c60218313d51aecb054fd28 on teleivo:TRUNK-5159** into **311b89196dfd11f73b117b6c7a1292a2e8f186c1 on openmrs:master**.

@teleivo, thanks for your PR! By analyzing the history of the files in this pull request, we identified @bmamlin, @suniala and @lluismf to be potential reviewers.

[![Coverage Status](https://coveralls.io/builds/11309413/badge)](https://coveralls.io/builds/11309413)

Coverage decreased (-0.09%) to 57.118% when pulling **fc5a91b5378dd62ba4447a79381dc2dc2c8a26bd on teleivo:TRUNK-5155** into **7eafde62f5438c2632b7741a0f1ea01ba9084e29 on openmrs:master**.


![Codacy](https://www.codacy.com/assets/images/favicon.png) Here is an overview of what got changed by this pull request:


```diff

Complexity increasing per file
==============================
- api/src/main/java/org/openmrs/api/impl/ProgramWorkflowServiceImpl.java  1
- api/src/main/java/org/openmrs/api/db/hibernate/HibernateProgramWorkflowDAO.java  1
         
```


See the complete overview on [Codacy](https://www.codacy.com/app/openmrs/openmrs-core/pullRequest?prid=629882&bid=4505922)
        

[![Coverage Status](https://coveralls.io/builds/11309428/badge)](https://coveralls.io/builds/11309428)

Coverage decreased (-0.1%) to 57.112% when pulling **bd101b57c69def40ebf3b83310eaf55e74e997c7 on teleivo:TRUNK-5155** into **7eafde62f5438c2632b7741a0f1ea01ba9084e29 on openmrs:master**.


[![Coverage Status](https://coveralls.io/builds/11309583/badge)](https://coveralls.io/builds/11309583)

Coverage decreased (-0.1%) to 57.112% when pulling **bd101b57c69def40ebf3b83310eaf55e74e997c7 on teleivo:TRUNK-5155** into **7eafde62f5438c2632b7741a0f1ea01ba9084e29 on openmrs:master**.

@teleivo, thanks for your PR! By analyzing the history of the files in this pull request, we identified @bmamlin, @suniala and @lluismf to be potential reviewers.

![Codacy](https://www.codacy.com/assets/images/favicon.png) Here is an overview of what got changed by this pull request:


```diff

Complexity increasing per file
==============================
- api/src/main/java/org/openmrs/api/impl/ProgramWorkflowServiceImpl.java  1
- api/src/main/java/org/openmrs/api/db/hibernate/HibernateProgramWorkflowDAO.java  1
         
```


See the complete overview on [Codacy](https://www.codacy.com/app/openmrs/openmrs-core/pullRequest?prid=629892&bid=4505937)
        

[![Coverage Status](https://coveralls.io/builds/11309654/badge)](https://coveralls.io/builds/11309654)

Changes Unknown when pulling **415974dc7618f33a3b1af815e946689d136c3568 on teleivo:TRUNK-5155-real** into ** on openmrs:master**.

@teleivo, thanks for your PR! By analyzing the history of the files in this pull request, we identified @bmamlin, @dkayiwa and @lluismf to be potential reviewers.

[![Coverage Status](https://coveralls.io/builds/11309777/badge)](https://coveralls.io/builds/11309777)

Coverage increased (+0.03%) to 57.142% when pulling **eba7a0a14e2ac86c5e55ab85b5f139ab972066b0 on teleivo:TRUNK-5154** into **084dde5112e327d75e44494fc182710a434a2e13 on openmrs:master**.

@teleivo, thanks for your PR! By analyzing the history of the files in this pull request, we identified @bmamlin, @lluismf and @suniala to be potential reviewers.

[![Coverage Status](https://coveralls.io/builds/11309822/badge)](https://coveralls.io/builds/11309822)

Coverage increased (+0.04%) to 57.204% when pulling **c1d26c728149614a7c1dce1db7557308a16da46c on teleivo:TRUNK-5157** into **58bac16a8152307887741c1b2298c3d6581f15a1 on openmrs:master**.

@teleivo apologies for late reply. I can see there are 2 commits included in this PR which I never intended. I think it was by mistake. How do I remove the first commit in this PR? 

TRUNK-5034 Merge collapsable if statements


@cioan did you just forget assigning yourself to this ticket?
@yvsssantosh ping me to reopen this when you resume working on it.
@jtatia ping me to reopen when you resume working on this.
@florianschmitt ping me to reopen when you resume working on this.
@JudeNiroshan did you get a chance to look at this? https://wiki.openmrs.org/display/docs/Pull+Request+Tips
@MalshaL did you see the merge conflicts on this? 😊 
@mseaton : Can you please merge this change? Thanks.

[![Coverage Status](https://coveralls.io/builds/11332028/badge)](https://coveralls.io/builds/11332028)

Coverage increased (+0.2%) to 57.285% when pulling **485f2136b9dc510919e60d649459c58fd9eb8843 on meinsen:TRUNK-4050** into **8ad1f5b89579529b4086f1ae2d2ed63da36f830f on openmrs:master**.


![Codacy](https://www.codacy.com/assets/images/favicon.png) Here is an overview of what got changed by this pull request:


```diff

Issues
======
+ Solved 9
- Added 2
           
```


See the complete overview on [Codacy](https://www.codacy.com/app/openmrs/openmrs-core/pullRequest?prid=629632&bid=4505322)
        

[![Coverage Status](https://coveralls.io/builds/11332170/badge)](https://coveralls.io/builds/11332170)

Coverage increased (+0.04%) to 57.165% when pulling **485f2136b9dc510919e60d649459c58fd9eb8843 on meinsen:TRUNK-4050** into **8ad1f5b89579529b4086f1ae2d2ed63da36f830f on openmrs:master**.

@meinsen, thanks for your PR! By analyzing the history of the files in this pull request, we identified @bmamlin, @suniala and @dkayiwa to be potential reviewers.

![Codacy](https://www.codacy.com/assets/images/favicon.png) Here is an overview of what got changed by this pull request:


```diff

Issues
======
+ Solved 9
- Added 2
           
```


See the complete overview on [Codacy](https://www.codacy.com/app/openmrs/openmrs-core/pullRequest?prid=632068&bid=4512323)
        

[![Coverage Status](https://coveralls.io/builds/11337038/badge)](https://coveralls.io/builds/11337038)

Coverage increased (+0.1%) to 57.279% when pulling **13971e02535b42bd70020e1e58857c81c8cb3742 on meinsen:TRUNK-5040** into **7606d3e69fbf433a9ccb91241408b6124d826610 on openmrs:master**.

@meinsen, thanks for your PR! By analyzing the history of the files in this pull request, we identified @bmamlin and @teleivo to be potential reviewers.

[![Coverage Status](https://coveralls.io/builds/11338953/badge)](https://coveralls.io/builds/11338953)

Coverage decreased (-0.0004%) to 57.17% when pulling **d4cb6ab7b44e7264d7e40ad942f62221a9d55b85 on meinsen:TRUNK-4987** into **7606d3e69fbf433a9ccb91241408b6124d826610 on openmrs:master**.

Did you build the module with `mvn clean install` before you committed the code? Because I see many code format changes
I thought this is a RESTWS ticket and not openmrs core, please re-read the ticket description https://issues.openmrs.org/browse/RESTWS-658
@abarne, thanks for your PR! By analyzing the history of the files in this pull request, we identified @bmamlin, @teleivo and @dkayiwa to be potential reviewers.

[![Coverage Status](https://coveralls.io/builds/11345186/badge)](https://coveralls.io/builds/11345186)

Coverage increased (+0.008%) to 57.178% when pulling **29124473d52625abfa4ce2476a8a4528c80ac8fc on abarne:TRUNK-5034** into **7606d3e69fbf433a9ccb91241408b6124d826610 on openmrs:master**.


[![Coverage Status](https://coveralls.io/builds/11345291/badge)](https://coveralls.io/builds/11345291)

Coverage decreased (-0.008%) to 57.162% when pulling **eb224e9d3998621f37daf8a204f1371b7f3cae31 on abarne:TRUNK-5034** into **7606d3e69fbf433a9ccb91241408b6124d826610 on openmrs:master**.


[![Coverage Status](https://coveralls.io/builds/11345426/badge)](https://coveralls.io/builds/11345426)

Coverage increased (+0.03%) to 57.203% when pulling **85517a0837f1eabbb033ebe9a14be18b497b18ef on abarne:TRUNK-5034** into **7606d3e69fbf433a9ccb91241408b6124d826610 on openmrs:master**.


[![Coverage Status](https://coveralls.io/builds/11345639/badge)](https://coveralls.io/builds/11345639)

Coverage increased (+0.006%) to 57.176% when pulling **3123327765e5b5e4437a4a2cfcbcb90440b7f463 on abarne:TRUNK-5034** into **7606d3e69fbf433a9ccb91241408b6124d826610 on openmrs:master**.


![Codacy](https://www.codacy.com/assets/images/favicon.png) Here is an overview of what got changed by this pull request:


```diff

Issues
======
+ Solved 7
           
```


See the complete overview on [Codacy](https://www.codacy.com/app/openmrs/openmrs-core/pullRequest?prid=632701&bid=4513632)
        

[![Coverage Status](https://coveralls.io/builds/11345745/badge)](https://coveralls.io/builds/11345745)

Coverage decreased (-0.004%) to 57.167% when pulling **14bfbc615de6de00eb92982b7bef7b29b2918a67 on abarne:TRUNK-5034** into **7606d3e69fbf433a9ccb91241408b6124d826610 on openmrs:master**.

@abarne, thanks for your PR! By analyzing the history of the files in this pull request, we identified @bmamlin, @teleivo and @wluyima to be potential reviewers.

![Codacy](https://www.codacy.com/assets/images/favicon.png) Here is an overview of what got changed by this pull request:


```diff

Issues
======
+ Solved 8
           
```


See the complete overview on [Codacy](https://www.codacy.com/app/openmrs/openmrs-core/pullRequest?prid=632746&bid=4513950)
        

[![Coverage Status](https://coveralls.io/builds/11345965/badge)](https://coveralls.io/builds/11345965)

Coverage increased (+0.03%) to 57.196% when pulling **c5b7be974d702b82e8882692100714ab00a37717 on abarne:trunk-5034** into **7606d3e69fbf433a9ccb91241408b6124d826610 on openmrs:master**.

I did run mvn clean package, not mvn clean install, as asked for in the checklist above and by 
https://wiki.openmrs.org/display/docs/Using+Git point 3.
The code reformatting was done through the eclipse code formatter 

[![Coverage Status](https://coveralls.io/builds/11348323/badge)](https://coveralls.io/builds/11348323)

Coverage decreased (-0.007%) to 57.163% when pulling **f9724af3fdb2da642e29eae3a2c4867f07dc1418 on MalshaL:TRUNK-5134** into **7606d3e69fbf433a9ccb91241408b6124d826610 on openmrs:master**.

@wluyima  I think this went through some design discussion, and it's really a question of backporting (part) of a previous trunk commit.

@cioan it would make sense to close this one out and comment on the original trunk ticket that added the getIsPatient saying you'd like to backport it... (I was looking at that trunk ticket last week, but don't have the ticket number handy anymore)
Thanks @mogoodrich . It looks like you already commented on [TRUNK-2205](https://issues.openmrs.org/browse/TRUNK-2205?focusedCommentId=237907&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-237907).
RESTWS-658 could remain open because it was re-written by Darius to address other issues with person links.
Thanks for the link to the ticket @cioan!  Sorry, I meant we should close this pull request (because when we do backport we want the commit message to reflect TRUNK-2205, not the REST ticket... I agree that the REST ticket itself can stay open... I will close this out (and comment further on TRUNK-2205).
Ignore my previous comment about using SystemUtils
@JudeNiroshan please rebase on latest master
Closing because @JudeNiroshan decided to let go of the ticket.
@jsmitha9, thanks for your PR! By analyzing the history of the files in this pull request, we identified @bmamlin, @teleivo and @suniala to be potential reviewers.

[![Coverage Status](https://coveralls.io/builds/11383099/badge)](https://coveralls.io/builds/11383099)

Coverage increased (+0.02%) to 57.2% when pulling **9758c208c50917089b07aee4d02fdfad405157ef on jsmitha9:TRUNK-5043** into **03a0de8a406ba0cd6048a220c21347a0a49f1fb7 on openmrs:master**.

I'm just going to go ahead and say this is wrong, I haven't rebased and for some reason the change I ACTUALLY made, which was a deletion of code on line 206 did not save? Although on my version it is not there.
@jsmitha9, thanks for your PR! By analyzing the history of the files in this pull request, we identified @bmamlin, @teleivo and @suniala to be potential reviewers.

![Codacy](https://www.codacy.com/assets/images/favicon.png) Here is an overview of what got changed by this pull request:


```diff

Issues
======
+ Solved 1
           
```


See the complete overview on [Codacy](https://www.codacy.com/app/openmrs/openmrs-core/pullRequest?prid=637924&bid=4530918)
        

[![Coverage Status](https://coveralls.io/builds/11393427/badge)](https://coveralls.io/builds/11393427)

Coverage increased (+0.02%) to 57.2% when pulling **a6f51abfb616e4e672192901b65b31817b4dc60b on jsmitha9:rTRUNK-5043** into **03a0de8a406ba0cd6048a220c21347a0a49f1fb7 on openmrs:master**.

@teleivo, thanks for your PR! By analyzing the history of the files in this pull request, we identified @bmamlin and @lluismf to be potential reviewers.

[![Coverage Status](https://coveralls.io/builds/11401251/badge)](https://coveralls.io/builds/11401251)

Coverage increased (+0.02%) to 57.2% when pulling **1c3542d361899b5fe5bb63b7f59b67ac58843799 on teleivo:TRUNK-5139** into **4f9b513a8f73c86a37af9322666e10a932fd9257 on openmrs:master**.

@teleivo, thanks for your PR! By analyzing the history of the files in this pull request, we identified @bmamlin and @WolfSchlegel to be potential reviewers.
@teleivo, thanks for your PR! By analyzing the history of the files in this pull request, we identified @bmamlin, @chethandeshpande and @lluismf to be potential reviewers.

[![Coverage Status](https://coveralls.io/builds/11401314/badge)](https://coveralls.io/builds/11401314)

Coverage increased (+0.006%) to 57.191% when pulling **4fc4d6f0e0a97ee187274501af1f7ca2afa798fa on teleivo:TRUNK-5163** into **724be5f9b6b5e362da5e034f15707f944dc72c3d on openmrs:master**.


[![Coverage Status](https://coveralls.io/builds/11401384/badge)](https://coveralls.io/builds/11401384)

Coverage increased (+0.03%) to 57.216% when pulling **fbdce639b8e4bf8ca15ec151959cdd79f0918ba7 on teleivo:TRUNK-5162** into **724be5f9b6b5e362da5e034f15707f944dc72c3d on openmrs:master**.

@teleivo, thanks for your PR! By analyzing the history of the files in this pull request, we identified @bmamlin and @suniala to be potential reviewers.

![Codacy](https://www.codacy.com/assets/images/favicon.png) Here is an overview of what got changed by this pull request:


```diff

Issues
======
+ Solved 28
- Added 1
           

Complexity decreasing per file
==============================
+ api/src/main/java/org/openmrs/propertyeditor/ConceptAttributeTypeEditor.java  -4
+ api/src/main/java/org/openmrs/propertyeditor/VisitTypeEditor.java  -4
+ api/src/main/java/org/openmrs/propertyeditor/VisitEditor.java  -4
+ api/src/main/java/org/openmrs/propertyeditor/UserEditor.java  -4
+ api/src/main/java/org/openmrs/propertyeditor/ProgramWorkflowStateEditor.java  -4
+ api/src/main/java/org/openmrs/propertyeditor/ProgramWorkflowEditor.java  -4
+ api/src/main/java/org/openmrs/propertyeditor/PersonAttributeTypeEditor.java  -4
+ api/src/main/java/org/openmrs/propertyeditor/PersonAttributeEditor.java  -4
+ api/src/main/java/org/openmrs/propertyeditor/PatientIdentifierTypeEditor.java  -4
+ api/src/main/java/org/openmrs/propertyeditor/PatientEditor.java  -4
+ api/src/main/java/org/openmrs/propertyeditor/OrderEditor.java  -4
+ api/src/main/java/org/openmrs/propertyeditor/LocationTagEditor.java  -4
+ api/src/main/java/org/openmrs/propertyeditor/LocationEditor.java  -4
+ api/src/main/java/org/openmrs/propertyeditor/LocationAttributeTypeEditor.java  -4
+ api/src/main/java/org/openmrs/propertyeditor/FormEditor.java  -4
+ api/src/main/java/org/openmrs/propertyeditor/EncounterTypeEditor.java  -4
+ api/src/main/java/org/openmrs/propertyeditor/EncounterEditor.java  -4
+ api/src/main/java/org/openmrs/propertyeditor/DrugEditor.java  -4
+ api/src/main/java/org/openmrs/propertyeditor/ConceptSourceEditor.java  -4
+ api/src/main/java/org/openmrs/propertyeditor/ConceptNumericEditor.java  -4
+ api/src/main/java/org/openmrs/propertyeditor/ConceptNameEditor.java  -4
+ api/src/main/java/org/openmrs/propertyeditor/ConceptEditor.java  -4
+ api/src/main/java/org/openmrs/propertyeditor/ConceptDatatypeEditor.java  -4
+ api/src/main/java/org/openmrs/propertyeditor/ConceptClassEditor.java  -4
+ api/src/main/java/org/openmrs/propertyeditor/ConceptAnswerEditor.java  -4
+ api/src/main/java/org/openmrs/propertyeditor/CohortEditor.java  -4
         
```


See the complete overview on [Codacy](https://www.codacy.com/app/openmrs/openmrs-core/pullRequest?prid=638554&bid=4532403)
        

[![Coverage Status](https://coveralls.io/builds/11402543/badge)](https://coveralls.io/builds/11402543)

Coverage decreased (-0.5%) to 56.734% when pulling **a1ae660023bb40ffe56cebb6791be5528a39fec7 on teleivo:TRUNK-5164** into **455e45234790a876299a1fefb79acd937559fb17 on openmrs:master**.

@teleivo, thanks for your PR! By analyzing the history of the files in this pull request, we identified @bmamlin to be a potential reviewer.
@teleivo, thanks for your PR! By analyzing the history of the files in this pull request, we identified @bmamlin to be a potential reviewer.

![Codacy](https://www.codacy.com/assets/images/favicon.png) Here is an overview of what got changed by this pull request:


```diff

Complexity increasing per file
==============================
- api/src/main/java/org/openmrs/propertyeditor/ConceptReferenceTermEditor.java  1
         
```


See the complete overview on [Codacy](https://www.codacy.com/app/openmrs/openmrs-core/pullRequest?prid=638565&bid=4532436)
        

![Codacy](https://www.codacy.com/assets/images/favicon.png) Here is an overview of what got changed by this pull request:


```diff

Complexity increasing per file
==============================
- api/src/main/java/org/openmrs/propertyeditor/ConceptMapTypeEditor.java  1
         
```


See the complete overview on [Codacy](https://www.codacy.com/app/openmrs/openmrs-core/pullRequest?prid=638566&bid=4532441)
        
@teleivo, thanks for your PR! By analyzing the history of the files in this pull request, we identified @bmamlin and @suniala to be potential reviewers.

[![Coverage Status](https://coveralls.io/builds/11402685/badge)](https://coveralls.io/builds/11402685)

Coverage increased (+0.01%) to 56.729% when pulling **c136144c7fbfb143012116bc2cb6fb6b84f0ca3c on teleivo:TRUNK-5165** into **de422c21dcb86298caf174f73199fc7123430676 on openmrs:master**.


[![Coverage Status](https://coveralls.io/builds/11402702/badge)](https://coveralls.io/builds/11402702)

Coverage decreased (-0.02%) to 56.698% when pulling **834d9dec88773e41a4a723bb4a0b1a3606e2e8a9 on teleivo:TRUNK-5166** into **de422c21dcb86298caf174f73199fc7123430676 on openmrs:master**.


[![Coverage Status](https://coveralls.io/builds/11402755/badge)](https://coveralls.io/builds/11402755)

Coverage increased (+0.1%) to 56.849% when pulling **a648272062ee1d3ab75f20049216979653e542c4 on teleivo:TRUNK-5167** into **de422c21dcb86298caf174f73199fc7123430676 on openmrs:master**.

@getshravan are you still working on this?
@MalshaL am closing this for now. Will reopen when you are ready to reclaim the ticket. 😊 
@meinsen this pull request has more formatting than the actual changes required for the pull request. So am closing it such that you do the following:
1) Switch back to the master branch
2) Pull the latest upstream changes
3) Run mvn clean install and ensure that there are not changed files to commit after the build
3) Create a new branch and put in the changes for this ticket.
4) Run mvn clean install again and then create a new pull request for review.
Closing because the author of this pull request no longer works on the ticket.
@abarne are you still working on this?

[![Coverage Status](https://coveralls.io/builds/11526852/badge)](https://coveralls.io/builds/11526852)

Coverage decreased (-0.09%) to 56.724% when pulling **545658d54bdfcefaa56a729ce496e0424c320b86 on meinsen:TRUNK--5040** into **8c88e1e0e2018ffa5a78b06d8a9eb511d8da7371 on openmrs:master**.


[![Coverage Status](https://coveralls.io/builds/11531234/badge)](https://coveralls.io/builds/11531234)

Coverage increased (+0.02%) to 56.836% when pulling **e456a77a8faa27e007690af988a71d757ba0e42b on meinsen:TRUNK--5040** into **8c88e1e0e2018ffa5a78b06d8a9eb511d8da7371 on openmrs:master**.

@meinsen do you mind squashing these commits into one as advised at? https://wiki.openmrs.org/display/docs/Pull+Request+Tips

[![Coverage Status](https://coveralls.io/builds/11545077/badge)](https://coveralls.io/builds/11545077)

Coverage decreased (-0.01%) to 56.711% when pulling **9e0bf2c1823c7ebade4df5d46d52c8718a487524 on meinsen:TRUNK--5040** into **0cee3d948376d3cc51293f12ab1861cfd585364e on openmrs:master**.

 should be fixed now
@meinsen the ticket status says you are still doing some work. 😊 
@abarne ping me to reopen this whenever you are ready to resume. 😊 
@jdbunford, thanks for your PR! By analyzing the history of the files in this pull request, we identified @rkorytkowski, @patrickpl and @sunbiz to be potential reviewers.

[![Coverage Status](https://coveralls.io/builds/11751333/badge)](https://coveralls.io/builds/11751333)

Coverage decreased (-0.1%) to 56.736% when pulling **193cd057e710d74c6b426d687bd3491b8fa736b1 on jdbunford:TRUNK-5133** into **1e3e11be6f08b0854529c2192ace7cf2c6dd7f16 on openmrs:master**.

@samuelmale, thanks for your PR! By analyzing the history of the files in this pull request, we identified @bmamlin, @teleivo and @lluismf to be potential reviewers.

![Codacy](https://www.codacy.com/assets/images/favicon.png) Here is an overview of what got changed by this pull request:


```diff

Issues
======
+ Solved 1
           
```


See the complete overview on [Codacy](https://www.codacy.com/app/openmrs/openmrs-core/pullRequest?prid=694989&bid=4701721)
        
@samuelmale the ticket url on this pull request is not complete.
@meenakshi-dhanani, thanks for your PR! By analyzing the history of the files in this pull request, we identified @bmamlin, @teleivo and @tomaszmueller to be potential reviewers.

[![Coverage Status](https://:/builds/11999585/badge)](https://:/builds/11999585)

Coverage decreased (-0.1%) to 56.749% when pulling **8242ab195c7d666c91906e78bc35882c2396a8bd on meenakshi-dhanani:TRUNK-5063** into **7047581bc56ffb4cc67a6a74410181d7558737c9 on openmrs:master**.

@meenakshi-dhanani do you mind squashing the commits into one as advised at? https://wiki.openmrs.org/display/docs/Pull+Request+Tips

![Codacy](https://www.codacy.com/assets/images/favicon.png) Here is an overview of what got changed by this pull request:


```diff

Complexity increasing per file
==============================
- api/src/main/java/org/openmrs/api/impl/ConceptServiceImpl.java  2
         
```


See the complete overview on [Codacy](https://www.codacy.com/app/openmrs/openmrs-core/pullRequest?prid=714573&bid=4760621)
        
@dkayiwa Sorry for that. I have squashed all into one now.

On Jun 16, 2017 2:15 PM, "dkayiwa" <notifications@github.com> wrote:

> @meenakshi-dhanani <https://github.com/meenakshi-dhanani> do you mind
> squashing the commits into one as advised at? https://wiki.openmrs.org/
> display/docs/Pull+Request+Tips
>
> —
> You are receiving this because you were mentioned.
> Reply to this email directly, view it on GitHub
> <https://github.com/openmrs/openmrs-core/pull/2197#issuecomment-308969926>,
> or mute the thread
> <https://github.com/notifications/unsubscribe-auth/ANnhlTcSaVhuMMFbsvR-iO8pFJ6Y1kvZks5sEkCtgaJpZM4N8HdH>
> .
>


[![Coverage Status](https://:/builds/12001113/badge)](https://:/builds/12001113)

Coverage decreased (-0.6%) to 56.296% when pulling **e2072adf60a936d3f3676e846ed7b855fb7a395a on meenakshi-dhanani:TRUNK-5063** into **7047581bc56ffb4cc67a6a74410181d7558737c9 on openmrs:master**.

Is it okay or do I need to make more changes for this ticket?
No, but I think because i extracted two methods those lines moved to the
top.

On Jun 20, 2017 12:44, "dkayiwa" <notifications@github.com> wrote:

> *@dkayiwa* commented on this pull request.
> ------------------------------
>
> In api/src/main/java/org/openmrs/api/impl/ConceptServiceImpl.java
> <https://github.com/openmrs/openmrs-core/pull/2197#discussion_r122896460>:
>
> >  			if (possiblePreferredName != null) { //there may have been none
>  				possiblePreferredName.setLocalePreferred(true);
>  			}
>  			checkedLocales.add(locale);
>  		}
> -		
> -		//See TRUNK-3337 for why we set changed by and date changed every time we save a concept.
> -		concept.setDateChanged(new Date());
> -		concept.setChangedBy(Context.getAuthenticatedUser());
>
> Was moving this part of the ticket goals?
>
> —
> You are receiving this because you were mentioned.
> Reply to this email directly, view it on GitHub
> <https://github.com/openmrs/openmrs-core/pull/2197#pullrequestreview-45049177>,
> or mute the thread
> <https://github.com/notifications/unsubscribe-auth/ANnhlc5jFcGsK3oeMPsxZYl0hDk3xShHks5sF3FbgaJpZM4N8HdH>
> .
>

@meenakshi-dhanani, thanks for your PR! By analyzing the history of the files in this pull request, we identified @bmamlin, @teleivo and @dkayiwa to be potential reviewers.

[![Coverage Status](https://:/builds/12098492/badge)](https://:/builds/12098492)

Coverage remained the same at 56.824% when pulling **769308fa43515937d66fc5cfe43f0cccff678753 on meenakshi-dhanani:TRUNK-5131** into **d9f2ec83c2d0be181baea115180d88bb88d054e1 on openmrs:master**.

@meenakshi-dhanani thanks a lot !!! :)
Thank you so much! :)

On Jun 24, 2017 23:34, "Ivo Ulrich" <notifications@github.com> wrote:

> @meenakshi-dhanani <https://github.com/meenakshi-dhanani> thanks a lot
> !!! :)
>
> —
> You are receiving this because you were mentioned.
> Reply to this email directly, view it on GitHub
> <https://github.com/openmrs/openmrs-core/pull/2198#issuecomment-310854452>,
> or mute the thread
> <https://github.com/notifications/unsubscribe-auth/ANnhlbmuo1NMB-onA7Tq8r3c0ragBQfGks5sHU-ngaJpZM4ODM5I>
> .
>

@teleivo, thanks for your PR! By analyzing the history of the files in this pull request, we identified @bmamlin, @dkayiwa and @rkorytkowski to be potential reviewers.

![Codacy](https://www.codacy.com/assets/images/favicon.png) Here is an overview of what got changed by this pull request:


```diff

Issues
======
+ Solved 2
           

Complexity decreasing per file
==============================
+ api/src/main/java/org/openmrs/util/MemoryLeakUtil.java  -3
         
```


See the complete overview on [Codacy](https://www.codacy.com/app/openmrs/openmrs-core/pullRequest?prid=732206&bid=4807224)
        

[![Coverage Status](https://:/builds/12121182/badge)](https://:/builds/12121182)

Coverage increased (+0.04%) to 56.77% when pulling **b96a0a75dba3daa0ca9625c55217f348391c2c2d on teleivo:TRUNK-5096** into **4670f8e927db34834f36403450dabe0a639b806a on openmrs:master**.

@teleivo, thanks for your PR! By analyzing the history of the files in this pull request, we identified @bmamlin, @lluismf and @fanyui to be potential reviewers.

[![Coverage Status](https://:/builds/12121560/badge)](https://:/builds/12121560)

Coverage increased (+0.1%) to 56.876% when pulling **146d900151641e5530351f4b9809a438a62c4057 on teleivo:TRUNK-5174** into **b8a88cedd250a4f53a3c1078b5fe2ba9adf58fd2 on openmrs:master**.


[![Coverage Status](https://:/builds/12123427/badge)](https://:/builds/12123427)

Coverage increased (+0.01%) to 56.86% when pulling **75ebf4343bc0c981b2fe7d4a54911338e264e320 on teleivo:test-update-filter-model** into **eae465dfce7be225041f0e33c3d808a1e511a748 on openmrs:master**.


[![Coverage Status](https://:/builds/12123620/badge)](https://:/builds/12123620)

Coverage decreased (-0.09%) to 56.764% when pulling **f879820c427496869dd6391212ece0a3f3803ea8 on teleivo:test-startup-filter** into **50cf2a18ed98e692035280ae46cee0b4867c5735 on openmrs:master**.


[![Coverage Status](https://:/builds/12140873/badge)](https://:/builds/12140873)

Coverage increased (+0.1%) to 56.884% when pulling **75dbbf9dfbf411793febc57a91d5a7e04b985262 on HVFrancis:TRUNK-5053** into **5c7d2747700d84884fa0149391c6549ccaba0d79 on openmrs:master**.


[![Coverage Status](https://:/builds/12158244/badge)](https://:/builds/12158244)

Coverage increased (+0.02%) to 56.791% when pulling **bed8f2ffb45c4298cc2d564df2a1c29b360a4a13 on HVFrancis:TRUNK-5053** into **5c7d2747700d84884fa0149391c6549ccaba0d79 on openmrs:master**.

Ok, yes, I think I'm finally seeing it. The source file got away from the line numbers in the original ticket, and it wasn't clearly showing the correct lines. I knew there were four lines to be taken out for each one, but my unfamiliarity with the code made it difficult for me to figure out which ones. I now see it much more clearly. Expect a new pull request soon (once I study up on squashing commits)

[![Coverage Status](https://coveralls.io/builds/12236537/badge)](https://coveralls.io/builds/12236537)

Coverage decreased (-0.01%) to 56.757% when pulling **0bc316e01b0d8f064f735ec65e452a790eb5f3a9 on HVFrancis:TRUNK-5053** into **5c7d2747700d84884fa0149391c6549ccaba0d79 on openmrs:master**.

@lehone-hp, thanks for your PR! By analyzing the history of the files in this pull request, we identified @bmamlin, @lluismf and @teleivo to be potential reviewers.
The ticket url does not look correct.

[![Coverage Status](https://coveralls.io/builds/12237552/badge)](https://coveralls.io/builds/12237552)

Coverage increased (+0.009%) to 56.776% when pulling **0a9c451b3b6047317cf0eef839208fdfde0c35dc on lehone-hp:TRUNK-4924** into **5c7d2747700d84884fa0149391c6549ccaba0d79 on openmrs:master**.

Okay, let me work on it

![Codacy](https://www.codacy.com/assets/images/favicon.png) Here is an overview of what got changed by this pull request:


```diff

Issues
======
- Added 2
           

Complexity increasing per file
==============================
- api/src/main/java/org/openmrs/BaseCustomizableMetadata.java  3
- api/src/main/java/org/openmrs/BaseCustomizableData.java  3
         
```


See the complete overview on [Codacy](https://www.codacy.com/app/openmrs/openmrs-core/pullRequest?prid=750592&bid=4853695)
        

[![Coverage Status](https://coveralls.io/builds/12237954/badge)](https://coveralls.io/builds/12237954)

Coverage decreased (-0.008%) to 56.759% when pulling **7f408fdf2e3f90a25f71550430666708be704e31 on lehone-hp:TRUNK-4924** into **5c7d2747700d84884fa0149391c6549ccaba0d79 on openmrs:master**.

@lehone-hp, thanks for your PR! By analyzing the history of the files in this pull request, we identified @bmamlin, @lluismf and @teleivo to be potential reviewers.

![Codacy](https://www.codacy.com/assets/images/favicon.png) Here is an overview of what got changed by this pull request:


```diff

Complexity increasing per file
==============================
- api/src/main/java/org/openmrs/BaseCustomizableMetadata.java  3
- api/src/main/java/org/openmrs/BaseCustomizableData.java  3
         
```


See the complete overview on [Codacy](https://www.codacy.com/app/openmrs/openmrs-core/pullRequest?prid=750873&bid=4854266)
        

[![Coverage Status](https://coveralls.io/builds/12239811/badge)](https://coveralls.io/builds/12239811)

Coverage increased (+0.01%) to 56.778% when pulling **32342aeb6268fed5922b704197bab68e006a7c59 on lehone-hp:TRUNK-4924** into **5c7d2747700d84884fa0149391c6549ccaba0d79 on openmrs:master**.

@nsi88, thanks for your PR! By analyzing the history of the files in this pull request, we identified @bmamlin, @suniala and @dkayiwa to be potential reviewers.

[![Coverage Status](https://coveralls.io/builds/12253507/badge)](https://coveralls.io/builds/12253507)

Coverage decreased (-0.04%) to 56.725% when pulling **c2c75a0712e57c327d632b96566974effcec2f68 on nsi88:TRUNK-4868** into **5c7d2747700d84884fa0149391c6549ccaba0d79 on openmrs:master**.


[![Coverage Status](https://coveralls.io/builds/12253913/badge)](https://coveralls.io/builds/12253913)

Coverage increased (+0.003%) to 55.844% when pulling **5091a32477b1c22dd615420ae1c27180297f99e7 on ShruthiPitta:TRUNK-5183** into **7993086436d6d82893a7e3bebe96ea98e1698166 on openmrs:2.1.x**.


[![Coverage Status](https://coveralls.io/builds/12254071/badge)](https://coveralls.io/builds/12254071)

Coverage decreased (-0.006%) to 55.835% when pulling **0d4922521f970b2394da4c5650a7195d8fa95b40 on ShruthiPitta:TRUNK-5183** into **7993086436d6d82893a7e3bebe96ea98e1698166 on openmrs:2.1.x**.


![Codacy](https://www.codacy.com/assets/images/favicon.png) Here is an overview of what got changed by this pull request:


```diff

Issues
======
- Added 7
           

Complexity increasing per file
==============================
- api/src/main/java/org/openmrs/api/context/ServiceContext.java  1
         
```


See the complete overview on [Codacy](https://www.codacy.com/app/openmrs/openmrs-core/pullRequest?prid=754218&bid=4866753)
        

[![Coverage Status](https://coveralls.io/builds/12261868/badge)](https://coveralls.io/builds/12261868)

Coverage increased (+0.05%) to 56.812% when pulling **4c3cb48b8c64492093167eac27a5909c4cb1450e on TRUNK-5180** into **5c7d2747700d84884fa0149391c6549ccaba0d79 on master**.

@tenas97, thanks for your PR! By analyzing the history of the files in this pull request, we identified @wluyima, @rkorytkowski and @bhashitha to be potential reviewers.

[![Coverage Status](https://coveralls.io/builds/12271974/badge)](https://coveralls.io/builds/12271974)

Coverage decreased (-0.02%) to 56.744% when pulling **d5c23ef14e751c9d166ab014d29a6340476e0edb on nsi88:TRUNK-4868** into **5c7d2747700d84884fa0149391c6549ccaba0d79 on openmrs:master**.


[![Coverage Status](https://coveralls.io/builds/12277537/badge)](https://coveralls.io/builds/12277537)

Coverage increased (+0.008%) to 56.775% when pulling **570012e0c4dae412ef31a1370e716ae2097811c7 on nsi88:TRUNK-4868** into **5c7d2747700d84884fa0149391c6549ccaba0d79 on openmrs:master**.


[![Coverage Status](https://coveralls.io/builds/12283634/badge)](https://coveralls.io/builds/12283634)

Coverage decreased (-0.0004%) to 56.767% when pulling **7679745ff84683dc04621b04d3623b39ae4ea54c on tenas97:TRUNK-4868** into **5c7d2747700d84884fa0149391c6549ccaba0d79 on openmrs:master**.


[![Coverage Status](https://coveralls.io/builds/12283795/badge)](https://coveralls.io/builds/12283795)

Coverage decreased (-0.0004%) to 56.767% when pulling **59356d50b36703557004f22d5ce7461eda242c8e on tenas97:TRUNK-4868** into **5c7d2747700d84884fa0149391c6549ccaba0d79 on openmrs:master**.


[![Coverage Status](https://coveralls.io/builds/12284055/badge)](https://coveralls.io/builds/12284055)

Coverage increased (+0.006%) to 56.773% when pulling **8e33421112537c6ba135da30879fe404e14cdfee on tenas97:TRUNK-4868** into **5c7d2747700d84884fa0149391c6549ccaba0d79 on openmrs:master**.


[![Coverage Status](https://coveralls.io/builds/12284349/badge)](https://coveralls.io/builds/12284349)

Coverage decreased (-0.02%) to 56.745% when pulling **fac8a6198d39512cadc17bf994c2f098621b1e3f on tenas97:TRUNK-4868** into **5c7d2747700d84884fa0149391c6549ccaba0d79 on openmrs:master**.


[![Coverage Status](https://coveralls.io/builds/12284687/badge)](https://coveralls.io/builds/12284687)

Coverage decreased (-0.03%) to 56.739% when pulling **5f3546fee823fc3df757673f5cbed2374e7d2112 on tenas97:TRUNK-4868** into **5c7d2747700d84884fa0149391c6549ccaba0d79 on openmrs:master**.


[![Coverage Status](https://coveralls.io/builds/12284886/badge)](https://coveralls.io/builds/12284886)

Coverage decreased (-0.01%) to 56.754% when pulling **f590106ef11ceae46b45528e755483499097f8a5 on tenas97:TRUNK-4868** into **5c7d2747700d84884fa0149391c6549ccaba0d79 on openmrs:master**.


[![Coverage Status](https://coveralls.io/builds/12285349/badge)](https://coveralls.io/builds/12285349)

Coverage decreased (-0.01%) to 56.757% when pulling **6509822a14749ea30ab5454fbc47d1f6eda78d4c on tenas97:TRUNK-4868** into **5c7d2747700d84884fa0149391c6549ccaba0d79 on openmrs:master**.

Did you see the tips about squashing commits into one, on this page? https://wiki.openmrs.org/display/docs/Pull+Request+Tips

[![Coverage Status](https://coveralls.io/builds/12290927/badge)](https://coveralls.io/builds/12290927)

Coverage increased (+0.04%) to 56.809% when pulling **a813a65f5394e4019c7ccd2d3d397df8890791a1 on tenas97:TRUNK-4868** into **5c7d2747700d84884fa0149391c6549ccaba0d79 on openmrs:master**.


[![Coverage Status](https://coveralls.io/builds/12301884/badge)](https://coveralls.io/builds/12301884)

Coverage increased (+0.03%) to 56.799% when pulling **1909442b5df7957cdceee01ba67dc5e20c6ba05a on tenas97:TRUNK-4868** into **5c7d2747700d84884fa0149391c6549ccaba0d79 on openmrs:master**.

@dkayiwa Yes I saw the tip on squashing, but I lost track of the exact number of commits I made during my time on the issue, and since the git  squash command involved me including the number of prior commits, I thought it will be best not to run it.


[![Coverage Status](https://coveralls.io/builds/12302174/badge)](https://coveralls.io/builds/12302174)

Coverage increased (+0.05%) to 56.821% when pulling **b2897ade16417341d665cae9213c430970a3f1e9 on tenas97:TRUNK-4868** into **5c7d2747700d84884fa0149391c6549ccaba0d79 on openmrs:master**.


[![Coverage Status](https://coveralls.io/builds/12306612/badge)](https://coveralls.io/builds/12306612)

Coverage increased (+0.03%) to 56.793% when pulling **e25958b11ae4aff291e5cf2f0e3b15f15699dbbf on tenas97:TRUNK-4868** into **5c7d2747700d84884fa0149391c6549ccaba0d79 on openmrs:master**.


[![Coverage Status](https://coveralls.io/builds/12306792/badge)](https://coveralls.io/builds/12306792)

Coverage decreased (-0.1%) to 56.688% when pulling **b54b5fdbddce19da6f4ffbac63ed8650539d38ea on tenas97:TRUNK-4868** into **fdf511bea249bace39c198196c7852988046da67 on openmrs:master**.


![Codacy](https://www.codacy.com/assets/images/favicon.png) Here is an overview of what got changed by this pull request:


```diff

Issues
======
+ Solved 2
- Added 1
           

Complexity increasing per file
==============================
- api/src/main/java/org/openmrs/api/impl/ConceptServiceImpl.java  2
- api/src/main/java/org/openmrs/Person.java  1
         

Complexity decreasing per file
==============================
+ api/src/main/java/org/openmrs/util/MemoryLeakUtil.java  -3
         
```


See the complete overview on [Codacy](https://www.codacy.com/app/openmrs/openmrs-core/pullRequest?prid=756976&bid=4872758)
        

[![Coverage Status](https://coveralls.io/builds/12306848/badge)](https://coveralls.io/builds/12306848)

Coverage increased (+0.02%) to 56.815% when pulling **b54b5fdbddce19da6f4ffbac63ed8650539d38ea on tenas97:TRUNK-4868** into **fdf511bea249bace39c198196c7852988046da67 on openmrs:master**.


[![Coverage Status](https://coveralls.io/builds/12306850/badge)](https://coveralls.io/builds/12306850)

Coverage increased (+0.04%) to 56.83% when pulling **b54b5fdbddce19da6f4ffbac63ed8650539d38ea on tenas97:TRUNK-4868** into **fdf511bea249bace39c198196c7852988046da67 on openmrs:master**.

@tenas97 this pull request has more changes than needed for the ticket. Did you commit these accidentally? 😊 
@dkayiwa I apologize for that. The only changes i remember making were to the person.java class to include the setDead method to true in the setDeathDate method and a test and a test in the personTest.java class to check this change. I also made changes in the PatientServiceTest.java class to handle cases where the cause of death was not set, but the death date was, as this would give errors with respect to the changes i made in Person.java. I don't remember changing 43 files as shown by the pull request.
There were also some minor commits made mostly concerning issues with the codacy test. At first it involved simple WhiteSpace around errors, and when i resolved them, the codacy test would record a pass and some time later show a failed test with very different issues from the previous test results. I am relatively new to version control, so maybe there's something wrong i may have done unknowingly.
@tenas97 can you take a look at this and see if every change here was committed intentionally? https://github.com/openmrs/openmrs-core/pull/2210/commits/b54b5fdbddce19da6f4ffbac63ed8650539d38ea
@dkayiwa  There's alot of commits there that are unintentional. Some classes I don't even think i opened. If it poses a problem I couldo close this pull request, update my fork and make the changes again. Then re-submit the pull request.
@tenas97 yes close this pull request and create a new one.
@dkayiwa  Ok, will do. Thanks alot
@nsi88 is this a duplicate of https://github.com/openmrs/openmrs-core/pull/2210?
@HVFrancis are you still working on this?
@dkayiwa I'm waiting on a code review
@HVFrancis can you first squash the commits into one as advised at? https://wiki.openmrs.org/display/docs/Pull+Request+Tips
@dkayiwa I thought I had. I executed a git reset --soft HEAD~3 (because I did have three previous commits before my last commit). Then I had a push error, so I had to resolve the conflict by hand. Did a commit and a push. How many commits does it still show?
@HVFrancis you can see the number of commits yourself in the tab above named "commits"; it has the number of commits written on it and if you click on the tab you'll see them as well
@tenas97, thanks for your PR! By analyzing the history of the files in this pull request, we identified @bmamlin, @suniala and @dkayiwa to be potential reviewers.

[![Coverage Status](https://coveralls.io/builds/12332100/badge)](https://coveralls.io/builds/12332100)

Coverage increased (+0.03%) to 56.824% when pulling **c87f890095aa89477dccc3d17eaf87358460271f on tenas97:TRUNK-4868** into **fdf511bea249bace39c198196c7852988046da67 on openmrs:master**.

@dkayiwa  Here's the updated pull request after i closed the previous one. Hope i was able to correct the mistakes I made in the first 

![Codacy](https://www.codacy.com/assets/images/favicon.png) Here is an overview of what got changed by this pull request:


```diff

Issues
======
- Added 7
           

Complexity increasing per file
==============================
- api/src/main/java/org/openmrs/api/context/ServiceContext.java  1
- api/src/main/java/org/openmrs/Person.java  1
         
```


See the complete overview on [Codacy](https://www.codacy.com/app/openmrs/openmrs-core/pullRequest?prid=763840&bid=4890714)
        

[![Coverage Status](https://coveralls.io/builds/12332306/badge)](https://coveralls.io/builds/12332306)

Coverage increased (+0.02%) to 56.806% when pulling **7f19412a6cea93b31ebf319bf755124c0cd1873e on tenas97:TRUNK-4868** into **fdf511bea249bace39c198196c7852988046da67 on openmrs:master**.


[![Coverage Status](https://coveralls.io/builds/12332351/badge)](https://coveralls.io/builds/12332351)

Coverage increased (+0.03%) to 56.818% when pulling **7f19412a6cea93b31ebf319bf755124c0cd1873e on tenas97:TRUNK-4868** into **fdf511bea249bace39c198196c7852988046da67 on openmrs:master**.


[![Coverage Status](https://coveralls.io/builds/12332377/badge)](https://coveralls.io/builds/12332377)

Coverage increased (+0.003%) to 56.793% when pulling **7f19412a6cea93b31ebf319bf755124c0cd1873e on tenas97:TRUNK-4868** into **fdf511bea249bace39c198196c7852988046da67 on openmrs:master**.

@dkayiwa @teleivo ok, I've done git reset --soft HEAD~4 on my local repository. What is my next step? Last time I tried a push to my repo on github, and got an error/conflict. Do I do a git add [filename] first, then commit again? I want to make sure to get this right. Thanks for all your help!
@HVFrancis yes correct! And after that do a `git push --force` to update this pull request. You get the error when doing a normal `git push` because you overwrote the history locally. So your local commit history has different hashes than whats on the github server. You should push --force with caution, only when you are really sure thats what you want to do. Because if others depend on the commit history that has already been published and you overwrite that, it can cause trouble. Here with your own pull request its fine.

also I suggest you try some git tutorials:
* http://gitreal.codeschool.com/
* https://try.github.io/levels/1/challenges/1

and refer to the great https://git-scm.com/book/en/v2 and its docs if you are in such situations.

scm's like git are important tools for devs, so its worth investing time in understanding what they do and why they work the way they do 😄 
It's for the same task
@teleivo Ok, I think I've done the git things correctly. Let me know if this checks out. And I'll definitely be checking those tutorials! Thanks!

![Codacy](https://www.codacy.com/assets/images/favicon.png) Here is an overview of what got changed by this pull request:


```diff

Complexity increasing per file
==============================
- api/src/main/java/org/openmrs/api/impl/ProgramWorkflowServiceImpl.java  2
         
```


See the complete overview on [Codacy](https://www.codacy.com/app/openmrs/openmrs-core/pullRequest?prid=736081&bid=4817477)
        

[![Coverage Status](https://coveralls.io/builds/12352147/badge)](https://coveralls.io/builds/12352147)

Coverage increased (+0.04%) to 56.827% when pulling **c5d47365ece4327b99c9665f2585dad4bd57d02d on HVFrancis:TRUNK-5053** into **fdf511bea249bace39c198196c7852988046da67 on openmrs:master**.

@HVFrancis congrats to your merge 🎆 
@tenas97 am closing this pull request because it contains more changes than it should. Do you mind creating a new one?
@tenas97, thanks for your PR! By analyzing the history of the files in this pull request, we identified @bmamlin, @dkayiwa and @suniala to be potential reviewers.

[![Coverage Status](https://coveralls.io/builds/12404407/badge)](https://coveralls.io/builds/12404407)

Coverage increased (+0.006%) to 56.827% when pulling **3869e2a6e53c638fa543b0548fe113fa56c2b3d6 on tenas97:TRUNK-4868** into **602293acc4369230bf8e419fc00f93cce034af2c on openmrs:master**.


[![Coverage Status](https://coveralls.io/builds/12411724/badge)](https://coveralls.io/builds/12411724)

Coverage increased (+0.009%) to 56.83% when pulling **833dbf471ab451f4d6c1d11b56f24f0e42eda212 on tenas97:TRUNK-4868** into **602293acc4369230bf8e419fc00f93cce034af2c on openmrs:master**.


![Codacy](https://www.codacy.com/assets/images/favicon.png) Here is an overview of what got changed by this pull request:


```diff

Complexity increasing per file
==============================
- api/src/main/java/org/openmrs/Person.java  1
         
```


See the complete overview on [Codacy](https://www.codacy.com/app/openmrs/openmrs-core/pullRequest?prid=774092&bid=4916956)
        

[![Coverage Status](https://coveralls.io/builds/12411739/badge)](https://coveralls.io/builds/12411739)

Coverage decreased (-0.01%) to 56.811% when pulling **833dbf471ab451f4d6c1d11b56f24f0e42eda212 on tenas97:TRUNK-4868** into **602293acc4369230bf8e419fc00f93cce034af2c on openmrs:master**.


[![Coverage Status](https://coveralls.io/builds/12411750/badge)](https://coveralls.io/builds/12411750)

Coverage decreased (-0.02%) to 56.802% when pulling **833dbf471ab451f4d6c1d11b56f24f0e42eda212 on tenas97:TRUNK-4868** into **602293acc4369230bf8e419fc00f93cce034af2c on openmrs:master**.


[![Coverage Status](https://coveralls.io/builds/12411768/badge)](https://coveralls.io/builds/12411768)

Coverage decreased (-0.03%) to 56.789% when pulling **833dbf471ab451f4d6c1d11b56f24f0e42eda212 on tenas97:TRUNK-4868** into **602293acc4369230bf8e419fc00f93cce034af2c on openmrs:master**.

I have took a look in this issue. How can i contribute myself in this issue ?
@SenaniDananjali a lot has happened since the time this was closed. Therefore, it is simpler to just create a new pull request.
Closing this because of https://github.com/openmrs/openmrs-core/pull/2213
@lehone-hp, thanks for your PR! By analyzing the history of the files in this pull request, we identified @bmamlin, @dkayiwa and @lluismf to be potential reviewers.

![Codacy](https://www.codacy.com/assets/images/favicon.png) Here is an overview of what got changed by this pull request:


```diff

Issues
======
+ Solved 5
           
```


See the complete overview on [Codacy](https://www.codacy.com/app/openmrs/openmrs-core/pullRequest?prid=784027&bid=4947897)
        

[![Coverage Status](https://coveralls.io/builds/12466781/badge)](https://coveralls.io/builds/12466781)

Coverage decreased (-0.02%) to 56.799% when pulling **92b2f9985a10437706306bd3b6ec2daad26e77fa on lehone-hp:TRUNK-5046** into **3fa7192857d66daa6c4d42ca56cb7296c2270ea2 on openmrs:master**.

@tenas97, thanks for your PR! By analyzing the history of the files in this pull request, we identified @bmamlin, @lluismf and @suniala to be potential reviewers.

[![Coverage Status](https://coveralls.io/builds/12472348/badge)](https://coveralls.io/builds/12472348)

Coverage increased (+0.04%) to 56.836% when pulling **4f450db283daa66bab90756b4946d523e923c651 on tenas97:master** into **73558b0b492b5d1f255844d23658f5d5acb99471 on openmrs:master**.

I see no unit test for you changes.
You might also want to look into why you have the auto format changes.
@wluyima my change as a whole was a unit test to ensure that a patients birthdate isn't after a visit date attributed to that particular patient and also included a certain error margin to take care of patients who's birth dates are estimated
About the auto changes, I think it came about after I ran mvn clean package. 
@tenas97, thanks for your PR! By analyzing the history of the files in this pull request, we identified @bmamlin, @lluismf and @suniala to be potential reviewers.
@wluyima I am closing this pull request because I mistakenly deleted the source branch of this request and so I can't add commits to it. I recently opened another pull request for the same ticket with updated changes. Heres the link https://github.com/openmrs/openmrs-core/pull/2218


[![Coverage Status](https://coveralls.io/builds/12540399/badge)](https://coveralls.io/builds/12540399)

Coverage decreased (-0.01%) to 56.786% when pulling **8f0dc6070d3bb3dc731cdb3194183a9390fac4cd on tenas97:TRUNK-4939** into **73558b0b492b5d1f255844d23658f5d5acb99471 on openmrs:master**.


[![Coverage Status](https://coveralls.io/builds/12545547/badge)](https://coveralls.io/builds/12545547)

Coverage increased (+0.02%) to 56.833% when pulling **6f55d11707c25c85a61c3d739f2472d57c5e03cf on tenas97:TRUNK-4939** into **b93dcb2797a40525c435913f6c2887d14ffbf2de on openmrs:master**.


[![Coverage Status](https://coveralls.io/builds/12545555/badge)](https://coveralls.io/builds/12545555)

Coverage decreased (-0.009%) to 56.808% when pulling **6f55d11707c25c85a61c3d739f2472d57c5e03cf on tenas97:TRUNK-4939** into **b93dcb2797a40525c435913f6c2887d14ffbf2de on openmrs:master**.

@teleivo, thanks for your PR! By analyzing the history of the files in this pull request, we identified @patrickpl, @rkorytkowski and @sunbiz to be potential reviewers.

[![Coverage Status](https://coveralls.io/builds/12606670/badge)](https://coveralls.io/builds/12606670)

Coverage increased (+0.003%) to 56.808% when pulling **6c588abb0aa8e0fc817d2f76aa1ac227e58d989e on teleivo:TRUNK-5178** into **78f91ab93bc6f0fec6769ac5ec9d536d830337d6 on openmrs:master**.

@teleivo, thanks for your PR! By analyzing the history of the files in this pull request, we identified @rkorytkowski, @patrickpl and @sunbiz to be potential reviewers.

[![Coverage Status](https://coveralls.io/builds/12606723/badge)](https://coveralls.io/builds/12606723)

Coverage increased (+0.02%) to 56.845% when pulling **63ac917ce1cf8996269ff492d5a2ec510fee79c6 on teleivo:TRUNK-5179** into **f1a1b7753345060946cd621bb59a145ed7974c40 on openmrs:master**.

@teleivo, thanks for your PR! By analyzing the history of the files in this pull request, we identified @rkorytkowski, @patrickpl and @sunbiz to be potential reviewers.

[![Coverage Status](https://coveralls.io/builds/12611249/badge)](https://coveralls.io/builds/12611249)

Coverage decreased (-0.009%) to 56.82% when pulling **7b08ab1065c00b18c65841fc182812410ba10f0d on teleivo:TRUNK-5191** into **861824173b5082edb249dc35625fb78bb2e210f0 on openmrs:master**.

@teleivo, thanks for your PR! By analyzing the history of the files in this pull request, we identified @rkorytkowski, @patrickpl and @sunbiz to be potential reviewers.
@teleivo, thanks for your PR! By analyzing the history of the files in this pull request, we identified @bmamlin, @lluismf and @suniala to be potential reviewers.

[![Coverage Status](https://coveralls.io/builds/12617724/badge)](https://coveralls.io/builds/12617724)

Coverage increased (+0.02%) to 56.833% when pulling **8f4139c05df7751753f3c9297e88dbc47d098821 on teleivo:TRUNK-5118** into **c268916f2319dfc0401725b85966cff39a75bb93 on openmrs:master**.

@teleivo, thanks for your PR! By analyzing the history of the files in this pull request, we identified @rkorytkowski, @patrickpl and @sunbiz to be potential reviewers.

[![Coverage Status](https://coveralls.io/builds/12627789/badge)](https://coveralls.io/builds/12627789)

Coverage increased (+0.009%) to 56.811% when pulling **99354f9b2c415d434457c33ca452311de019c26e on teleivo:TRUNK-5118** into **6d06f9e0331268f8b686ee0fb9a671733f7d0f91 on openmrs:master**.


[![Coverage Status](https://coveralls.io/builds/12627814/badge)](https://coveralls.io/builds/12627814)

Coverage remained the same at 56.802% when pulling **99354f9b2c415d434457c33ca452311de019c26e on teleivo:TRUNK-5118** into **6d06f9e0331268f8b686ee0fb9a671733f7d0f91 on openmrs:master**.


[![Coverage Status](https://coveralls.io/builds/12677397/badge)](https://coveralls.io/builds/12677397)

Coverage decreased (-0.03%) to 56.795% when pulling **79c35cb9709ae339e6036bd01d8ff4edd056b93c on jrs33:TRUNK-5182** into **0af358310396ff43acda8496ba0b8ca19c02068a on openmrs:master**.

@jrs33 did you take a look at the review comments from codacy-bot? 😊 
@dkayiwa Yes! So I think those flags may be coming from the fact that I did not actually refactor the code to ease the pull request review as mentioned on the ticket at 

https://issues.openmrs.org/browse/TRUNK-5182

I simply marked where my newly added private methods would replace code in saveConcept, so I think thats where the unused private methods warning comes from. Do you notice anything other than that that I may have missed?
@jrs33 what is the value of adding new private methods that you never use?
"And only extract the private methods without refactoring them as well in order to ease code review and reduce risk of breaking the code. If you have an idea on how to improve the private methods later on submit another PR." This was the exact reasoning I saw on the open ticket. I can resubmit with the methods in place in saveConcept. Would you prefer that?
Extracting private methods without using them anywhere?

[![Coverage Status](https://coveralls.io/builds/12717514/badge)](https://coveralls.io/builds/12717514)

Coverage decreased (-0.01%) to 56.81% when pulling **d3b89cc7cd2709d27e444f1ce6958e55d5119956 on jrs33:TRUNK-5182** into **0af358310396ff43acda8496ba0b8ca19c02068a on openmrs:master**.

@dkayiwa just added in the private methods instead of excluding them as was mentioned on the ticker
@jrs33 can you squash the commits into one as advised at? https://wiki.openmrs.org/display/docs/Pull+Request+Tips
@dkayiwa squashed the two commits into one. Please let me know of any other issues and Ill be happy to change them!

[![Coverage Status](https://coveralls.io/builds/12734717/badge)](https://coveralls.io/builds/12734717)

Coverage decreased (-0.1%) to 56.713% when pulling **ae8e465df350c3208df78834ed24c81a4ee8d69f on jrs33:TRUNK-5182** into **0af358310396ff43acda8496ba0b8ca19c02068a on openmrs:master**.


[![Coverage Status](https://coveralls.io/builds/12751399/badge)](https://coveralls.io/builds/12751399)

Coverage decreased (-0.09%) to 56.701% when pulling **9748d265639ce067eab04d544c8832bda348d663 on manuela-grindei:master** into **c3a4609727d336416c4b3840c7f55f47001c8341 on openmrs:master**.


[![Coverage Status](https://coveralls.io/builds/12773057/badge)](https://coveralls.io/builds/12773057)

Coverage decreased (-0.03%) to 56.787% when pulling **af45d67fd55610e4a3c7604409dc79be83444f95 on teleivo:TRUNK-5199** into **5ef66a28d1337756496132d502396fc88f49f0ae on openmrs:master**.

@teleivo, thanks for your PR! By analyzing the history of the files in this pull request, we identified @sunbiz, @patrickpl and @rkorytkowski to be potential reviewers.

[![Coverage Status](https://coveralls.io/builds/12773124/badge)](https://coveralls.io/builds/12773124)

Changes Unknown when pulling **fdf50f1e35f5afed130559708862c0f6a98ecbfb on teleivo:TRUNK-5200** into ** on openmrs:master**.


[![Coverage Status](https://coveralls.io/builds/12781974/badge)](https://coveralls.io/builds/12781974)

Coverage decreased (-0.03%) to 56.794% when pulling **23cff5236827032dcc2bccdd35792efa3f928c87 on teleivo:TRUNK-5203** into **1e0b59c927f1025487cc2502e994bf7508fc2edb on openmrs:master**.

@teleivo, thanks for your PR! By analyzing the history of the files in this pull request, we identified @bmamlin, @suniala and @ShekharReddy4 to be potential reviewers.

[![Coverage Status](https://coveralls.io/builds/12806845/badge)](https://coveralls.io/builds/12806845)

Coverage increased (+0.003%) to 56.815% when pulling **891180b8b2a406521a52e27ebbcf6b34d5301cff on teleivo:TRUNK-5206** into **d93b6dd9b61ec8924a3f99434192f2038aa3d457 on openmrs:master**.

@teleivo, thanks for your PR! By analyzing the history of the files in this pull request, we identified @wluyima, @bmamlin and @dkayiwa to be potential reviewers.

![Codacy](https://www.codacy.com/assets/images/favicon.png) Here is an overview of what got changed by this pull request:


```diff

Issues
======
+ Solved 2
- Added 2
           

Complexity increasing per file
==============================
- web/src/main/java/org/openmrs/web/filter/initialization/TestInstallUtil.java  1
         
```


See the complete overview on [Codacy](https://www.codacy.com/app/openmrs/openmrs-core/pullRequest?prid=837883&bid=5100563)
        

[![Coverage Status](https://coveralls.io/builds/12812486/badge)](https://coveralls.io/builds/12812486)

Coverage decreased (-0.01%) to 56.798% when pulling **ca2ccfe88cb0b9b9d14f7cca9aabdc7c42cb1411 on teleivo:TRUNK-5205** into **d237db5449e901f1be05e163f89bf559960d17b4 on openmrs:master**.

@jrs33 are you still working on this?
@dkayiwa Sorry about the delay, was busy finishing up my internship project this past week along with a website, so got a bit sidetracked. Working on adding those finishing touches now!

[![Coverage Status](https://coveralls.io/builds/12828987/badge)](https://coveralls.io/builds/12828987)

Coverage increased (+0.001%) to 56.822% when pulling **b4436c7967bd71775a3ec6d2286208e569c25b72 on jrs33:TRUNK-5182** into **0af358310396ff43acda8496ba0b8ca19c02068a on openmrs:master**.

@jrs33 thanks for the update! Looking forward to the finishing touches. 😊 
@DeMwenyo, thanks for your PR! By analyzing the history of the files in this pull request, we identified @bmamlin and @dkayiwa to be potential reviewers.
@dkayiwa Think the changes should be all set now. Is the request all set to be pulled in?
@jrs33 the ticket status says you are still doing some more work on this. 😊 
Closing this pull request because it is messed up. Did you get a chance to look at this? https://wiki.openmrs.org/display/docs/Pull+Request+Tips
@dkayiwa I initialized another code review, so please let me know if there are any other changes that need to be done. Thanks!
@jrs33 can you squash the commits into one as advised at? https://wiki.openmrs.org/display/docs/Pull+Request+Tips
@angshu, thanks for your PR! By analyzing the history of the files in this pull request, we identified @bmamlin, @lluismf and @dkayiwa to be potential reviewers.

![Codacy](https://www.codacy.com/assets/images/favicon.png) Here is an overview of what got changed by this pull request:


```diff

Complexity increasing per file
==============================
- api/src/main/java/org/openmrs/api/impl/ObsServiceImpl.java  4
         
```


See the complete overview on [Codacy](https://www.codacy.com/app/openmrs/openmrs-core/pullRequest?prid=857502&bid=5156555)
        

[![Coverage Status](https://coveralls.io/builds/12934135/badge)](https://coveralls.io/builds/12934135)

Coverage increased (+0.1%) to 56.899% when pulling **d28993ab726f057232386919277d98fa60ede485 on angshu:master** into **95641959f3a15ba5ae1a23d694114b9dbc466f12 on openmrs:master**.

@angshu did you just forget to claim the ticket and the rest as mentioned here? https://wiki.openmrs.org/display/docs/Pull+Request+Tips 😊 
@MalithaDilshan, thanks for your PR! By analyzing the history of the files in this pull request, we identified @rkorytkowski, @bmamlin and @wluyima to be potential reviewers.

![Codacy](https://www.codacy.com/assets/images/favicon.png) Here is an overview of what got changed by this pull request:


```diff

Issues
======
+ Solved 1
- Added 3
           
```


See the complete overview on [Codacy](https://www.codacy.com/app/openmrs/openmrs-core/pullRequest?prid=876694&bid=5206210)
        
Assigned to myself. I didn't create a branch, because its a single commit and I have no plans of keeping this fork and adding anything onto it. I will close my repo and if needed in future again, will fork again from master. Let me know if you still need to create a branch TRUNK-5198 and make a PR from that! 
@angshu there is yet more on that tips page. :)
@DADMahindika, thanks for your PR! By analyzing the history of the files in this pull request, we identified @bmamlin, @AdamGrzybkowski and @teleivo to be potential reviewers.

[![Coverage Status](https://coveralls.io/builds/13071250/badge)](https://coveralls.io/builds/13071250)

Coverage decreased (-0.01%) to 56.873% when pulling **dff739d408a9065abaa71ad2f58251d7f85df3a7 on DADMahindika:master** into **8d79fe631ccaa40bada5eb4cbca8d2cd7c70de95 on openmrs:master**.


[![Coverage Status](https://coveralls.io/builds/13071530/badge)](https://coveralls.io/builds/13071530)

Coverage increased (+0.008%) to 56.895% when pulling **5b8ae2bab8502bdbc56a2e52ffc2f3f9cda603ce on DADMahindika:master** into **8d79fe631ccaa40bada5eb4cbca8d2cd7c70de95 on openmrs:master**.

Can you squash these commits into one as advised at? https://wiki.openmrs.org/display/docs/Pull+Request+Tips
Can you squash the commits into one as advised at? https://wiki.openmrs.org/display/docs/Pull+Request+Tips
Did you also look into the codacy review comments?
Sorry about that. I intentionally left it out because I didn't think it was obligatory. I had the impression that VisitValidator.validate() was there just to check for errors, and so I decided to replace it with an assertTrue statement. If my assumption was wrong, I could change my implementation ASAP
@tenas97 please include the VisitValidator.validate() call to ensure that all is well, as it is done for other tests.
@mks-d, thanks for your PR! By analyzing the history of the files in this pull request, we identified @bmamlin, @dkayiwa and @lluismf to be potential reviewers.
@dkayiwa I think it should be set. I did a rebase and have the following in my log: 
---
Joshuas-MacBook-Air:openmrs-core joshuasurette$ git log
commit 2a9ae6ee18361e5b254326e1e1aabb86cb2db306
Author: jrs33 <surettej@bu.edu>
Date:   Thu Aug 3 10:18:09 2017 -0400

    TRUNK-5182: Refactored code within saveConcept and created new private methods listed below saveConcept in order of their calls. Did not remove code from saveConcept yet to avoid any bugs that would come along with an incorrect refactor.
    
    refactoring code and implementing private methods within saveConcept
    
    Fixing incorrectly unit test name that was causing errors and adding more descriptive function names
---
Seems to have squashed properly. Let me know if anything else needs to be done

![Codacy](https://www.codacy.com/assets/images/favicon.png) Here is an overview of what got changed by this pull request:


```diff

Complexity increasing per file
==============================
- api/src/main/java/org/openmrs/api/impl/ConceptServiceImpl.java  3
         
```


See the complete overview on [Codacy](https://www.codacy.com/app/openmrs/openmrs-core/pullRequest?prid=817250&bid=5035225)
        

[![Coverage Status](https://coveralls.io/builds/13117120/badge)](https://coveralls.io/builds/13117120)

Coverage decreased (-0.1%) to 56.763% when pulling **2a9ae6ee18361e5b254326e1e1aabb86cb2db306 on jrs33:TRUNK-5182** into **8d79fe631ccaa40bada5eb4cbca8d2cd7c70de95 on openmrs:master**.

@mks-d did you look at the travis failure log?
@dkayiwa , updated!
That's what happens on OpenJDK (I let you look at TravisCI's log):
>java.lang.IllegalArgumentException: interface org.openmrs.module.test1.api.Test1Service is not visible from class loader
I think my test had not run because i put it in this package: https://github.com/mekomsolutions/openmrs-core/tree/2aa3187cd11b23b3f1201f69ab629e759cd01ce5/api/src/test/java/org/openmrs/test
Are you now in a position to reproduce the bug then?
Yes i can reproduce.
@Kavindi183 are you still working on this?
@dkayiwa , if you had a chance to look into this, any clues?
@jerryb8, thanks for your PR! By analyzing the history of the files in this pull request, we identified @bmamlin, @teleivo and @suniala to be potential reviewers.

[![Coverage Status](https://coveralls.io/builds/13192606/badge)](https://coveralls.io/builds/13192606)

Coverage increased (+0.09%) to 56.859% when pulling **6613e74db9a14a9f32a8373c724775bbe12678a7 on jerryb8:TRUNK-5215** into **c7a8e88614472042d9dff2fa98bc248bbb1b3169 on openmrs:master**.


![Codacy](https://www.codacy.com/assets/images/favicon.png) Here is an overview of what got changed by this pull request:


```diff

Complexity increasing per file
==============================
- api/src/main/java/org/openmrs/patient/impl/BaseHyphenatedIdentifierValidator.java  1
         
```


See the complete overview on [Codacy](https://www.codacy.com/app/openmrs/openmrs-core/pullRequest?prid=899969&bid=5276017)
        

[![Coverage Status](https://coveralls.io/builds/13192879/badge)](https://coveralls.io/builds/13192879)

Coverage increased (+0.1%) to 56.868% when pulling **de266738e9423d7214e9f6eb9f6fb5a0c711840d on jerryb8:TRUNK-5215** into **c7a8e88614472042d9dff2fa98bc248bbb1b3169 on openmrs:master**.


[![Coverage Status](https://coveralls.io/builds/13193207/badge)](https://coveralls.io/builds/13193207)

Coverage increased (+0.02%) to 56.791% when pulling **9d739a2894de19d428ffecb1ca582fc41a35859e on jerryb8:TRUNK-5215** into **c7a8e88614472042d9dff2fa98bc248bbb1b3169 on openmrs:master**.

Yes, I,m going to try again to fix this issue.

On Fri, Sep 8, 2017 at 2:13 PM, dkayiwa <notifications@github.com> wrote:

> @Kavindi183 <https://github.com/kavindi183> are you still working on this?
>
> —
> You are receiving this because you were mentioned.
> Reply to this email directly, view it on GitHub
> <https://github.com/openmrs/openmrs-core/pull/2235#issuecomment-328042034>,
> or mute the thread
> <https://github.com/notifications/unsubscribe-auth/AcWMzBlMwAX_y2sk6L42GjPHOOE-U1R3ks5sgP4qgaJpZM4PIT6g>
> .
>

@jerryb8 it would be easier to review this if the commits were squashed into one as advised at https://wiki.openmrs.org/display/docs/Pull+Request+Tips
Ensure that you also do not commit any formatting changes.
@mks-d remove these lines and see what happens: https://github.com/openmrs/openmrs-core/blob/master/api/src/test/java/org/openmrs/test/StartModuleExecutionListener.java#L98-L109
Closing this because of the commit i have made at https://github.com/openmrs/openmrs-core/commit/95b6148964ebcc435e86bbbdee374904d1a3429e

[![Coverage Status](https://coveralls.io/builds/13215924/badge)](https://coveralls.io/builds/13215924)

Coverage increased (+0.02%) to 56.655% when pulling **4de2d819a1b1506f8205426d0edd08bd4107dbeb on mekomsolutions:TRUNK-5213** into **95b6148964ebcc435e86bbbdee374904d1a3429e on openmrs:master**.


[![Coverage Status](https://coveralls.io/builds/13216402/badge)](https://coveralls.io/builds/13216402)

Coverage increased (+0.02%) to 56.65% when pulling **e0c4fbc3c10c68817c5bce11e8b59b3c0df1acdd on mekomsolutions:TRUNK-5213** into **95b6148964ebcc435e86bbbdee374904d1a3429e on openmrs:master**.


[![Coverage Status](https://coveralls.io/builds/13219128/badge)](https://coveralls.io/builds/13219128)

Coverage decreased (-0.02%) to 56.614% when pulling **2930ce85facf2ec829b51a04f6eae91e8e55d40a on jerryb8:master** into **449e854c4a573f4d1048b383924c2b1b47fccbc1 on openmrs:master**.

@dkayiwa , let me know if you're ok with this now that TRUNK-5216 is solved.

[![Coverage Status](https://coveralls.io/builds/13230375/badge)](https://coveralls.io/builds/13230375)

Coverage decreased (-0.1%) to 56.514% when pulling **e45cae403f0cc31da896a8030136d0e0d895285c on jerryb8:TRUNK-5215** into **449e854c4a573f4d1048b383924c2b1b47fccbc1 on openmrs:master**.


[![Coverage Status](https://coveralls.io/builds/13246663/badge)](https://coveralls.io/builds/13246663)

Coverage increased (+0.02%) to 56.66% when pulling **b3b4e384aa182d7a084b31318d14528d4301a920 on mekomsolutions:TRUNK-5213** into **449e854c4a573f4d1048b383924c2b1b47fccbc1 on openmrs:master**.


![Codacy](https://www.codacy.com/assets/images/favicon.png) Here is an overview of what got changed by this pull request:


```diff

Complexity increasing per file
==============================
- api/src/main/java/org/openmrs/module/ModuleClassLoader.java  2
- api/src/main/java/org/openmrs/annotation/OpenmrsProfileExcludeFilter.java  2
         
```


See the complete overview on [Codacy](https://www.codacy.com/app/openmrs/openmrs-core/pullRequest?prid=885656&bid=5231669)
        

[![Coverage Status](https://coveralls.io/builds/13248547/badge)](https://coveralls.io/builds/13248547)

Coverage decreased (-0.006%) to 56.633% when pulling **df7d10f7b8229743ad3f83fcae82b8c9e0c059c3 on mekomsolutions:TRUNK-5213** into **449e854c4a573f4d1048b383924c2b1b47fccbc1 on openmrs:master**.


[![Coverage Status](https://coveralls.io/builds/13267657/badge)](https://coveralls.io/builds/13267657)

Coverage decreased (-0.03%) to 56.629% when pulling **b9b2ebe876d596cdf8f4939986ef0ce61c97b8de on jerryb8:TRUNK-5215** into **e04594822fb19117fe665623cf9b9b11b4834dba on openmrs:master**.


![Codacy](https://www.codacy.com/assets/images/favicon.png) Here is an overview of what got changed by this pull request:


```diff

Complexity increasing per file
==============================
- api/src/main/java/org/openmrs/patient/impl/BaseHyphenatedIdentifierValidator.java  1
         
```


See the complete overview on [Codacy](https://www.codacy.com/app/openmrs/openmrs-core/pullRequest?prid=905727&bid=5293729)
        
@DADMahindika are you still working on this?
@mks-d, thanks for your PR! By analyzing the history of the files in this pull request, we identified @bmamlin, @dkayiwa and @lluismf to be potential reviewers.

[![Coverage Status](https://coveralls.io/builds/13348941/badge)](https://coveralls.io/builds/13348941)

Coverage increased (+0.02%) to 55.609% when pulling **66bf8e64e8a35898b2908d9ef0cde301a8aa2518 on mekomsolutions:TRUNK-5213_2.1** into **c24ea4c09b16d4294a3edf2b63901fba49bd343e on openmrs:2.1.x**.


[![Coverage Status](https://coveralls.io/builds/13371805/badge)](https://coveralls.io/builds/13371805)

Coverage increased (+0.03%) to 55.624% when pulling **9c5335400158076473eaec35ac0b2398b2fd2df4 on mekomsolutions:TRUNK-5213_2.1** into **c24ea4c09b16d4294a3edf2b63901fba49bd343e on openmrs:2.1.x**.


[![Coverage Status](https://coveralls.io/builds/13373832/badge)](https://coveralls.io/builds/13373832)

Coverage increased (+0.03%) to 55.621% when pulling **4816fd2ae6026d8a8187615ff210d92f22804d80 on mekomsolutions:TRUNK-5213_2.1** into **c24ea4c09b16d4294a3edf2b63901fba49bd343e on openmrs:2.1.x**.

@FloBue, thanks for your PR! By analyzing the history of the files in this pull request, we identified @bmamlin, @mks-d and @lluismf to be potential reviewers.

![Codacy](https://www.codacy.com/assets/images/favicon.png) Here is an overview of what got changed by this pull request:


```diff

Issues
======
+ Solved 1
           

Complexity increasing per file
==============================
- web/src/main/java/org/openmrs/layout/web/name/NameTemplate.java  8
- web/src/main/java/org/openmrs/web/controller/user/UserFormController.java  3
- web/src/main/java/org/openmrs/module/web/controller/ModuleListController.java  4
- webapp/src/main/webapp/openmrs.js  2
- web/src/main/java/org/openmrs/web/filter/initialization/InitializationFilter.java  2
- api/src/main/java/org/openmrs/module/ModuleFactory.java  13
- api/src/main/java/org/openmrs/messagesource/impl/MessageSourceServiceImpl.java  1
- api/src/main/java/org/openmrs/api/impl/ProviderServiceImpl.java  1
- api/src/main/java/org/openmrs/api/impl/PatientServiceImpl.java  2
- api/src/main/java/org/openmrs/api/impl/OrderServiceImpl.java  26
- api/src/main/java/org/openmrs/api/impl/ConceptServiceImpl.java  8
- api/src/main/java/org/openmrs/api/impl/AdministrationServiceImpl.java  4
- api/src/main/java/org/openmrs/annotation/OpenmrsProfileExcludeFilter.java  3
- web/src/main/java/org/openmrs/web/controller/person/PersonFormController.java  12
- web/src/main/java/org/openmrs/web/controller/ConceptFormController.java  2
- web/src/main/java/org/openmrs/web/filter/GZIPFilter.java  13
- web/src/main/java/org/openmrs/web/Listener.java  1
- api/src/main/java/org/openmrs/validator/VisitValidator.java  25
- api/src/main/java/org/openmrs/util/databasechange/MigrateDrugOrderUnitsToCodedDoseUnitsChangeset.java  1
- api/src/main/java/org/openmrs/util/databasechange/MigrateDrugOrderFrequencyToCodedOrderFrequencyChangeset.java  1
- api/src/main/java/org/openmrs/util/databasechange/GenerateUuid.java  8
- api/src/main/java/org/openmrs/util/databasechange/CreateCodedOrderFrequencyForDrugOrderFrequencyChangeset.java  1
- api/src/main/java/org/openmrs/util/databasechange/ConvertOrderersToProviders.java  1
- api/src/main/java/org/openmrs/util/databasechange/CheckDrugOrderUnitAndFrequencyTextNotMappedToConcepts.java  1
- api/src/main/java/org/openmrs/util/OpenmrsUtil.java  7
- api/src/main/java/org/openmrs/util/OpenmrsClassLoader.java  7
- api/src/main/java/org/openmrs/util/HandlerUtil.java  17
- api/src/main/java/org/openmrs/serialization/SimpleXStreamSerializer.java  3
- api/src/main/java/org/openmrs/order/OrderUtil.java  3
- api/src/main/java/org/openmrs/PersonAttributeType.java  1
- api/src/main/java/org/openmrs/Person.java  7
- api/src/main/java/org/openmrs/Order.java  21
- api/src/main/java/org/openmrs/DrugOrder.java  11
- api/src/main/java/org/openmrs/validator/DrugOrderValidator.java  4
- api/src/main/java/org/openmrs/api/db/hibernate/HibernateOrderDAO.java  2
- api/src/main/java/org/openmrs/api/db/hibernate/HibernateLocationDAO.java  3
- api/src/main/java/org/openmrs/api/context/Daemon.java  3
- api/src/main/java/org/openmrs/api/context/Context.java  2
         

Complexity decreasing per file
==============================
+ api/src/main/java/org/openmrs/module/ModuleClassLoader.java  -8
+ api/src/main/java/org/openmrs/module/Module.java  -1
+ web/src/main/java/org/openmrs/web/controller/PortletController.java  -7
+ api/src/main/java/org/openmrs/api/impl/LocationServiceImpl.java  -1
+ api/src/main/java/org/openmrs/api/db/hibernate/HibernateConceptDAO.java  -2
         
```


See the complete overview on [Codacy](https://www.codacy.com/app/openmrs/openmrs-core/pullRequest?prid=933335&bid=5401392)
        
I just took a look at the codacy remarks. Should I tackle them first, then do another pull request? Or should I wait for you to check the problem with the parallel tests?
You are free to address them as i look at the parallel tests.
@FloBue three tests fail on my side. Is it the same with you?

Failed tests: 
  ImageHandlerTest.shouldGuessMimeTypeIfNotSpecified:154 null
  MediaHandlerTest.shouldGuessMimeTypeIfNotSpecified:162 null
  TextHandlerTest.shouldGuessMimeTypeIfNotSpecified:150 null
@djazayeri and @bmamlin does this seem in line with option D from [this design call](https://notes.openmrs.org/2016-08-31-Design-Forum)?

[![Coverage Status](https://coveralls.io/builds/13396511/badge)](https://coveralls.io/builds/13396511)

Coverage decreased (-0.06%) to 56.502% when pulling **abb327c2861c39c3103c75c9106fffa47a118344 on wluyima:TRUNK-4917-2** into **42b4339fa95ddaad4918cbc4b976b93af218f414 on openmrs:master**.

No, those tests all pass fine for me. I wouldn't have opened the PR if I had more problems on my side than the parallel tests. That is weird. Is there anything else that might help find the issue? Which variable is null in these tests?

I will take care of the codacy remarks tomorrow.
Hi @dkayiwa , just wondering if you had a chance to look at this PR? In particular as to why `OpenmrsProfileExcludeFilterWithModulesTest` is failing.
@mks-d put the test in the web instead of api sub project and tell me if it passes.
@FloBue can you do it without moving any of these tests?
That way i will see red only for code that you actually removed instead of just moved, and hence make it easier for me to figure out what is going on.
Thanks @dkayiwa , that worked. Here is the updated PR for TRUNK-5213 on 1.10.x.
It should be pretty quick comparing them since these are basically the same tests in each and every single one of these test classes, just some lines down.

Will it be okay this time? You will see it really is easy to see. Right now, I am going over the codacy remarks. Let me know if I should try this afterwards.
Codacy checks out fine now. Let me know your answer to my previous reply. Have you found out anything about the null exceptions that don't occur on my side?
@RanganaDe, thanks for your PR! By analyzing the history of the files in this pull request, we identified @suniala, @bmamlin and @lluismf to be potential reviewers.
@RanganaDe did you see the above travis failure?
Thanks @dkayiwa for merging this in. What was going on with TravisCI though?
@mks-d, thanks for your PR! By analyzing the history of the files in this pull request, we identified @bmamlin and @rkorytkowski to be potential reviewers.
Regarding which error?

[![Coverage Status](https://coveralls.io/builds/13414457/badge)](https://coveralls.io/builds/13414457)

Coverage increased (+0.1%) to 56.664% when pulling **a0e1bcdd1a25a963c68e3352289418bd115041fe on RanganaDe:TRUNK-5212** into **42b4339fa95ddaad4918cbc4b976b93af218f414 on openmrs:master**.

For some reason codacy now shows new complaints after it greenlighted this yesterday. I will take care of this today.

EDIT: Most of the Codacy complaints are because I named constants with all uppercase letters. Should I really change this? It is convention to not name constants with camelcase but uppercase letters as far as I am aware.  I adressed the rest of them.

[![Coverage Status](https://coveralls.io/builds/13415556/badge)](https://coveralls.io/builds/13415556)

Coverage increased (+0.03%) to 56.593% when pulling **6e726c8f2a0005c7c1aaa289912c8c4512965f84 on FloBue:TRUNK-5027** into **42b4339fa95ddaad4918cbc4b976b93af218f414 on openmrs:master**.

@FloBue can you check if we already have that here? https://wiki.openmrs.org/display/docs/Java+Conventions
Free free to add it if missing.
@mks-d do we plan back porting this to 1.9.x? I thought we were stopping at 1.10.x
I added a line to the wiki to make that clear. Somebody would have to add that rule to the codacy checks.
@FloBue thanks for adding it. Do you also wanna volunteer to update codacy? 😊 
I have updated all tests and the diff looks cleaner now. I've also changed some details about the tests to make their success more reliable, since I used random bytes before, that could potentially cause errors. Let me know if there is anything else.

Sure, I've never done anything with codacy but if you can point me in some direction I'd be willing to do it!

Oh by the way, something seems to be fishy with the test coverage statistics. It went down after I committed the restructured files. I took a look and there are lines marked as untested on coveralls that actually get run by the tests, I just checked it by hand. One example would be AbstractHandler.java:133 and following.

![Codacy](https://www.codacy.com/assets/images/favicon.png) Here is an overview of what got changed by this pull request:


```diff

Complexity increasing per file
==============================
- api/src/main/java/org/openmrs/obs/handler/TextHandler.java  1
- api/src/main/java/org/openmrs/obs/handler/MediaHandler.java  1
- api/src/main/java/org/openmrs/obs/handler/BinaryStreamHandler.java  1
- api/src/main/java/org/openmrs/obs/handler/BinaryDataHandler.java  1
- api/src/main/java/org/openmrs/obs/handler/AbstractHandler.java  8
         

Complexity decreasing per file
==============================
+ api/src/main/java/org/openmrs/obs/handler/ImageHandler.java  -2
         
```


See the complete overview on [Codacy](https://www.codacy.com/app/openmrs/openmrs-core/pullRequest?prid=932243&bid=5398246)
        

[![Coverage Status](https://coveralls.io/builds/13422909/badge)](https://coveralls.io/builds/13422909)

Coverage decreased (-0.07%) to 56.484% when pulling **278a57f1bdd92c1269c04b1c245f7599d07770ae on FloBue:TRUNK-5027** into **42b4339fa95ddaad4918cbc4b976b93af218f414 on openmrs:master**.


![Codacy](https://www.codacy.com/assets/images/favicon.png) Here is an overview of what got changed by this pull request:


```diff

Issues
======
+ Solved 8
- Added 2
           

Complexity decreasing per file
==============================
+ api/src/main/java/org/openmrs/notification/impl/MessageServiceImpl.java  -20
         
```


See the complete overview on [Codacy](https://www.codacy.com/app/openmrs/openmrs-core/pullRequest?prid=941371&bid=5423399)
        
I know, I got it wrong, but [AH requires Core 1.9.0](https://github.com/openmrs/openmrs-module-addresshierarchy/blob/5553a09e0fa12874169aa9ae894d099f688e0719/omod/src/main/resources/config.xml#L22)...
However perhaps this is not relevant anymore and 1.10 is enough, @mogoodrich?
I don't see any problems with upgrading Address Hierarchy to require 1.10.x @mks-d 


Actually @mks-d to follow up, @mseaton  reminds me that one of our older implementations still runs 1.9 and uses Address Hierarchy.

That being said, we've got to upgrade at some point and can't have people needing to backport 4+ versions every time.

So, if you've already done the work backporting to 1.9 or it's almost done (and there isn't a large testing burden), let's do that, but if it's going to be a pain, 1.10 is fine.
@dkayiwa , can we merge this in then?

[![Coverage Status](https://coveralls.io/builds/13451969/badge)](https://coveralls.io/builds/13451969)

Coverage decreased (-0.04%) to 56.521% when pulling **da4bba954865738d5a0e113d2a3d6672ace7ff32 on RanganaDe:TRUNK-5047** into **42b4339fa95ddaad4918cbc4b976b93af218f414 on openmrs:master**.

Let me update it! I've forgotten to remove changes I did for another issue.
I'll make the necessary changes and let you know ASAP.

On Wed, Sep 27, 2017 at 9:39 PM, Wyclif Luyima <notifications@github.com>
wrote:

> *@wluyima* commented on this pull request.
> ------------------------------
>
> In api/src/test/java/org/openmrs/api/ProgramWorkflowServiceTest.java
> <https://github.com/openmrs/openmrs-core/pull/2250#discussion_r141392963>:
>
> > @@ -67,8 +69,12 @@ public void runBeforeEachTest() {
>  			encounterService = Context.getEncounterService();
>  			cs = Context.getConceptService();
>  		}
> +
>
> I think you should revert all changes in this file
>
> —
> You are receiving this because you authored the thread.
> Reply to this email directly, view it on GitHub
> <https://github.com/openmrs/openmrs-core/pull/2250#pullrequestreview-65600045>,
> or mute the thread
> <https://github.com/notifications/unsubscribe-auth/AbNoEg3NgYqFh0JXaWspJP9Ht2SoqrGPks5smnM4gaJpZM4PlZtF>
> .
>


[![Coverage Status](https://coveralls.io/builds/13460419/badge)](https://coveralls.io/builds/13460419)

Coverage increased (+0.07%) to 56.629% when pulling **672ef83b9aa653d1418b02030184b658808cd89e on RanganaDe:TRUNK-5047** into **42b4339fa95ddaad4918cbc4b976b93af218f414 on openmrs:master**.


![Codacy](https://www.codacy.com/assets/images/favicon.png) Here is an overview of what got changed by this pull request:


```diff

Issues
======
- Added 3
           

Complexity increasing per file
==============================
- api/src/main/java/org/openmrs/PersonName.java  1
         
```


See the complete overview on [Codacy](https://www.codacy.com/app/openmrs/openmrs-core/pullRequest?prid=880777&bid=5218085)
        
TRUNK-5062

![Codacy](https://www.codacy.com/assets/images/favicon.png) Here is an overview of what got changed by this pull request:


```diff

Complexity increasing per file
==============================
- api/src/main/java/org/openmrs/api/impl/EncounterServiceImpl.java  3
         
```


See the complete overview on [Codacy](https://www.codacy.com/app/openmrs/openmrs-core/pullRequest?prid=879797&bid=5214771)
        

[![Coverage Status](https://coveralls.io/builds/13464008/badge)](https://coveralls.io/builds/13464008)

Coverage increased (+0.09%) to 56.651% when pulling **9cba8d063879e5c988d706692045926c962acfa0 on SenaniDananjali:master** into **42b4339fa95ddaad4918cbc4b976b93af218f414 on openmrs:master**.


[![Coverage Status](https://coveralls.io/builds/13469173/badge)](https://coveralls.io/builds/13469173)

Coverage decreased (-0.008%) to 56.55% when pulling **a1cb6fc2e53cc7d095abc84ebbb111c21809e4df on dilinisoyza:master** into **42b4339fa95ddaad4918cbc4b976b93af218f414 on openmrs:master**.


![Codacy](https://www.codacy.com/assets/images/favicon.png) Here is an overview of what got changed by this pull request:


```diff

Issues
======
- Added 2
           
```


See the complete overview on [Codacy](https://www.codacy.com/app/openmrs/openmrs-core/pullRequest?prid=948195&bid=5439125)
        

[![Coverage Status](https://coveralls.io/builds/13469319/badge)](https://coveralls.io/builds/13469319)

Coverage decreased (-0.002%) to 56.556% when pulling **48d23e750f1ed0e05813a57550e36fa4bd1f1493 on dilinisoyza:master** into **42b4339fa95ddaad4918cbc4b976b93af218f414 on openmrs:master**.


[![Coverage Status](https://coveralls.io/builds/13469465/badge)](https://coveralls.io/builds/13469465)

Coverage decreased (-0.004%) to 56.554% when pulling **5730aaf2c022be394399c1cd915b979f07e28ba4 on DADMahindika:master** into **42b4339fa95ddaad4918cbc4b976b93af218f414 on openmrs:master**.


![Codacy](https://www.codacy.com/assets/images/favicon.png) Here is an overview of what got changed by this pull request:


```diff

Issues
======
- Added 7
           

Complexity increasing per file
==============================
- api/src/main/java/org/openmrs/api/impl/EncounterServiceImpl.java  3
         

Complexity decreasing per file
==============================
+ api/src/main/java/org/openmrs/api/impl/LocationServiceImpl.java  -2
         
```


See the complete overview on [Codacy](https://www.codacy.com/app/openmrs/openmrs-core/pullRequest?prid=948221&bid=5439173)
        

![Codacy](https://www.codacy.com/assets/images/favicon.png) Here is an overview of what got changed by this pull request:


```diff

Issues
======
+ Solved 1
- Added 6
           

Complexity increasing per file
==============================
- api/src/main/java/org/openmrs/api/context/Context.java  2
         
```


See the complete overview on [Codacy](https://www.codacy.com/app/openmrs/openmrs-core/pullRequest?prid=948227&bid=5439185)
        

![Codacy](https://www.codacy.com/assets/images/favicon.png) Here is an overview of what got changed by this pull request:


```diff

Issues
======
- Added 3
           

Complexity decreasing per file
==============================
+ api/src/main/java/org/openmrs/api/impl/LocationServiceImpl.java  -2
         
```


See the complete overview on [Codacy](https://www.codacy.com/app/openmrs/openmrs-core/pullRequest?prid=947483&bid=5437065)
        

[![Coverage Status](https://coveralls.io/builds/13469713/badge)](https://coveralls.io/builds/13469713)

Coverage decreased (-0.02%) to 56.541% when pulling **01298eaa3578e5ef08287c2fd9ba2634a708f469 on DADMahindika:master** into **42b4339fa95ddaad4918cbc4b976b93af218f414 on openmrs:master**.


[![Coverage Status](https://coveralls.io/builds/13471417/badge)](https://coveralls.io/builds/13471417)

Coverage decreased (-0.04%) to 56.515% when pulling **f2d907c1da893373ba82ab1e9041b5d7c9e9e01d on nisharakavindi:master** into **42b4339fa95ddaad4918cbc4b976b93af218f414 on openmrs:master**.


[![Coverage Status](https://coveralls.io/builds/13475912/badge)](https://coveralls.io/builds/13475912)

Coverage increased (+0.07%) to 56.629% when pulling **d4e09938687505e07ca644738870d930276caabc on nisharakavindi:master** into **42b4339fa95ddaad4918cbc4b976b93af218f414 on openmrs:master**.


[![Coverage Status](https://coveralls.io/builds/13477108/badge)](https://coveralls.io/builds/13477108)

Coverage decreased (-0.03%) to 56.529% when pulling **0305d2c571d468d6c96cf04d3632180ce1f34b62 on nisharakavindi:master** into **42b4339fa95ddaad4918cbc4b976b93af218f414 on openmrs:master**.


[![Coverage Status](https://coveralls.io/builds/13477582/badge)](https://coveralls.io/builds/13477582)

Coverage increased (+0.06%) to 56.622% when pulling **7a6db663ab9c3852403a8995dcdf7e39ad59fd0f on Kavindi183:master** into **42b4339fa95ddaad4918cbc4b976b93af218f414 on openmrs:master**.

You didn't have to close the PR, you can always have it updated with your new code changes by committing to the same branch and pushing the changes

![Codacy](https://www.codacy.com/assets/images/favicon.png) Here is an overview of what got changed by this pull request:


```diff

Complexity increasing per file
==============================
- api/src/main/java/org/openmrs/api/impl/EncounterServiceImpl.java  3
         
```


See the complete overview on [Codacy](https://www.codacy.com/app/openmrs/openmrs-core/pullRequest?prid=948521&bid=5439755)
        
We discourage combining work for multiple tickets into one PR, e.g jira won't be able pick up the PR to link it to the ticket and it becomes hard to follow up the work in the future, do you mind splitting it up?

![Codacy](https://www.codacy.com/assets/images/favicon.png) Here is an overview of what got changed by this pull request:


```diff

Issues
======
- Added 4
           

Complexity increasing per file
==============================
- api/src/main/java/org/openmrs/api/impl/EncounterServiceImpl.java  2
         

Complexity decreasing per file
==============================
+ api/src/main/java/org/openmrs/api/impl/LocationServiceImpl.java  -2
         
```


See the complete overview on [Codacy](https://www.codacy.com/app/openmrs/openmrs-core/pullRequest?prid=948569&bid=5439859)
        

![Codacy](https://www.codacy.com/assets/images/favicon.png) Here is an overview of what got changed by this pull request:


```diff

Complexity increasing per file
==============================
- api/src/main/java/org/openmrs/api/impl/EncounterServiceImpl.java  2
         
```


See the complete overview on [Codacy](https://www.codacy.com/app/openmrs/openmrs-core/pullRequest?prid=949905&bid=5442875)
        

[![Coverage Status](https://coveralls.io/builds/13485150/badge)](https://coveralls.io/builds/13485150)

Coverage decreased (-0.3%) to 56.556% when pulling **aecaf51c7b2d39ae0437f9a5af03f080ae69bc8b on tenas97:TRUNK-4939** into **b93dcb2797a40525c435913f6c2887d14ffbf2de on openmrs:master**.


[![Coverage Status](https://coveralls.io/builds/13485190/badge)](https://coveralls.io/builds/13485190)

Coverage decreased (-0.01%) to 56.538% when pulling **a17d12031f6bef4bc79e73af002a6c48dbb0c500 on tenas97:TRUNK-4939** into **f9ca2af33ea246c03f23bc1f177c88c7209c0fae on openmrs:master**.


[![Coverage Status](https://coveralls.io/builds/13485370/badge)](https://coveralls.io/builds/13485370)

Coverage decreased (-0.005%) to 56.544% when pulling **64d30f591ced4983d6e40b15eb38920fc14ee880 on tenas97:TRUNK-4939** into **f9ca2af33ea246c03f23bc1f177c88c7209c0fae on openmrs:master**.


[![Coverage Status](https://coveralls.io/builds/13485419/badge)](https://coveralls.io/builds/13485419)

Coverage decreased (-0.02%) to 56.532% when pulling **64d30f591ced4983d6e40b15eb38920fc14ee880 on tenas97:TRUNK-4939** into **f9ca2af33ea246c03f23bc1f177c88c7209c0fae on openmrs:master**.


[![Coverage Status](https://coveralls.io/builds/13490886/badge)](https://coveralls.io/builds/13490886)

Coverage increased (+0.0005%) to 56.549% when pulling **239f510250f6587c068a8307a584ccc132030179 on Kavindi183:TRUNK-5059** into **f9ca2af33ea246c03f23bc1f177c88c7209c0fae on openmrs:master**.


![Codacy](https://www.codacy.com/assets/images/favicon.png) Here is an overview of what got changed by this pull request:


```diff

Issues
======
- Added 1
           

Complexity increasing per file
==============================
- api/src/main/java/org/openmrs/api/impl/EncounterServiceImpl.java  2
         

Complexity decreasing per file
==============================
+ api/src/main/java/org/openmrs/api/impl/LocationServiceImpl.java  -2
         
```


See the complete overview on [Codacy](https://www.codacy.com/app/openmrs/openmrs-core/pullRequest?prid=951557&bid=5448002)
        

[![Coverage Status](https://coveralls.io/builds/13490971/badge)](https://coveralls.io/builds/13490971)

Coverage decreased (-0.006%) to 56.543% when pulling **ee900628859264c9239771a564712f983b7b5d76 on Kavindi183:TRUNK-5059** into **f9ca2af33ea246c03f23bc1f177c88c7209c0fae on openmrs:master**.


[![Coverage Status](https://coveralls.io/builds/13491086/badge)](https://coveralls.io/builds/13491086)

Coverage increased (+0.08%) to 56.63% when pulling **6ff85efa7b626261d858f6fce725a69e084e2c54 on Kavindi183:TRUNK-5059-FinaleCode** into **f9ca2af33ea246c03f23bc1f177c88c7209c0fae on openmrs:master**.


![Codacy](https://www.codacy.com/assets/images/favicon.png) Here is an overview of what got changed by this pull request:


```diff

Complexity increasing per file
==============================
- api/src/main/java/org/openmrs/api/impl/EncounterServiceImpl.java  2
         

Complexity decreasing per file
==============================
+ api/src/main/java/org/openmrs/api/impl/LocationServiceImpl.java  -2
         
```


See the complete overview on [Codacy](https://www.codacy.com/app/openmrs/openmrs-core/pullRequest?prid=951595&bid=5448081)
        

[![Coverage Status](https://coveralls.io/builds/13491136/badge)](https://coveralls.io/builds/13491136)

Coverage decreased (-0.02%) to 56.529% when pulling **28af91dbba6b402539d45d34eee6bdbf4c6295ea on Kavindi183:TRUNK-5059-FinaleCode** into **f9ca2af33ea246c03f23bc1f177c88c7209c0fae on openmrs:master**.


![Codacy](https://www.codacy.com/assets/images/favicon.png) Here is an overview of what got changed by this pull request:


```diff

Complexity increasing per file
==============================
- api/src/main/java/org/openmrs/api/impl/EncounterServiceImpl.java  2
         

Complexity decreasing per file
==============================
+ api/src/main/java/org/openmrs/api/impl/LocationServiceImpl.java  -2
         
```


See the complete overview on [Codacy](https://www.codacy.com/app/openmrs/openmrs-core/pullRequest?prid=951605&bid=5448120)
        

[![Coverage Status](https://coveralls.io/builds/13491242/badge)](https://coveralls.io/builds/13491242)

Coverage increased (+0.07%) to 56.622% when pulling **d3610f6b8dc6cf6be16b047fecb4841b08407b4d on Kavindi183:TRUNK-5059-New** into **f9ca2af33ea246c03f23bc1f177c88c7209c0fae on openmrs:master**.


![Codacy](https://www.codacy.com/assets/images/favicon.png) Here is an overview of what got changed by this pull request:


```diff

Issues
======
- Added 15
           

Complexity increasing per file
==============================
- api/src/main/java/org/openmrs/notification/impl/AlertServiceImpl.java  9
         
```


See the complete overview on [Codacy](https://www.codacy.com/app/openmrs/openmrs-core/pullRequest?prid=952181&bid=5449310)
        

[![Coverage Status](https://coveralls.io/builds/13494628/badge)](https://coveralls.io/builds/13494628)

Coverage increased (+0.06%) to 56.604% when pulling **626641f3851fbb5ccf3671d557cbf783d805f238 on iranganN:TRUNK-5189** into **f9ca2af33ea246c03f23bc1f177c88c7209c0fae on openmrs:master**.


[![Coverage Status](https://coveralls.io/builds/13495407/badge)](https://coveralls.io/builds/13495407)

Coverage decreased (-0.04%) to 56.505% when pulling **0a59560e8bee7fe9847ba6b54bcdfe4959612e2e on iranganN:TRUNK-5189** into **f9ca2af33ea246c03f23bc1f177c88c7209c0fae on openmrs:master**.

I should mention that I will be on vacation from October 1st to October 15th, so I won't be able to reply or fix any remaining issues until then. The open issues I can think about are those in my last comment. I don't really know why definitely tested lines now show up as untested in the coverage, maybe you've got an idea. If you can point me somewhere concerning codacy, I'd get to it when I get back.

[![Coverage Status](https://coveralls.io/builds/13499369/badge)](https://coveralls.io/builds/13499369)

Coverage decreased (-0.008%) to 56.541% when pulling **886cc70fba2b5e0a69346aa4a2ec87f4e79fcacb on dilinisoyza:LUI-83** into **f9ca2af33ea246c03f23bc1f177c88c7209c0fae on openmrs:master**.


[![Coverage Status](https://coveralls.io/builds/13499477/badge)](https://coveralls.io/builds/13499477)

Coverage decreased (-0.03%) to 56.516% when pulling **886cc70fba2b5e0a69346aa4a2ec87f4e79fcacb on dilinisoyza:LUI-83** into **f9ca2af33ea246c03f23bc1f177c88c7209c0fae on openmrs:master**.


[![Coverage Status](https://coveralls.io/builds/13499808/badge)](https://coveralls.io/builds/13499808)

Coverage decreased (-0.01%) to 56.538% when pulling **c50f07bce433c74c89f007573239c41a85a95e8e on dilinisoyza:LUI-83** into **f9ca2af33ea246c03f23bc1f177c88c7209c0fae on openmrs:master**.

Thanks for your pull request, what is the ticket number? It's good practice to include it in the commit message and pull request description.

[![Coverage Status](https://coveralls.io/builds/13501232/badge)](https://coveralls.io/builds/13501232)

Coverage increased (+0.05%) to 56.608% when pulling **fa57c91139dadeb5a35a230f1c5c16958208c238 on wluyima:TRUNK-4917-2** into **42b4339fa95ddaad4918cbc4b976b93af218f414 on openmrs:master**.

Can you squash these commits into one as advised at? https://wiki.openmrs.org/display/docs/Pull+Request+Tips
@tenas97 did you see the codacy comments?

![Codacy](https://www.codacy.com/assets/images/favicon.png) Here is an overview of what got changed by this pull request:


```diff

Issues
======
- Added 51
           

Complexity increasing per file
==============================
- web/src/main/java/org/openmrs/web/controller/program/PatientProgramFormController.java  5
- web/src/main/java/org/openmrs/web/controller/form/FormResourceController.java  1
- web/src/main/java/org/openmrs/web/controller/LoginController.java  5
- web/src/main/java/org/openmrs/web/controller/patient/PatientDashboardGraphController.java  1
- web/src/main/java/org/openmrs/web/controller/concept/ConceptReferenceTermWebValidator.java  1
- webapp/src/main/webapp/WEB-INF/view/scripts/calendar/calendar.js  1
- web/src/main/java/org/openmrs/web/filter/GZIPFilter.java  13
- web/src/main/java/org/openmrs/web/Listener.java  3
- web/src/main/java/org/openmrs/module/web/controller/ModuleListController.java  5
- web/src/main/java/org/openmrs/web/controller/person/PersonFormController.java  12
- web/src/main/java/org/openmrs/web/controller/ConceptFormController.java  3
- web/src/main/java/org/openmrs/module/web/WebModuleUtil.java  3
- web/src/main/java/org/openmrs/module/web/ModuleResourcesServlet.java  1
- api/src/main/java/org/openmrs/validator/PersonValidator.java  2
- api/src/main/java/org/openmrs/scheduler/timer/TimerSchedulerServiceImpl.java  2
- web/src/main/java/org/openmrs/layout/web/name/NameTemplate.java  8
- webapp/src/main/webapp/WEB-INF/view/scripts/hl7_in_archive.js  1
- api/src/main/java/org/openmrs/order/OrderUtil.java  5
- api/src/main/java/org/openmrs/module/ModuleFileParser.java  3
- api/src/main/java/org/openmrs/module/ModuleFactory.java  12
- api/src/main/java/org/openmrs/module/ModuleConditionalResource.java  2
- api/src/main/java/org/openmrs/module/Module.java  1
- api/src/main/java/org/openmrs/messagesource/impl/MessageSourceServiceImpl.java  1
- api/src/main/java/org/openmrs/api/impl/ProgramWorkflowServiceImpl.java  1
- api/src/main/java/org/openmrs/api/impl/PatientSetServiceImpl.java  1
- api/src/main/java/org/openmrs/api/impl/PatientServiceImpl.java  5
- api/src/main/java/org/openmrs/api/impl/FormServiceImpl.java  1
- api/src/main/java/org/openmrs/api/impl/ConceptServiceImpl.java  2
- api/src/main/java/org/openmrs/validator/ConceptReferenceTermValidator.java  1
- api/src/main/java/org/openmrs/validator/ConceptNameTagValidator.java  1
- api/src/main/java/org/openmrs/util/databasechange/GenerateUuid.java  8
- api/src/main/java/org/openmrs/util/Reflect.java  2
- api/src/main/java/org/openmrs/util/HandlerUtil.java  17
- api/src/main/java/org/openmrs/serialization/SimpleXStreamSerializer.java  3
- api/src/main/java/org/openmrs/api/db/hibernate/search/LuceneQuery.java  2
- api/src/main/java/org/openmrs/api/db/hibernate/PersonSearchCriteria.java  2
- api/src/main/java/org/openmrs/api/db/hibernate/PatientSearchCriteria.java  8
- api/src/main/java/org/openmrs/api/db/hibernate/HibernateProviderDAO.java  4
- api/src/main/java/org/openmrs/api/db/hibernate/HibernatePatientDAO.java  3
- api/src/main/java/org/openmrs/api/db/hibernate/HibernateLocationDAO.java  3
- api/src/main/java/org/openmrs/annotation/OpenmrsProfileExcludeFilter.java  3
- api/src/main/java/org/openmrs/Visit.java  4
- api/src/main/java/org/openmrs/User.java  1
- api/src/main/java/org/openmrs/SimpleDosingInstructions.java  10
- api/src/main/java/org/openmrs/PersonAttributeType.java  1
- api/src/main/java/org/openmrs/Person.java  7
- api/src/main/java/org/openmrs/Obs.java  15
- api/src/main/java/org/openmrs/FreeTextDosingInstructions.java  1
- puppet/modules/stdlib/lib/puppet/provider/file_line/ruby.rb  6
         

Complexity decreasing per file
==============================
+ webapp/src/main/webapp/openmrs.js  -2
+ api/src/main/java/org/openmrs/validator/PatientValidator.java  -1
+ api/src/main/java/org/openmrs/module/ModuleClassLoader.java  -4
+ api/src/main/java/org/openmrs/api/impl/LocationServiceImpl.java  -1
+ api/src/main/java/org/openmrs/util/databasechange/DuplicateEncounterTypeNameChangeSet.java  -2
+ api/src/main/java/org/openmrs/util/databasechange/DuplicateEncounterRoleNameChangeSet.java  -2
+ api/src/main/java/org/openmrs/util/OpenmrsUtil.java  -2
+ api/src/main/java/org/openmrs/util/OpenmrsClassLoader.java  -7
+ api/src/main/java/org/openmrs/api/handler/ExistingOrNewVisitAssignmentHandler.java  -2
+ api/src/main/java/org/openmrs/api/db/hibernate/HibernateConceptDAO.java  -6
+ api/src/main/java/org/openmrs/PersonAttribute.java  -6
+ api/src/main/java/org/openmrs/Location.java  -3
         
```


See the complete overview on [Codacy](https://www.codacy.com/app/openmrs/openmrs-core/pullRequest?prid=955920&bid=5459720)
        

![Codacy](https://www.codacy.com/assets/images/favicon.png) Here is an overview of what got changed by this pull request:


```diff

Issues
======
+ Solved 2
- Added 2
           
```


See the complete overview on [Codacy](https://www.codacy.com/app/openmrs/openmrs-core/pullRequest?prid=956034&bid=5460078)
        
Am closing this because it has too many previous commits. Can you create a new pull request?
Did you get a chance to look at this? https://wiki.openmrs.org/display/docs/Using+Git

[![Coverage Status](https://coveralls.io/builds/13529632/badge)](https://coveralls.io/builds/13529632)

Coverage decreased (-0.02%) to 56.527% when pulling **5912530e2c289560bbf436f7bcb34aede4b89931 on oslynn:TRUNK-5223** into **f9ca2af33ea246c03f23bc1f177c88c7209c0fae on openmrs:master**.


[![Coverage Status](https://coveralls.io/builds/13529655/badge)](https://coveralls.io/builds/13529655)

Coverage decreased (-0.003%) to 56.546% when pulling **5912530e2c289560bbf436f7bcb34aede4b89931 on oslynn:TRUNK-5223** into **f9ca2af33ea246c03f23bc1f177c88c7209c0fae on openmrs:master**.


![Codacy](https://www.codacy.com/assets/images/favicon.png) Here is an overview of what got changed by this pull request:


```diff

Complexity increasing per file
==============================
- api/src/main/java/org/openmrs/propertyeditor/PersonEditor.java  1
- api/src/main/java/org/openmrs/propertyeditor/ConceptReferenceTermEditor.java  1
- api/src/main/java/org/openmrs/propertyeditor/ConceptMapTypeEditor.java  1
         
```


See the complete overview on [Codacy](https://www.codacy.com/app/openmrs/openmrs-core/pullRequest?prid=957774&bid=5463709)
        

![Codacy](https://www.codacy.com/assets/images/favicon.png) Here is an overview of what got changed by this pull request:


```diff

Issues
======
+ Solved 27
- Added 83
           

Complexity increasing per file
==============================
- src/api/org/openmrs/Drug.java  2
- test/api/org/openmrs/api/ConceptServiceTest.java  22
- test/api/org/openmrs/api/PersonServiceTest.java  3
- src/api/org/openmrs/module/Module.java  1
- test/api/org/openmrs/PatientIdentifierTest.java  3
- src/api/org/openmrs/api/db/hibernate/HibernateConceptDAO.java  1
- src/api/org/openmrs/api/impl/LocationServiceImpl.java  1
- src/api/org/openmrs/api/context/ServiceContext.java  4
- src/web/org/openmrs/web/Listener.java  1
- src/web/org/openmrs/web/taglib/DatePatternTag.java  4
- test/api/org/openmrs/PersonTest.java  4
- src/api/org/openmrs/module/ModuleClassLoader.java  9
- src/web/org/openmrs/web/dwr/ObsListItem.java  1
- test/api/org/openmrs/validator/ConceptValidatorTest.java  2
- src/web/org/openmrs/web/servlet/LoginServlet.java  1
- src/api/org/openmrs/api/impl/PersonServiceImpl.java  3
- src/web/org/openmrs/web/controller/program/PatientProgramFormController.java  2
- test/api/org/openmrs/api/handler/ConceptNameSaveHandlerTest.java  3
- src/api/org/openmrs/propertyeditor/PersonEditor.java  1
- src/api/org/openmrs/Person.java  3
- src/api/org/openmrs/hl7/impl/HL7ServiceImpl.java  24
- web/openmrs.js  3
- test/api/org/openmrs/ConceptTest.java  1
- src/api/org/openmrs/module/ModuleUtil.java  28
- src/api/org/openmrs/arden/ArdenBaseTreeParser.java  3
- src/web/org/openmrs/web/taglib/RequireTag.java  3
- src/api/org/openmrs/validator/DrugOrderValidator.java  4
- src/api/org/openmrs/hl7/HL7Util.java  1
- test/web/org/openmrs/web/controller/ConceptFormControllerTest.java  2
- src/api/org/openmrs/validator/ConceptValidator.java  1
- src/web/org/openmrs/web/filter/StartupFilter.java  2
- src/api/org/openmrs/util/databasechange/ConceptValidatorChangeSet.java  18
- test/api/org/openmrs/api/PatientSetServiceTest.java  2
- src/api/org/openmrs/User.java  1
- web/WEB-INF/view/scripts/hl7_in_archive.js  6
- test/api/org/openmrs/PatientTest.java  1
- src/api/org/openmrs/util/DatabaseUpdater.java  2
- src/api/org/openmrs/aop/RequiredDataAdvice.java  4
- src/api/org/openmrs/arden/MLMObject.java  40
- src/api/org/openmrs/Location.java  8
- test/api/org/openmrs/api/EncounterServiceTest.java  1
- src/api/org/openmrs/api/db/hibernate/HibernatePatientSetDAO.java  1
- src/api/org/openmrs/api/impl/EncounterServiceImpl.java  1
- src/api/org/openmrs/Patient.java  2
- src/api/org/openmrs/util/OpenmrsClassLoader.java  15
- src/web/org/openmrs/web/dwr/DWRProgramWorkflowService.java  3
- test/api/org/openmrs/api/PatientServiceTest.java  2
         

Complexity decreasing per file
==============================
+ src/api/org/openmrs/ConceptComplex.java  -1
+ src/web/org/openmrs/web/dwr/DWREncounterService.java  -1
+ src/web/org/openmrs/hl7/web/controller/Hl7InErrorListController.java  -1
+ src/api/org/openmrs/hl7/Hl7InArchivesMigrateThread.java  -1
+ src/api/org/openmrs/PatientIdentifier.java  -3
+ src/web/org/openmrs/web/dwr/DWRHL7Service.java  -1
+ src/api/org/openmrs/arden/ArdenBaseParser.java  -3
+ src/web/org/openmrs/web/controller/patient/NewPatientFormController.java  -1
+ web/admin/forms/formSchemaDesign.js  -2
+ web/WEB-INF/view/scripts/calendar/calendar.js  -5
         
```


See the complete overview on [Codacy](https://www.codacy.com/app/openmrs/openmrs-core/pullRequest?prid=959202&bid=5466792)
        

[![Coverage Status](https://coveralls.io/builds/13538453/badge)](https://coveralls.io/builds/13538453)

Coverage decreased (-0.006%) to 56.543% when pulling **5870cfefda861fbfa69e2b704806200cb5b1f337 on ravirajmane:master** into **f9ca2af33ea246c03f23bc1f177c88c7209c0fae on openmrs:master**.


![Codacy](https://www.codacy.com/assets/images/favicon.png) Here is an overview of what got changed by this pull request:


```diff

Issues
======
- Added 6
           
```


See the complete overview on [Codacy](https://www.codacy.com/app/openmrs/openmrs-core/pullRequest?prid=959291&bid=5466971)
        

[![Coverage Status](https://coveralls.io/builds/13543388/badge)](https://coveralls.io/builds/13543388)

Coverage increased (+0.07%) to 56.617% when pulling **5912530e2c289560bbf436f7bcb34aede4b89931 on oslynn:TRUNK-5223** into **f9ca2af33ea246c03f23bc1f177c88c7209c0fae on openmrs:master**.


[![Coverage Status](https://coveralls.io/builds/13543520/badge)](https://coveralls.io/builds/13543520)

Coverage remained the same at 56.549% when pulling **5912530e2c289560bbf436f7bcb34aede4b89931 on oslynn:TRUNK-5223** into **f9ca2af33ea246c03f23bc1f177c88c7209c0fae on openmrs:master**.


[![Coverage Status](https://coveralls.io/builds/13543911/badge)](https://coveralls.io/builds/13543911)

Coverage decreased (-0.03%) to 56.515% when pulling **5912530e2c289560bbf436f7bcb34aede4b89931 on oslynn:TRUNK-5223** into **f9ca2af33ea246c03f23bc1f177c88c7209c0fae on openmrs:master**.


[![Coverage Status](https://coveralls.io/builds/13558743/badge)](https://coveralls.io/builds/13558743)

Coverage increased (+0.008%) to 56.557% when pulling **ef9954050cb8dc3ca29511ac1e5644fb07525088 on tahiraniazi:Trunk-5062** into **f9ca2af33ea246c03f23bc1f177c88c7209c0fae on openmrs:master**.


[![Coverage Status](https://coveralls.io/builds/13561080/badge)](https://coveralls.io/builds/13561080)

Coverage increased (+0.1%) to 56.645% when pulling **484a7ca19ea4dc01bd6a13cc10fab251fc5b0a18 on tenas97:TRUNK-4939** into **f9ca2af33ea246c03f23bc1f177c88c7209c0fae on openmrs:master**.

Closing this PR as commits are pushed without squash.

![Codacy](https://www.codacy.com/assets/images/favicon.png) Here is an overview of what got changed by this pull request:


```diff

Complexity increasing per file
==============================
- api/src/main/java/org/openmrs/api/impl/EncounterServiceImpl.java  3
         
```


See the complete overview on [Codacy](https://www.codacy.com/app/openmrs/openmrs-core/pullRequest?prid=962798&bid=5476360)
        

[![Coverage Status](https://coveralls.io/builds/13561798/badge)](https://coveralls.io/builds/13561798)

Coverage decreased (-0.02%) to 56.526% when pulling **319159a1a732e0fce103b71f5f5ecd480fbb2e89 on tahiraniazi:Trunk-5062** into **f9ca2af33ea246c03f23bc1f177c88c7209c0fae on openmrs:master**.


[![Coverage Status](https://coveralls.io/builds/13562087/badge)](https://coveralls.io/builds/13562087)

Coverage decreased (-0.03%) to 56.524% when pulling **d97d524865cab7baa75c6c4d080de4a1fd31720b on tenas97:TRUNK-4939** into **f9ca2af33ea246c03f23bc1f177c88c7209c0fae on openmrs:master**.


![Codacy](https://www.codacy.com/assets/images/favicon.png) Here is an overview of what got changed by this pull request:


```diff

Issues
======
- Added 1
           

Complexity increasing per file
==============================
- api/src/main/java/org/openmrs/validator/VisitValidator.java  9
         
```


See the complete overview on [Codacy](https://www.codacy.com/app/openmrs/openmrs-core/pullRequest?prid=795715&bid=4978771)
        

[![Coverage Status](https://coveralls.io/builds/13562594/badge)](https://coveralls.io/builds/13562594)

Coverage increased (+0.02%) to 56.57% when pulling **b696ae2c0c9dca6c63960ba59cb82d5b57987bbd on tenas97:TRUNK-4939** into **f9ca2af33ea246c03f23bc1f177c88c7209c0fae on openmrs:master**.


[![Coverage Status](https://coveralls.io/builds/13562596/badge)](https://coveralls.io/builds/13562596)

Coverage increased (+0.1%) to 56.648% when pulling **b696ae2c0c9dca6c63960ba59cb82d5b57987bbd on tenas97:TRUNK-4939** into **f9ca2af33ea246c03f23bc1f177c88c7209c0fae on openmrs:master**.

Have you looked at the codacy review comments?
Can you also squash the commits into one as advised at? https://wiki.openmrs.org/display/docs/Pull+Request+Tips
Can you just create a new pull request?
Am closing this because it looks messed up. https://wiki.openmrs.org/display/docs/Pull+Request+Tips
Can you fix the ticket link on the pull request?
Instead of "Resolved the ticket" for the pull request text, can you at least use the ticket title?
Did you get a chance to look at this? https://wiki.openmrs.org/display/docs/Pull+Request+Tips
Can you fix the ticket link on this pull request?
Can you also improve the pull request title. At least it could have the same text as the ticket title.
Did you get a chance to look at this? https://wiki.openmrs.org/display/docs/Pull+Request+Tips
Can you fix the ticket link?
Can you also improve the pull request title as per the guidelines at? https://wiki.openmrs.org/display/docs/Pull+Request+Tips
I guess you just forgot to close this in favour of https://github.com/openmrs/openmrs-core/pull/2268
Feel free to correct me if am wrong.
@iranganN did you look into the codacy review comments?
Can you fix the pull request title as per the guidelines at? https://wiki.openmrs.org/display/docs/Pull+Request+Tips

You will also need to squash the commits into one.
Dkayiwa,  I had looked at the link  https://wiki.openmrs.org/display/docs/Pull+Request+Tips and followed accordingly.  Forgive me and perhaps, I don't understand what you want me to do by - "Instead of "Resolved the ticket" for the pull request text, can you at least use the ticket title?"  I am not familiar with openmrs code submitting process.
I have just edited our pull request tips page. Can you take a second look?
Can you fix the ticket link?
Can you also squash the commits into one as advised at? https://wiki.openmrs.org/display/docs/Pull+Request+Tips
Can you add a link to the ticket as advised at? https://wiki.openmrs.org/display/docs/Pull+Request+Tips
Did you look at the codacy-bot review comments?
In core we are going to change subclasses of `BaseOpenmrsData` to extend `BaseChangeableOpenmrsData` instead, likewise subclasses of `BaseOpenmrsMetadata` will extend `BaseChangeableOpenmrsMetadata`. The same will apply for all modules, although it doesn't have to be immediate but will have to once we remove the deprecated code.

![Codacy](https://www.codacy.com/assets/images/favicon.png) Here is an overview of what got changed by this pull request:


```diff

Complexity increasing per file
==============================
- api/src/main/java/org/openmrs/api/impl/EncounterServiceImpl.java  3
         
```


See the complete overview on [Codacy](https://www.codacy.com/app/openmrs/openmrs-core/pullRequest?prid=970382&bid=5501761)
        

[![Coverage Status](https://coveralls.io/builds/13600185/badge)](https://coveralls.io/builds/13600185)

Coverage increased (+0.1%) to 56.653% when pulling **694202584d408ce5c505215ef3815333885a175e on tahiraniazi:Trunk-5062** into **f9ca2af33ea246c03f23bc1f177c88c7209c0fae on openmrs:master**.

@Daniel, who will close the pull request.  If I should close, how do I know the fix has been reviewed and merge into the master?
@SenaniDananjali can you squash these commits into one as described at? https://wiki.openmrs.org/display/docs/Pull+Request+Tips
@RanganaDe can you squash these commits into one as advised at? https://wiki.openmrs.org/display/docs/Pull+Request+Tips

[![Coverage Status](https://coveralls.io/builds/13647662/badge)](https://coveralls.io/builds/13647662)

Coverage decreased (-0.08%) to 56.549% when pulling **b06ae7c76628458e06d06af766d144c05bddfc68 on samuelmale:TRUNK-5094** into **ed0d4cf08d622ed87ccde385e02791a1f0ba122f on openmrs:master**.

Thanks @ravirajmane for your PR, can you please add the ticket number in the ticket description?
Can you remove the unused imports please as codacy is suggesting?
@Nimodi have you looked at the merge conflicts on this?
The ticket link also looks incorrect.
@dkayiwa I am back now. Please take a look at my previous 2 comments (specifically about the unexpected change in test coverage after restructuring and where to modify codacy rules).
@FloBue welcome back! 😊 
Can you also include the ticket url as advised at? https://wiki.openmrs.org/display/docs/Pull+Request+Tips
@DADMahindika are you still working on this?
@SenaniDananjali are you still working on this?
@Nimodi are you still working on this?
@RanganaDe are you still working on this?
I thought I can't make a pull request as this issue is still on "needs
assessment". Shall I make a new pull request squashing all the commits into
one as you asked earlier?

On Tue, Oct 17, 2017 at 1:40 PM, dkayiwa <notifications@github.com> wrote:

> @RanganaDe <https://github.com/ranganade> are you still working on this?
>
> —
> You are receiving this because you were mentioned.
> Reply to this email directly, view it on GitHub
> <https://github.com/openmrs/openmrs-core/pull/2246#issuecomment-337152557>,
> or mute the thread
> <https://github.com/notifications/unsubscribe-auth/AbNoEj1ceROCeKvJiT_gTlDcW7tFQ7LAks5stGDhgaJpZM4Ph9Ul>
> .
>

@RanganaDe can you include the JIRA ticket url?
@tenas97 are you still working on this?
https://issues.openmrs.org/browse/TRUNK-5212

On Tue, Oct 17, 2017 at 1:52 PM, dkayiwa <notifications@github.com> wrote:

> @RanganaDe <https://github.com/ranganade> can you include the JIRA ticket
> url?
>
> —
> You are receiving this because you were mentioned.
> Reply to this email directly, view it on GitHub
> <https://github.com/openmrs/openmrs-core/pull/2246#issuecomment-337155553>,
> or mute the thread
> <https://github.com/notifications/unsubscribe-auth/AbNoEh6LHkTvvj_9RdSXJWnJYoiu6LzUks5stGOxgaJpZM4Ph9Ul>
> .
>

@RanganaDe i have just made it ready for work. Can you now follow the tips at? https://wiki.openmrs.org/display/docs/Pull+Request+Tips
@Kavindi183 did you see the merge conflicts on this pull request?
Just noticed that @wluyima merged this at https://github.com/openmrs/openmrs-core/commit/e9c0b40e15530e5840a2389882acf94d6d120509
@MalithaDilshan are you still working on this?
@dilinisoyza are you still working on this?
@iranganN are you still working on this?

[![Coverage Status](https://coveralls.io/builds/13773350/badge)](https://coveralls.io/builds/13773350)

Coverage decreased (-0.2%) to 56.463% when pulling **9ab39738abd274dfbbb5e6d54b2d20a9baf0212e on jtatia:TRUNK-4755** into **e9c0b40e15530e5840a2389882acf94d6d120509 on openmrs:master**.

@jtatia hopefully you are taking a look at the codacy review comments. 😊 
Thanks @jtatia ! Can you address some of the issues pointed out by codacy e.g unused imports, instantiation of boolean objects. Normally formatting code and organising imports using the IDE shortcuts should get rid of unused imports
@dkayiwa  yes I am, I made some changes a while ago but didn't get any feedback

@tenas97 did you see the codacy review comments?
@dkayiwa Yes I did and I tried resolving most of the issues they raised. I didn't know how to resolve the "magic number" issue that was raised without disrupting the code, so I left it. I figured it wont affect functionality?


[![Coverage Status](https://coveralls.io/builds/13792409/badge)](https://coveralls.io/builds/13792409)

Coverage decreased (-0.1%) to 56.547% when pulling **9ab39738abd274dfbbb5e6d54b2d20a9baf0212e on jtatia:TRUNK-4755** into **e9c0b40e15530e5840a2389882acf94d6d120509 on openmrs:master**.


[![Coverage Status](https://coveralls.io/builds/13802351/badge)](https://coveralls.io/builds/13802351)

Coverage decreased (-0.02%) to 56.535% when pulling **cc711fea48bacafa17abb2d71ec1d05c5db94fcc on wluyima:TRUNK-4917-2** into **42b4339fa95ddaad4918cbc4b976b93af218f414 on openmrs:master**.

@SenaniDananjali what is the ticket number? Can you please include it in the PR's description?
@DADMahindika can you please include the ticket number in the description of the PR?
@dilinisoyza can you please include the ticket number in the description of the pull request?

[![Coverage Status](https://coveralls.io/builds/13818498/badge)](https://coveralls.io/builds/13818498)

Coverage decreased (-0.02%) to 56.538% when pulling **9cba8d063879e5c988d706692045926c962acfa0 on SenaniDananjali:master** into **42b4339fa95ddaad4918cbc4b976b93af218f414 on openmrs:master**.

@ravirajmane what is the ticket number? Can you please include it in the description?
@dkayiwa Thanks, I changed the PR title and added the JIRA link to the top comment

Use the java code which gives authority to user to create a new password.
I changed the code in “invalidcharacterspasswordexception.java” file and two methods are added. getSaltString() method help to create a new password for user for his demo database.
PasswordValidator() method help to validate the password as whether password meet all the requirements or not
I was busy during the last few days. I will take a look at the errors
@ravirajmane am closing this because it has lots going on. Can you ensure that you have the latest upstream changes before creating a new pull request? You could also take a look at this https://wiki.openmrs.org/display/docs/Using+Git

![Codacy](https://www.codacy.com/assets/images/favicon.png) Here is an overview of what got changed by this pull request:


```diff

Issues
======
- Added 1
           

Complexity increasing per file
==============================
- api/src/main/java/org/openmrs/notification/impl/AlertServiceImpl.java  8
         
```


See the complete overview on [Codacy](https://www.codacy.com/app/openmrs/openmrs-core/pullRequest?prid=952361&bid=5449673)
        

[![Coverage Status](https://coveralls.io/builds/13831014/badge)](https://coveralls.io/builds/13831014)

Coverage decreased (-0.1%) to 56.555% when pulling **a2e8b211b8f34e280f0266fab8e79bd14292e2a5 on jaks80:TRUNK-5224** into **e9c0b40e15530e5840a2389882acf94d6d120509 on openmrs:master**.


[![Coverage Status](https://coveralls.io/builds/13831033/badge)](https://coveralls.io/builds/13831033)

Coverage decreased (-0.02%) to 56.636% when pulling **a2e8b211b8f34e280f0266fab8e79bd14292e2a5 on jaks80:TRUNK-5224** into **e9c0b40e15530e5840a2389882acf94d6d120509 on openmrs:master**.

@jaks80 can you use a more meaningful pull request title as advised at? https://wiki.openmrs.org/display/docs/Pull+Request+Tips
@bmamlin I did address the review comments, I think we can merge this along with the change of all subclasses of BaseOpenmrsData and BaseOpenmrsMetadata to extend the new base classes.
@dilinisoyza are you still working on this?
@dilinisoyza are you still working on this?

[![Coverage Status](https://coveralls.io/builds/13856450/badge)](https://coveralls.io/builds/13856450)

Coverage decreased (-0.1%) to 56.541% when pulling **926cd54aa54859ab5c74f5f0fb292b9f3d1440c6 on ravirajmane:patch-1** into **e9c0b40e15530e5840a2389882acf94d6d120509 on openmrs:master**.


[![Coverage Status](https://coveralls.io/builds/13858904/badge)](https://coveralls.io/builds/13858904)

Coverage decreased (-0.03%) to 56.626% when pulling **249de982e25c990ad08ab5e5fe32c90e0f4b9ddf on jaks80:TRUNK-5224** into **e9c0b40e15530e5840a2389882acf94d6d120509 on openmrs:master**.

@wluyima 
I have changed test method according to your suggestion.
OrderGroup.addOrder method is already there and there were lots of tests for it. But its not a static method as you have suggested. I have added only one line in that method to initialize OrderGroup in Order. 
order.setOrderGroup(this);  


[![Coverage Status](https://coveralls.io/builds/13861776/badge)](https://coveralls.io/builds/13861776)

Coverage decreased (-0.01%) to 56.641% when pulling **4ee1b4cde860a1f40d024a8f99274d34ae4f7887 on brensurio:TRUNK-5134** into **e9c0b40e15530e5840a2389882acf94d6d120509 on openmrs:master**.

@vijaybhaskarreddyy there seems to be a lot of changes, some seem like code formatting ones, you might want to clean up the PR first, can you please include a link to the ticket description?
@wluyima I have moved this test to OrderGroupTest.java. And its testing orderGroup.addOrder(firstOrder);
Thank you.
Hi @wluyima I have renamed test Method. Also removed BaseContextSensitiveTest.

Thanks, I'll continue working on this.
Thanks! Looks good!
Hi @wluyima 
I have reverted formatting. Also removed some unused imports. Please have a look. Thanks for your patience.
@wluyima Lisence Header added and Java Doc Removed.
One more thing, can you squash the 8 commits into 1 please? You should refer to the [pull request tips page](https://wiki.openmrs.org/x/KYOfAw) in the future for best practices when creating pull requests to help have your work merged sooner than later.

[![Coverage Status](https://coveralls.io/builds/13893130/badge)](https://coveralls.io/builds/13893130)

Coverage decreased (-0.005%) to 56.648% when pulling **fd9e85125914183a2adf25605890584078171750 on jaks80:TRUNK-5224** into **e9c0b40e15530e5840a2389882acf94d6d120509 on openmrs:master**.

@dilinisoyza ping me to reopen this when you resume working on it.
@DADMahindika ping me to reopen this when you resume working on it.
@SenaniDananjali ping me to reopen this when you resume working on it.
@Nimodi ping me to reopen this when you resume working on it.
@RanganaDe ping me to reopen this when you resume working on it.
@ravirajmane ping me to reopen this when you resume working on it.
@dilinisoyza ping me to reopen this when you resume working on it.
@dilinisoyza ping me to reopen this when you resume working on it.
@Kavindi183 ping me to reopen this when you resume working on it.
@MalithaDilshan ping me to reopen this when you resume working on it.
@ravirajmane can you include a complete link to the ticket as advised at? https://wiki.openmrs.org/display/docs/Pull+Request+Tips

[![Coverage Status](https://coveralls.io/builds/13898650/badge)](https://coveralls.io/builds/13898650)

Coverage decreased (-0.09%) to 56.561% when pulling **62b9d364171eb1efbfcd2ebe5e5ff72f659f5306 on jaks80:TRUNK-5224** into **e9c0b40e15530e5840a2389882acf94d6d120509 on openmrs:master**.


[![Coverage Status](https://coveralls.io/builds/13899082/badge)](https://coveralls.io/builds/13899082)

Coverage decreased (-0.02%) to 56.636% when pulling **f032d23452327384c19641f3b4e91d3b78db0e13 on jaks80:TRUNK-5224** into **e9c0b40e15530e5840a2389882acf94d6d120509 on openmrs:master**.


[![Coverage Status](https://coveralls.io/builds/13899933/badge)](https://coveralls.io/builds/13899933)

Coverage increased (+0.01%) to 56.667% when pulling **8e4bec0542c42b80d42887b52de51fd8491eeec4 on jaks80:TRUNK-5224** into **e9c0b40e15530e5840a2389882acf94d6d120509 on openmrs:master**.

Hi @wluyima 
I have badly messed up commits while Squashing. It was messed up so badly I had to delete entire branch and create new one. I have closed old pull request. New pull Request is  #2284
Hi @wluyima 
I have badly messed up commits while Squashing. It was messed up so badly I had to delete entire branch and create new one. I have closed this(#2280) pull request. New pull Request is  #2284

[![Coverage Status](https://coveralls.io/builds/13901340/badge)](https://coveralls.io/builds/13901340)

Coverage decreased (-0.1%) to 56.543% when pulling **eec655d13da88ce87bbbc86b267c2bb20ea8e2f4 on jaks80:TRUNK-5224** into **e9c0b40e15530e5840a2389882acf94d6d120509 on openmrs:master**.

Actually nowadays github has a squash option when merging, I didn't have to make you do it :)

[![Coverage Status](https://coveralls.io/builds/13921692/badge)](https://coveralls.io/builds/13921692)

Coverage decreased (-0.08%) to 56.551% when pulling **e3b1f27dbc485a05208ea34733bcc9b56a2f656a on brensurio:TRUNK-5134** into **843f9c7e35a492b9ce9c55753daecd384349fb5a on openmrs:master**.

I forgot to squash. I'm working on it.

[![Coverage Status](https://coveralls.io/builds/13922311/badge)](https://coveralls.io/builds/13922311)

Coverage decreased (-0.08%) to 56.557% when pulling **106665f6e7427a002d8704162e544d860b54dd7f on brensurio:TRUNK-5134** into **843f9c7e35a492b9ce9c55753daecd384349fb5a on openmrs:master**.

I removed the slashes mentioned in review comment. For that, I used `Paths.get()` then converted it to string in order to still use `File` constructor as specified from the ticket.
You need to get rid of forward slashes in all paths.

![Codacy](https://www.codacy.com/assets/images/favicon.png) Here is an overview of what got changed by this pull request:


```diff

Issues
======
- Added 10
           

Complexity increasing per file
==============================
- api/src/main/java/org/openmrs/api/impl/ProgramWorkflowServiceImpl.java  7
- api/src/main/java/org/openmrs/api/db/hibernate/HibernateProgramWorkflowDAO.java  7
- api/src/main/java/org/openmrs/PatientProgram.java  6
         
```


See the complete overview on [Codacy](https://www.codacy.com/app/openmrs/openmrs-core/pullRequest?prid=1001441&bid=5586991)
        

![Codacy](https://www.codacy.com/assets/images/favicon.png) Here is an overview of what got changed by this pull request:


```diff

Issues
======
+ Solved 29
- Added 31
           

Complexity increasing per file
==============================
- api/src/main/java/org/openmrs/validator/CohortValidator.java  3
- api/src/main/java/org/openmrs/CohortMembership.java  6
- api/src/main/java/org/openmrs/module/ModuleClassLoader.java  2
- api/src/main/java/org/openmrs/hl7/impl/HL7ServiceImpl.java  4
- api/src/main/java/org/openmrs/api/impl/ObsServiceImpl.java  7
- api/src/main/java/org/openmrs/api/impl/CohortServiceImpl.java  1
- api/src/main/java/org/openmrs/api/db/hibernate/ImmutableEntityInterceptor.java  1
- api/src/main/java/org/openmrs/api/db/hibernate/HibernateObsDAO.java  2
- api/src/main/java/org/openmrs/api/db/hibernate/HibernateCohortDAO.java  6
- api/src/main/java/org/openmrs/api/db/hibernate/DropMillisecondsHibernateInterceptor.java  1
- api/src/main/java/org/openmrs/api/context/ServiceContext.java  1
- api/src/main/java/org/openmrs/annotation/OpenmrsProfileExcludeFilter.java  2
- api/src/main/java/org/openmrs/Obs.java  4
- api/src/main/java/org/openmrs/Concept.java  1
         

Complexity decreasing per file
==============================
+ api/src/main/java/org/openmrs/api/impl/OrderServiceImpl.java  -8
+ api/src/main/java/org/openmrs/api/context/UserContext.java  -4
+ api/src/main/java/org/openmrs/Person.java  -6
+ api/src/main/java/org/openmrs/Cohort.java  -2
         
```


See the complete overview on [Codacy](https://www.codacy.com/app/openmrs/openmrs-core/pullRequest?prid=1014731&bid=5629868)
        
@iranganN ping me to reopen this when you resume working on it.
@jtatia did you look at the codacy review comments?
@vijaybhaskarreddyy closing this because of merge conflicts. Can you create a new pull request? Am assuming you got a chance to look at this: https://wiki.openmrs.org/display/docs/Pull+Request+Tips
@ravirajmane did you see the comment i put above?
Yes @dkayiwa. This PR is not ready for review. Still need to make a few more changes. I'll try to get it done by tomorrow. 

[![Coverage Status](https://coveralls.io/builds/13992390/badge)](https://coveralls.io/builds/13992390)

Coverage decreased (-0.1%) to 56.532% when pulling **789f41bc59cd1e75a6a0559f994b628f263e1e91 on tetiana-horobets:GCI-178** into **843f9c7e35a492b9ce9c55753daecd384349fb5a on openmrs:master**.

Thanks @tetiana-horobets 😊 
@dkayiwa Hello Daniel, what about the status of this PR? I would like to get it done if possible. I've commented on everything that still fails (and why I think it's not a problem on my side) in my previous comments. But if you find anything I should correct, please let me know.
@FloBue when you say "everything that still fails", do you mean failing tests?
@dkayiwa No, not at all. At least not if you figured out the problem with the parallel tests in maven, but all tests pass if run separately. I'm just talking about the checks here, codacy (we talked about that already, the caps constants) and the coverage/coveralls. I really don't understand the coverage decrease, since there was a coverage increase with my original PR. I restructured it as you asked, which didn't change anything in terms of functionality and tests. It now marks some lines as untested which are actually tested (I've checked it manually that they still get run). I currently assume that is the reason for the coverage decrease. Everything else should be fine.
@dkayiwa , @rkorytkowski do you mind merging this PR after you review it? I need to do the next step of changing domain objects to extend `BaseChangeableOpenmrsData` or `BaseChangeableOpenmrsMetadata` instead.
@ravirajmane ping me to reopen when you respond to the above.
@wluyima will it take you much time to squash these commits into one? I find it easier to review one commit than multiple, especially when they are followup commits to address earlier review comments.
@dkayiwa you shouldn't be looking at individual commits, the PR shows them as one
Aren't you viewing all the changes as one in **[Files changed](https://github.com/openmrs/openmrs-core/pull/2245/files)** tab on the PR?
